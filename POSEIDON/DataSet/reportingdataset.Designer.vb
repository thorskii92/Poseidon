'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("reportingdataset"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class reportingdataset
    Inherits Global.System.Data.DataSet
    
    Private tableORDataset As ORDatasetDataTable
    
    Private tableCollectionNotice As CollectionNoticeDataTable
    
    Private tableBillNotice As BillNoticeDataTable
    
    Private tableORDataTable As ORDataTableDataTable
    
    Private tableDailyReportDataSet As DailyReportDataSetDataTable
    
    Private tablebillAdjustmentRequest As billAdjustmentRequestDataTable
    
    Private tableDailyCollection As DailyCollectionDataTable
    
    Private tableReaderList As ReaderListDataTable
    
    Private tableMonthlyReport As MonthlyReportDataTable
    
    Private tableBillingStatement As BillingStatementDataTable
    
    Private tableReadingList As ReadingListDataTable
    
    Private tableStatementOfAccount As StatementOfAccountDataTable
    
    Private tablePendingDisconnection As PendingDisconnectionDataTable
    
    Private tableSOADataSet As SOADataSetDataTable
    
    Private tableSCDSRep As SCDSRepDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ORDataset")) Is Nothing) Then
                MyBase.Tables.Add(New ORDatasetDataTable(ds.Tables("ORDataset")))
            End If
            If (Not (ds.Tables("CollectionNotice")) Is Nothing) Then
                MyBase.Tables.Add(New CollectionNoticeDataTable(ds.Tables("CollectionNotice")))
            End If
            If (Not (ds.Tables("BillNotice")) Is Nothing) Then
                MyBase.Tables.Add(New BillNoticeDataTable(ds.Tables("BillNotice")))
            End If
            If (Not (ds.Tables("ORDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New ORDataTableDataTable(ds.Tables("ORDataTable")))
            End If
            If (Not (ds.Tables("DailyReportDataSet")) Is Nothing) Then
                MyBase.Tables.Add(New DailyReportDataSetDataTable(ds.Tables("DailyReportDataSet")))
            End If
            If (Not (ds.Tables("billAdjustmentRequest")) Is Nothing) Then
                MyBase.Tables.Add(New billAdjustmentRequestDataTable(ds.Tables("billAdjustmentRequest")))
            End If
            If (Not (ds.Tables("DailyCollection")) Is Nothing) Then
                MyBase.Tables.Add(New DailyCollectionDataTable(ds.Tables("DailyCollection")))
            End If
            If (Not (ds.Tables("ReaderList")) Is Nothing) Then
                MyBase.Tables.Add(New ReaderListDataTable(ds.Tables("ReaderList")))
            End If
            If (Not (ds.Tables("MonthlyReport")) Is Nothing) Then
                MyBase.Tables.Add(New MonthlyReportDataTable(ds.Tables("MonthlyReport")))
            End If
            If (Not (ds.Tables("BillingStatement")) Is Nothing) Then
                MyBase.Tables.Add(New BillingStatementDataTable(ds.Tables("BillingStatement")))
            End If
            If (Not (ds.Tables("ReadingList")) Is Nothing) Then
                MyBase.Tables.Add(New ReadingListDataTable(ds.Tables("ReadingList")))
            End If
            If (Not (ds.Tables("StatementOfAccount")) Is Nothing) Then
                MyBase.Tables.Add(New StatementOfAccountDataTable(ds.Tables("StatementOfAccount")))
            End If
            If (Not (ds.Tables("PendingDisconnection")) Is Nothing) Then
                MyBase.Tables.Add(New PendingDisconnectionDataTable(ds.Tables("PendingDisconnection")))
            End If
            If (Not (ds.Tables("SOADataSet")) Is Nothing) Then
                MyBase.Tables.Add(New SOADataSetDataTable(ds.Tables("SOADataSet")))
            End If
            If (Not (ds.Tables("SCDSRep")) Is Nothing) Then
                MyBase.Tables.Add(New SCDSRepDataTable(ds.Tables("SCDSRep")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ORDataset() As ORDatasetDataTable
        Get
            Return Me.tableORDataset
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CollectionNotice() As CollectionNoticeDataTable
        Get
            Return Me.tableCollectionNotice
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BillNotice() As BillNoticeDataTable
        Get
            Return Me.tableBillNotice
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ORDataTable() As ORDataTableDataTable
        Get
            Return Me.tableORDataTable
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DailyReportDataSet() As DailyReportDataSetDataTable
        Get
            Return Me.tableDailyReportDataSet
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property billAdjustmentRequest() As billAdjustmentRequestDataTable
        Get
            Return Me.tablebillAdjustmentRequest
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DailyCollection() As DailyCollectionDataTable
        Get
            Return Me.tableDailyCollection
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ReaderList() As ReaderListDataTable
        Get
            Return Me.tableReaderList
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MonthlyReport() As MonthlyReportDataTable
        Get
            Return Me.tableMonthlyReport
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BillingStatement() As BillingStatementDataTable
        Get
            Return Me.tableBillingStatement
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ReadingList() As ReadingListDataTable
        Get
            Return Me.tableReadingList
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property StatementOfAccount() As StatementOfAccountDataTable
        Get
            Return Me.tableStatementOfAccount
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PendingDisconnection() As PendingDisconnectionDataTable
        Get
            Return Me.tablePendingDisconnection
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SOADataSet() As SOADataSetDataTable
        Get
            Return Me.tableSOADataSet
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SCDSRep() As SCDSRepDataTable
        Get
            Return Me.tableSCDSRep
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As reportingdataset = CType(MyBase.Clone,reportingdataset)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ORDataset")) Is Nothing) Then
                MyBase.Tables.Add(New ORDatasetDataTable(ds.Tables("ORDataset")))
            End If
            If (Not (ds.Tables("CollectionNotice")) Is Nothing) Then
                MyBase.Tables.Add(New CollectionNoticeDataTable(ds.Tables("CollectionNotice")))
            End If
            If (Not (ds.Tables("BillNotice")) Is Nothing) Then
                MyBase.Tables.Add(New BillNoticeDataTable(ds.Tables("BillNotice")))
            End If
            If (Not (ds.Tables("ORDataTable")) Is Nothing) Then
                MyBase.Tables.Add(New ORDataTableDataTable(ds.Tables("ORDataTable")))
            End If
            If (Not (ds.Tables("DailyReportDataSet")) Is Nothing) Then
                MyBase.Tables.Add(New DailyReportDataSetDataTable(ds.Tables("DailyReportDataSet")))
            End If
            If (Not (ds.Tables("billAdjustmentRequest")) Is Nothing) Then
                MyBase.Tables.Add(New billAdjustmentRequestDataTable(ds.Tables("billAdjustmentRequest")))
            End If
            If (Not (ds.Tables("DailyCollection")) Is Nothing) Then
                MyBase.Tables.Add(New DailyCollectionDataTable(ds.Tables("DailyCollection")))
            End If
            If (Not (ds.Tables("ReaderList")) Is Nothing) Then
                MyBase.Tables.Add(New ReaderListDataTable(ds.Tables("ReaderList")))
            End If
            If (Not (ds.Tables("MonthlyReport")) Is Nothing) Then
                MyBase.Tables.Add(New MonthlyReportDataTable(ds.Tables("MonthlyReport")))
            End If
            If (Not (ds.Tables("BillingStatement")) Is Nothing) Then
                MyBase.Tables.Add(New BillingStatementDataTable(ds.Tables("BillingStatement")))
            End If
            If (Not (ds.Tables("ReadingList")) Is Nothing) Then
                MyBase.Tables.Add(New ReadingListDataTable(ds.Tables("ReadingList")))
            End If
            If (Not (ds.Tables("StatementOfAccount")) Is Nothing) Then
                MyBase.Tables.Add(New StatementOfAccountDataTable(ds.Tables("StatementOfAccount")))
            End If
            If (Not (ds.Tables("PendingDisconnection")) Is Nothing) Then
                MyBase.Tables.Add(New PendingDisconnectionDataTable(ds.Tables("PendingDisconnection")))
            End If
            If (Not (ds.Tables("SOADataSet")) Is Nothing) Then
                MyBase.Tables.Add(New SOADataSetDataTable(ds.Tables("SOADataSet")))
            End If
            If (Not (ds.Tables("SCDSRep")) Is Nothing) Then
                MyBase.Tables.Add(New SCDSRepDataTable(ds.Tables("SCDSRep")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableORDataset = CType(MyBase.Tables("ORDataset"),ORDatasetDataTable)
        If (initTable = true) Then
            If (Not (Me.tableORDataset) Is Nothing) Then
                Me.tableORDataset.InitVars
            End If
        End If
        Me.tableCollectionNotice = CType(MyBase.Tables("CollectionNotice"),CollectionNoticeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCollectionNotice) Is Nothing) Then
                Me.tableCollectionNotice.InitVars
            End If
        End If
        Me.tableBillNotice = CType(MyBase.Tables("BillNotice"),BillNoticeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBillNotice) Is Nothing) Then
                Me.tableBillNotice.InitVars
            End If
        End If
        Me.tableORDataTable = CType(MyBase.Tables("ORDataTable"),ORDataTableDataTable)
        If (initTable = true) Then
            If (Not (Me.tableORDataTable) Is Nothing) Then
                Me.tableORDataTable.InitVars
            End If
        End If
        Me.tableDailyReportDataSet = CType(MyBase.Tables("DailyReportDataSet"),DailyReportDataSetDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDailyReportDataSet) Is Nothing) Then
                Me.tableDailyReportDataSet.InitVars
            End If
        End If
        Me.tablebillAdjustmentRequest = CType(MyBase.Tables("billAdjustmentRequest"),billAdjustmentRequestDataTable)
        If (initTable = true) Then
            If (Not (Me.tablebillAdjustmentRequest) Is Nothing) Then
                Me.tablebillAdjustmentRequest.InitVars
            End If
        End If
        Me.tableDailyCollection = CType(MyBase.Tables("DailyCollection"),DailyCollectionDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDailyCollection) Is Nothing) Then
                Me.tableDailyCollection.InitVars
            End If
        End If
        Me.tableReaderList = CType(MyBase.Tables("ReaderList"),ReaderListDataTable)
        If (initTable = true) Then
            If (Not (Me.tableReaderList) Is Nothing) Then
                Me.tableReaderList.InitVars
            End If
        End If
        Me.tableMonthlyReport = CType(MyBase.Tables("MonthlyReport"),MonthlyReportDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMonthlyReport) Is Nothing) Then
                Me.tableMonthlyReport.InitVars
            End If
        End If
        Me.tableBillingStatement = CType(MyBase.Tables("BillingStatement"),BillingStatementDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBillingStatement) Is Nothing) Then
                Me.tableBillingStatement.InitVars
            End If
        End If
        Me.tableReadingList = CType(MyBase.Tables("ReadingList"),ReadingListDataTable)
        If (initTable = true) Then
            If (Not (Me.tableReadingList) Is Nothing) Then
                Me.tableReadingList.InitVars
            End If
        End If
        Me.tableStatementOfAccount = CType(MyBase.Tables("StatementOfAccount"),StatementOfAccountDataTable)
        If (initTable = true) Then
            If (Not (Me.tableStatementOfAccount) Is Nothing) Then
                Me.tableStatementOfAccount.InitVars
            End If
        End If
        Me.tablePendingDisconnection = CType(MyBase.Tables("PendingDisconnection"),PendingDisconnectionDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePendingDisconnection) Is Nothing) Then
                Me.tablePendingDisconnection.InitVars
            End If
        End If
        Me.tableSOADataSet = CType(MyBase.Tables("SOADataSet"),SOADataSetDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSOADataSet) Is Nothing) Then
                Me.tableSOADataSet.InitVars
            End If
        End If
        Me.tableSCDSRep = CType(MyBase.Tables("SCDSRep"),SCDSRepDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSCDSRep) Is Nothing) Then
                Me.tableSCDSRep.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "reportingdataset"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/reportingdataset.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableORDataset = New ORDatasetDataTable()
        MyBase.Tables.Add(Me.tableORDataset)
        Me.tableCollectionNotice = New CollectionNoticeDataTable()
        MyBase.Tables.Add(Me.tableCollectionNotice)
        Me.tableBillNotice = New BillNoticeDataTable()
        MyBase.Tables.Add(Me.tableBillNotice)
        Me.tableORDataTable = New ORDataTableDataTable()
        MyBase.Tables.Add(Me.tableORDataTable)
        Me.tableDailyReportDataSet = New DailyReportDataSetDataTable()
        MyBase.Tables.Add(Me.tableDailyReportDataSet)
        Me.tablebillAdjustmentRequest = New billAdjustmentRequestDataTable()
        MyBase.Tables.Add(Me.tablebillAdjustmentRequest)
        Me.tableDailyCollection = New DailyCollectionDataTable()
        MyBase.Tables.Add(Me.tableDailyCollection)
        Me.tableReaderList = New ReaderListDataTable()
        MyBase.Tables.Add(Me.tableReaderList)
        Me.tableMonthlyReport = New MonthlyReportDataTable()
        MyBase.Tables.Add(Me.tableMonthlyReport)
        Me.tableBillingStatement = New BillingStatementDataTable()
        MyBase.Tables.Add(Me.tableBillingStatement)
        Me.tableReadingList = New ReadingListDataTable()
        MyBase.Tables.Add(Me.tableReadingList)
        Me.tableStatementOfAccount = New StatementOfAccountDataTable()
        MyBase.Tables.Add(Me.tableStatementOfAccount)
        Me.tablePendingDisconnection = New PendingDisconnectionDataTable()
        MyBase.Tables.Add(Me.tablePendingDisconnection)
        Me.tableSOADataSet = New SOADataSetDataTable()
        MyBase.Tables.Add(Me.tableSOADataSet)
        Me.tableSCDSRep = New SCDSRepDataTable()
        MyBase.Tables.Add(Me.tableSCDSRep)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeORDataset() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCollectionNotice() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeBillNotice() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeORDataTable() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeDailyReportDataSet() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializebillAdjustmentRequest() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeDailyCollection() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeReaderList() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMonthlyReport() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeBillingStatement() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeReadingList() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeStatementOfAccount() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePendingDisconnection() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSOADataSet() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSCDSRep() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As reportingdataset = New reportingdataset()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ORDatasetRowChangeEventHandler(ByVal sender As Object, ByVal e As ORDatasetRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CollectionNoticeRowChangeEventHandler(ByVal sender As Object, ByVal e As CollectionNoticeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub BillNoticeRowChangeEventHandler(ByVal sender As Object, ByVal e As BillNoticeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ORDataTableRowChangeEventHandler(ByVal sender As Object, ByVal e As ORDataTableRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub DailyReportDataSetRowChangeEventHandler(ByVal sender As Object, ByVal e As DailyReportDataSetRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub billAdjustmentRequestRowChangeEventHandler(ByVal sender As Object, ByVal e As billAdjustmentRequestRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub DailyCollectionRowChangeEventHandler(ByVal sender As Object, ByVal e As DailyCollectionRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ReaderListRowChangeEventHandler(ByVal sender As Object, ByVal e As ReaderListRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MonthlyReportRowChangeEventHandler(ByVal sender As Object, ByVal e As MonthlyReportRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub BillingStatementRowChangeEventHandler(ByVal sender As Object, ByVal e As BillingStatementRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ReadingListRowChangeEventHandler(ByVal sender As Object, ByVal e As ReadingListRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub StatementOfAccountRowChangeEventHandler(ByVal sender As Object, ByVal e As StatementOfAccountRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PendingDisconnectionRowChangeEventHandler(ByVal sender As Object, ByVal e As PendingDisconnectionRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SOADataSetRowChangeEventHandler(ByVal sender As Object, ByVal e As SOADataSetRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SCDSRepRowChangeEventHandler(ByVal sender As Object, ByVal e As SCDSRepRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ORDatasetDataTable
        Inherits Global.System.Data.TypedTableBase(Of ORDatasetRow)
        
        Private columnpID As Global.System.Data.DataColumn
        
        Private columncID As Global.System.Data.DataColumn
        
        Private columnORNumber As Global.System.Data.DataColumn
        
        Private columnpAmount As Global.System.Data.DataColumn
        
        Private columnAcctCode As Global.System.Data.DataColumn
        
        Private columnorID As Global.System.Data.DataColumn
        
        Private columnORNum As Global.System.Data.DataColumn
        
        Private columntotalPayment As Global.System.Data.DataColumn
        
        Private columnpType As Global.System.Data.DataColumn
        
        Private columnnumpayment As Global.System.Data.DataColumn
        
        Private columndatepayment As Global.System.Data.DataColumn
        
        Private columndraweepayment As Global.System.Data.DataColumn
        
        Private columnuID As Global.System.Data.DataColumn
        
        Private columnamountinwords As Global.System.Data.DataColumn
        
        Private columnuID1 As Global.System.Data.DataColumn
        
        Private columnuname As Global.System.Data.DataColumn
        
        Private columnupass As Global.System.Data.DataColumn
        
        Private columnfullname As Global.System.Data.DataColumn
        
        Private columnutypeid As Global.System.Data.DataColumn
        
        Private columnpdate As Global.System.Data.DataColumn
        
        Private columncID1 As Global.System.Data.DataColumn
        
        Private columnFName As Global.System.Data.DataColumn
        
        Private columnMName As Global.System.Data.DataColumn
        
        Private columnLName As Global.System.Data.DataColumn
        
        Private columnCNum As Global.System.Data.DataColumn
        
        Private columnAddress As Global.System.Data.DataColumn
        
        Private columnbrgyID As Global.System.Data.DataColumn
        
        Private columncollectionnature As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ORDataset"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcctCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcctCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property orIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalPaymentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotalPayment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property numpaymentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnumpayment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property datepaymentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndatepayment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property draweepaymentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndraweepayment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property uIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amountinwordsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamountinwords
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property uID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnuID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property unameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property upassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fullnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfullname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property utypeidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnutypeid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property brgyIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbrgyID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property collectionnatureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncollectionnature
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ORDatasetRow
            Get
                Return CType(Me.Rows(index),ORDatasetRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ORDatasetRowChanging As ORDatasetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ORDatasetRowChanged As ORDatasetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ORDatasetRowDeleting As ORDatasetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ORDatasetRowDeleted As ORDatasetRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddORDatasetRow(ByVal row As ORDatasetRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddORDatasetRow( _
                    ByVal cID As Integer,  _
                    ByVal ORNumber As String,  _
                    ByVal pAmount As Double,  _
                    ByVal AcctCode As String,  _
                    ByVal ORNum As String,  _
                    ByVal totalPayment As Double,  _
                    ByVal pType As String,  _
                    ByVal numpayment As String,  _
                    ByVal datepayment As Date,  _
                    ByVal draweepayment As String,  _
                    ByVal uID As Integer,  _
                    ByVal amountinwords As String,  _
                    ByVal uname As String,  _
                    ByVal upass As String,  _
                    ByVal fullname As String,  _
                    ByVal utypeid As Integer,  _
                    ByVal pdate As Date,  _
                    ByVal FName As String,  _
                    ByVal MName As String,  _
                    ByVal LName As String,  _
                    ByVal CNum As String,  _
                    ByVal Address As String,  _
                    ByVal brgyID As Integer,  _
                    ByVal collectionnature As String) As ORDatasetRow
            Dim rowORDatasetRow As ORDatasetRow = CType(Me.NewRow,ORDatasetRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, cID, ORNumber, pAmount, AcctCode, Nothing, ORNum, totalPayment, pType, numpayment, datepayment, draweepayment, uID, amountinwords, Nothing, uname, upass, fullname, utypeid, pdate, Nothing, FName, MName, LName, CNum, Address, brgyID, collectionnature}
            rowORDatasetRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowORDatasetRow)
            Return rowORDatasetRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ORDatasetDataTable = CType(MyBase.Clone,ORDatasetDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ORDatasetDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnpID = MyBase.Columns("pID")
            Me.columncID = MyBase.Columns("cID")
            Me.columnORNumber = MyBase.Columns("ORNumber")
            Me.columnpAmount = MyBase.Columns("pAmount")
            Me.columnAcctCode = MyBase.Columns("AcctCode")
            Me.columnorID = MyBase.Columns("orID")
            Me.columnORNum = MyBase.Columns("ORNum")
            Me.columntotalPayment = MyBase.Columns("totalPayment")
            Me.columnpType = MyBase.Columns("pType")
            Me.columnnumpayment = MyBase.Columns("numpayment")
            Me.columndatepayment = MyBase.Columns("datepayment")
            Me.columndraweepayment = MyBase.Columns("draweepayment")
            Me.columnuID = MyBase.Columns("uID")
            Me.columnamountinwords = MyBase.Columns("amountinwords")
            Me.columnuID1 = MyBase.Columns("uID1")
            Me.columnuname = MyBase.Columns("uname")
            Me.columnupass = MyBase.Columns("upass")
            Me.columnfullname = MyBase.Columns("fullname")
            Me.columnutypeid = MyBase.Columns("utypeid")
            Me.columnpdate = MyBase.Columns("pdate")
            Me.columncID1 = MyBase.Columns("cID1")
            Me.columnFName = MyBase.Columns("FName")
            Me.columnMName = MyBase.Columns("MName")
            Me.columnLName = MyBase.Columns("LName")
            Me.columnCNum = MyBase.Columns("CNum")
            Me.columnAddress = MyBase.Columns("Address")
            Me.columnbrgyID = MyBase.Columns("brgyID")
            Me.columncollectionnature = MyBase.Columns("collectionnature")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnpID = New Global.System.Data.DataColumn("pID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpID)
            Me.columncID = New Global.System.Data.DataColumn("cID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncID)
            Me.columnORNumber = New Global.System.Data.DataColumn("ORNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORNumber)
            Me.columnpAmount = New Global.System.Data.DataColumn("pAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpAmount)
            Me.columnAcctCode = New Global.System.Data.DataColumn("AcctCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcctCode)
            Me.columnorID = New Global.System.Data.DataColumn("orID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorID)
            Me.columnORNum = New Global.System.Data.DataColumn("ORNum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORNum)
            Me.columntotalPayment = New Global.System.Data.DataColumn("totalPayment", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotalPayment)
            Me.columnpType = New Global.System.Data.DataColumn("pType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpType)
            Me.columnnumpayment = New Global.System.Data.DataColumn("numpayment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnumpayment)
            Me.columndatepayment = New Global.System.Data.DataColumn("datepayment", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndatepayment)
            Me.columndraweepayment = New Global.System.Data.DataColumn("draweepayment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndraweepayment)
            Me.columnuID = New Global.System.Data.DataColumn("uID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuID)
            Me.columnamountinwords = New Global.System.Data.DataColumn("amountinwords", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamountinwords)
            Me.columnuID1 = New Global.System.Data.DataColumn("uID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuID1)
            Me.columnuname = New Global.System.Data.DataColumn("uname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuname)
            Me.columnupass = New Global.System.Data.DataColumn("upass", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupass)
            Me.columnfullname = New Global.System.Data.DataColumn("fullname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfullname)
            Me.columnutypeid = New Global.System.Data.DataColumn("utypeid", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnutypeid)
            Me.columnpdate = New Global.System.Data.DataColumn("pdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpdate)
            Me.columncID1 = New Global.System.Data.DataColumn("cID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncID1)
            Me.columnFName = New Global.System.Data.DataColumn("FName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFName)
            Me.columnMName = New Global.System.Data.DataColumn("MName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMName)
            Me.columnLName = New Global.System.Data.DataColumn("LName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLName)
            Me.columnCNum = New Global.System.Data.DataColumn("CNum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCNum)
            Me.columnAddress = New Global.System.Data.DataColumn("Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress)
            Me.columnbrgyID = New Global.System.Data.DataColumn("brgyID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbrgyID)
            Me.columncollectionnature = New Global.System.Data.DataColumn("collectionnature", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncollectionnature)
            Me.columnpID.AutoIncrement = true
            Me.columnpID.AutoIncrementSeed = -1
            Me.columnpID.AutoIncrementStep = -1
            Me.columnpID.AllowDBNull = false
            Me.columnORNumber.MaxLength = 45
            Me.columnAcctCode.MaxLength = 45
            Me.columnorID.AutoIncrement = true
            Me.columnorID.AutoIncrementSeed = -1
            Me.columnorID.AutoIncrementStep = -1
            Me.columnORNum.MaxLength = 45
            Me.columnpType.MaxLength = 45
            Me.columnnumpayment.MaxLength = 45
            Me.columndraweepayment.MaxLength = 100
            Me.columnamountinwords.MaxLength = 1000
            Me.columnuID1.AutoIncrement = true
            Me.columnuID1.AutoIncrementSeed = -1
            Me.columnuID1.AutoIncrementStep = -1
            Me.columnuname.MaxLength = 45
            Me.columnupass.MaxLength = 45
            Me.columnfullname.MaxLength = 45
            Me.columncID1.AutoIncrement = true
            Me.columncID1.AutoIncrementSeed = -1
            Me.columncID1.AutoIncrementStep = -1
            Me.columnFName.MaxLength = 100
            Me.columnMName.MaxLength = 100
            Me.columnLName.MaxLength = 100
            Me.columnCNum.MaxLength = 40
            Me.columnAddress.MaxLength = 100
            Me.columncollectionnature.MaxLength = 300
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewORDatasetRow() As ORDatasetRow
            Return CType(Me.NewRow,ORDatasetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ORDatasetRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ORDatasetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ORDatasetRowChangedEvent) Is Nothing) Then
                RaiseEvent ORDatasetRowChanged(Me, New ORDatasetRowChangeEvent(CType(e.Row,ORDatasetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ORDatasetRowChangingEvent) Is Nothing) Then
                RaiseEvent ORDatasetRowChanging(Me, New ORDatasetRowChangeEvent(CType(e.Row,ORDatasetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ORDatasetRowDeletedEvent) Is Nothing) Then
                RaiseEvent ORDatasetRowDeleted(Me, New ORDatasetRowChangeEvent(CType(e.Row,ORDatasetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ORDatasetRowDeletingEvent) Is Nothing) Then
                RaiseEvent ORDatasetRowDeleting(Me, New ORDatasetRowChangeEvent(CType(e.Row,ORDatasetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveORDatasetRow(ByVal row As ORDatasetRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As reportingdataset = New reportingdataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ORDatasetDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CollectionNoticeDataTable
        Inherits Global.System.Data.TypedTableBase(Of CollectionNoticeRow)
        
        Private columnmetID As Global.System.Data.DataColumn
        
        Private columnacctID As Global.System.Data.DataColumn
        
        Private columnconsID As Global.System.Data.DataColumn
        
        Private columnclassID As Global.System.Data.DataColumn
        
        Private columnReference As Global.System.Data.DataColumn
        
        Private columnReading As Global.System.Data.DataColumn
        
        Private columnConsumed As Global.System.Data.DataColumn
        
        Private columnAmount As Global.System.Data.DataColumn
        
        Private columnPrevBal As Global.System.Data.DataColumn
        
        Private columnTotAmount As Global.System.Data.DataColumn
        
        Private columnDueAmount As Global.System.Data.DataColumn
        
        Private columnReadDate As Global.System.Data.DataColumn
        
        Private columnDateOfAccess As Global.System.Data.DataColumn
        
        Private columnuID As Global.System.Data.DataColumn
        
        Private columnzoneID As Global.System.Data.DataColumn
        
        Private columnclusterNum As Global.System.Data.DataColumn
        
        Private columnsequenceNum As Global.System.Data.DataColumn
        
        Private columnReadPerFrom As Global.System.Data.DataColumn
        
        Private columnReadPerTo As Global.System.Data.DataColumn
        
        Private columnReadPerYear As Global.System.Data.DataColumn
        
        Private columnMetStatus As Global.System.Data.DataColumn
        
        Private columnDueDate As Global.System.Data.DataColumn
        
        Private columnpaymentDate As Global.System.Data.DataColumn
        
        Private columnacctID1 As Global.System.Data.DataColumn
        
        Private columnconsID1 As Global.System.Data.DataColumn
        
        Private columnclassID1 As Global.System.Data.DataColumn
        
        Private columnbrgyID As Global.System.Data.DataColumn
        
        Private columnclusterID As Global.System.Data.DataColumn
        
        Private columnSequence As Global.System.Data.DataColumn
        
        Private columnAccountNo As Global.System.Data.DataColumn
        
        Private columnreceiptNo As Global.System.Data.DataColumn
        
        Private columnStreetAddress As Global.System.Data.DataColumn
        
        Private columnMeterNo As Global.System.Data.DataColumn
        
        Private columnMeterBrand As Global.System.Data.DataColumn
        
        Private columnMeterSize As Global.System.Data.DataColumn
        
        Private columnMeterReference As Global.System.Data.DataColumn
        
        Private columnConnectionDate As Global.System.Data.DataColumn
        
        Private columnAcctStatus As Global.System.Data.DataColumn
        
        Private columnCanDelete As Global.System.Data.DataColumn
        
        Private columnconsID2 As Global.System.Data.DataColumn
        
        Private columnConsumerName As Global.System.Data.DataColumn
        
        Private columncAddress As Global.System.Data.DataColumn
        
        Private columncontactNum As Global.System.Data.DataColumn
        
        Private columnclassID2 As Global.System.Data.DataColumn
        
        Private columnclassification As Global.System.Data.DataColumn
        
        Private columnclasscode As Global.System.Data.DataColumn
        
        Private columnisbulk As Global.System.Data.DataColumn
        
        Private columndateFrom As Global.System.Data.DataColumn
        
        Private columndateTo As Global.System.Data.DataColumn
        
        Private columnbrgyID1 As Global.System.Data.DataColumn
        
        Private columnZoneID1 As Global.System.Data.DataColumn
        
        Private columnAddBrgy As Global.System.Data.DataColumn
        
        Private columnbrgyCode As Global.System.Data.DataColumn
        
        Private columnClusterSize As Global.System.Data.DataColumn
        
        Private columnbClass As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CollectionNotice"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property metIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmetID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acctIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnacctID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property classIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclassID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReferenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReference
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReadingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReading
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConsumedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConsumed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrevBalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevBal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DueAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDueAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReadDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReadDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateOfAccessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateOfAccess
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property uIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property zoneIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzoneID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clusterNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclusterNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sequenceNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsequenceNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReadPerFromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReadPerFrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReadPerToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReadPerTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReadPerYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReadPerYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MetStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMetStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DueDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDueDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property paymentDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpaymentDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acctID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnacctID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property classID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnclassID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property brgyIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbrgyID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clusterIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclusterID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SequenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSequence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property receiptNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreceiptNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StreetAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStreetAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeterNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeterNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeterBrandColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeterBrand
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeterSizeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeterSize
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeterReferenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeterReference
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConnectionDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConnectionDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcctStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcctStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CanDeleteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCanDelete
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consID2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsID2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConsumerNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConsumerName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contactNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontactNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property classID2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnclassID2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property classificationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclassification
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property classcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclasscode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property isbulkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisbulk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dateFromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndateFrom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dateToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndateTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property brgyID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnbrgyID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZoneID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnZoneID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AddBrgyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddBrgy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property brgyCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbrgyCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClusterSizeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClusterSize
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property bClassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbClass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CollectionNoticeRow
            Get
                Return CType(Me.Rows(index),CollectionNoticeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CollectionNoticeRowChanging As CollectionNoticeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CollectionNoticeRowChanged As CollectionNoticeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CollectionNoticeRowDeleting As CollectionNoticeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CollectionNoticeRowDeleted As CollectionNoticeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCollectionNoticeRow(ByVal row As CollectionNoticeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCollectionNoticeRow( _
                    ByVal acctID As Integer,  _
                    ByVal consID As Integer,  _
                    ByVal classID As Integer,  _
                    ByVal Reference As String,  _
                    ByVal Reading As String,  _
                    ByVal Consumed As Integer,  _
                    ByVal Amount As Double,  _
                    ByVal PrevBal As Double,  _
                    ByVal TotAmount As Double,  _
                    ByVal DueAmount As Double,  _
                    ByVal ReadDate As Date,  _
                    ByVal DateOfAccess As Date,  _
                    ByVal uID As Integer,  _
                    ByVal zoneID As Integer,  _
                    ByVal clusterNum As Integer,  _
                    ByVal sequenceNum As Integer,  _
                    ByVal ReadPerFrom As String,  _
                    ByVal ReadPerTo As String,  _
                    ByVal ReadPerYear As Integer,  _
                    ByVal MetStatus As String,  _
                    ByVal DueDate As Date,  _
                    ByVal paymentDate As Date,  _
                    ByVal consID1 As Integer,  _
                    ByVal classID1 As Integer,  _
                    ByVal brgyID As Integer,  _
                    ByVal clusterID As Integer,  _
                    ByVal Sequence As Integer,  _
                    ByVal AccountNo As String,  _
                    ByVal receiptNo As String,  _
                    ByVal StreetAddress As String,  _
                    ByVal MeterNo As String,  _
                    ByVal MeterBrand As String,  _
                    ByVal MeterSize As String,  _
                    ByVal MeterReference As String,  _
                    ByVal ConnectionDate As Date,  _
                    ByVal AcctStatus As String,  _
                    ByVal CanDelete As String,  _
                    ByVal ConsumerName As String,  _
                    ByVal cAddress As String,  _
                    ByVal contactNum As String,  _
                    ByVal classification As String,  _
                    ByVal classcode As String,  _
                    ByVal isbulk As Integer,  _
                    ByVal dateFrom As Date,  _
                    ByVal dateTo As Date,  _
                    ByVal ZoneID1 As Integer,  _
                    ByVal AddBrgy As String,  _
                    ByVal brgyCode As String,  _
                    ByVal ClusterSize As Integer,  _
                    ByVal bClass As String) As CollectionNoticeRow
            Dim rowCollectionNoticeRow As CollectionNoticeRow = CType(Me.NewRow,CollectionNoticeRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, acctID, consID, classID, Reference, Reading, Consumed, Amount, PrevBal, TotAmount, DueAmount, ReadDate, DateOfAccess, uID, zoneID, clusterNum, sequenceNum, ReadPerFrom, ReadPerTo, ReadPerYear, MetStatus, DueDate, paymentDate, Nothing, consID1, classID1, brgyID, clusterID, Sequence, AccountNo, receiptNo, StreetAddress, MeterNo, MeterBrand, MeterSize, MeterReference, ConnectionDate, AcctStatus, CanDelete, Nothing, ConsumerName, cAddress, contactNum, Nothing, classification, classcode, isbulk, dateFrom, dateTo, Nothing, ZoneID1, AddBrgy, brgyCode, ClusterSize, bClass}
            rowCollectionNoticeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCollectionNoticeRow)
            Return rowCollectionNoticeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CollectionNoticeDataTable = CType(MyBase.Clone,CollectionNoticeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CollectionNoticeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnmetID = MyBase.Columns("metID")
            Me.columnacctID = MyBase.Columns("acctID")
            Me.columnconsID = MyBase.Columns("consID")
            Me.columnclassID = MyBase.Columns("classID")
            Me.columnReference = MyBase.Columns("Reference")
            Me.columnReading = MyBase.Columns("Reading")
            Me.columnConsumed = MyBase.Columns("Consumed")
            Me.columnAmount = MyBase.Columns("Amount")
            Me.columnPrevBal = MyBase.Columns("PrevBal")
            Me.columnTotAmount = MyBase.Columns("TotAmount")
            Me.columnDueAmount = MyBase.Columns("DueAmount")
            Me.columnReadDate = MyBase.Columns("ReadDate")
            Me.columnDateOfAccess = MyBase.Columns("DateOfAccess")
            Me.columnuID = MyBase.Columns("uID")
            Me.columnzoneID = MyBase.Columns("zoneID")
            Me.columnclusterNum = MyBase.Columns("clusterNum")
            Me.columnsequenceNum = MyBase.Columns("sequenceNum")
            Me.columnReadPerFrom = MyBase.Columns("ReadPerFrom")
            Me.columnReadPerTo = MyBase.Columns("ReadPerTo")
            Me.columnReadPerYear = MyBase.Columns("ReadPerYear")
            Me.columnMetStatus = MyBase.Columns("MetStatus")
            Me.columnDueDate = MyBase.Columns("DueDate")
            Me.columnpaymentDate = MyBase.Columns("paymentDate")
            Me.columnacctID1 = MyBase.Columns("acctID1")
            Me.columnconsID1 = MyBase.Columns("consID1")
            Me.columnclassID1 = MyBase.Columns("classID1")
            Me.columnbrgyID = MyBase.Columns("brgyID")
            Me.columnclusterID = MyBase.Columns("clusterID")
            Me.columnSequence = MyBase.Columns("Sequence")
            Me.columnAccountNo = MyBase.Columns("AccountNo")
            Me.columnreceiptNo = MyBase.Columns("receiptNo")
            Me.columnStreetAddress = MyBase.Columns("StreetAddress")
            Me.columnMeterNo = MyBase.Columns("MeterNo")
            Me.columnMeterBrand = MyBase.Columns("MeterBrand")
            Me.columnMeterSize = MyBase.Columns("MeterSize")
            Me.columnMeterReference = MyBase.Columns("MeterReference")
            Me.columnConnectionDate = MyBase.Columns("ConnectionDate")
            Me.columnAcctStatus = MyBase.Columns("AcctStatus")
            Me.columnCanDelete = MyBase.Columns("CanDelete")
            Me.columnconsID2 = MyBase.Columns("consID2")
            Me.columnConsumerName = MyBase.Columns("ConsumerName")
            Me.columncAddress = MyBase.Columns("cAddress")
            Me.columncontactNum = MyBase.Columns("contactNum")
            Me.columnclassID2 = MyBase.Columns("classID2")
            Me.columnclassification = MyBase.Columns("classification")
            Me.columnclasscode = MyBase.Columns("classcode")
            Me.columnisbulk = MyBase.Columns("isbulk")
            Me.columndateFrom = MyBase.Columns("dateFrom")
            Me.columndateTo = MyBase.Columns("dateTo")
            Me.columnbrgyID1 = MyBase.Columns("brgyID1")
            Me.columnZoneID1 = MyBase.Columns("ZoneID1")
            Me.columnAddBrgy = MyBase.Columns("AddBrgy")
            Me.columnbrgyCode = MyBase.Columns("brgyCode")
            Me.columnClusterSize = MyBase.Columns("ClusterSize")
            Me.columnbClass = MyBase.Columns("bClass")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnmetID = New Global.System.Data.DataColumn("metID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmetID)
            Me.columnacctID = New Global.System.Data.DataColumn("acctID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacctID)
            Me.columnconsID = New Global.System.Data.DataColumn("consID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsID)
            Me.columnclassID = New Global.System.Data.DataColumn("classID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclassID)
            Me.columnReference = New Global.System.Data.DataColumn("Reference", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReference)
            Me.columnReading = New Global.System.Data.DataColumn("Reading", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReading)
            Me.columnConsumed = New Global.System.Data.DataColumn("Consumed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConsumed)
            Me.columnAmount = New Global.System.Data.DataColumn("Amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmount)
            Me.columnPrevBal = New Global.System.Data.DataColumn("PrevBal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevBal)
            Me.columnTotAmount = New Global.System.Data.DataColumn("TotAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotAmount)
            Me.columnDueAmount = New Global.System.Data.DataColumn("DueAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDueAmount)
            Me.columnReadDate = New Global.System.Data.DataColumn("ReadDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReadDate)
            Me.columnDateOfAccess = New Global.System.Data.DataColumn("DateOfAccess", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateOfAccess)
            Me.columnuID = New Global.System.Data.DataColumn("uID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuID)
            Me.columnzoneID = New Global.System.Data.DataColumn("zoneID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzoneID)
            Me.columnclusterNum = New Global.System.Data.DataColumn("clusterNum", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclusterNum)
            Me.columnsequenceNum = New Global.System.Data.DataColumn("sequenceNum", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsequenceNum)
            Me.columnReadPerFrom = New Global.System.Data.DataColumn("ReadPerFrom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReadPerFrom)
            Me.columnReadPerTo = New Global.System.Data.DataColumn("ReadPerTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReadPerTo)
            Me.columnReadPerYear = New Global.System.Data.DataColumn("ReadPerYear", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReadPerYear)
            Me.columnMetStatus = New Global.System.Data.DataColumn("MetStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMetStatus)
            Me.columnDueDate = New Global.System.Data.DataColumn("DueDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDueDate)
            Me.columnpaymentDate = New Global.System.Data.DataColumn("paymentDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpaymentDate)
            Me.columnacctID1 = New Global.System.Data.DataColumn("acctID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacctID1)
            Me.columnconsID1 = New Global.System.Data.DataColumn("consID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsID1)
            Me.columnclassID1 = New Global.System.Data.DataColumn("classID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclassID1)
            Me.columnbrgyID = New Global.System.Data.DataColumn("brgyID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbrgyID)
            Me.columnclusterID = New Global.System.Data.DataColumn("clusterID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclusterID)
            Me.columnSequence = New Global.System.Data.DataColumn("Sequence", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSequence)
            Me.columnAccountNo = New Global.System.Data.DataColumn("AccountNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountNo)
            Me.columnreceiptNo = New Global.System.Data.DataColumn("receiptNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreceiptNo)
            Me.columnStreetAddress = New Global.System.Data.DataColumn("StreetAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStreetAddress)
            Me.columnMeterNo = New Global.System.Data.DataColumn("MeterNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeterNo)
            Me.columnMeterBrand = New Global.System.Data.DataColumn("MeterBrand", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeterBrand)
            Me.columnMeterSize = New Global.System.Data.DataColumn("MeterSize", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeterSize)
            Me.columnMeterReference = New Global.System.Data.DataColumn("MeterReference", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeterReference)
            Me.columnConnectionDate = New Global.System.Data.DataColumn("ConnectionDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConnectionDate)
            Me.columnAcctStatus = New Global.System.Data.DataColumn("AcctStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcctStatus)
            Me.columnCanDelete = New Global.System.Data.DataColumn("CanDelete", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCanDelete)
            Me.columnconsID2 = New Global.System.Data.DataColumn("consID2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsID2)
            Me.columnConsumerName = New Global.System.Data.DataColumn("ConsumerName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConsumerName)
            Me.columncAddress = New Global.System.Data.DataColumn("cAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncAddress)
            Me.columncontactNum = New Global.System.Data.DataColumn("contactNum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontactNum)
            Me.columnclassID2 = New Global.System.Data.DataColumn("classID2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclassID2)
            Me.columnclassification = New Global.System.Data.DataColumn("classification", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclassification)
            Me.columnclasscode = New Global.System.Data.DataColumn("classcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclasscode)
            Me.columnisbulk = New Global.System.Data.DataColumn("isbulk", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisbulk)
            Me.columndateFrom = New Global.System.Data.DataColumn("dateFrom", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndateFrom)
            Me.columndateTo = New Global.System.Data.DataColumn("dateTo", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndateTo)
            Me.columnbrgyID1 = New Global.System.Data.DataColumn("brgyID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbrgyID1)
            Me.columnZoneID1 = New Global.System.Data.DataColumn("ZoneID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZoneID1)
            Me.columnAddBrgy = New Global.System.Data.DataColumn("AddBrgy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddBrgy)
            Me.columnbrgyCode = New Global.System.Data.DataColumn("brgyCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbrgyCode)
            Me.columnClusterSize = New Global.System.Data.DataColumn("ClusterSize", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClusterSize)
            Me.columnbClass = New Global.System.Data.DataColumn("bClass", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbClass)
            Me.columnmetID.AutoIncrement = true
            Me.columnmetID.AutoIncrementSeed = -1
            Me.columnmetID.AutoIncrementStep = -1
            Me.columnmetID.AllowDBNull = false
            Me.columnReference.MaxLength = 100
            Me.columnReading.MaxLength = 100
            Me.columnReadPerFrom.MaxLength = 45
            Me.columnReadPerTo.MaxLength = 45
            Me.columnMetStatus.MaxLength = 45
            Me.columnacctID1.AutoIncrement = true
            Me.columnacctID1.AutoIncrementSeed = -1
            Me.columnacctID1.AutoIncrementStep = -1
            Me.columnAccountNo.MaxLength = 45
            Me.columnreceiptNo.MaxLength = 45
            Me.columnStreetAddress.MaxLength = 100
            Me.columnMeterNo.MaxLength = 45
            Me.columnMeterBrand.MaxLength = 45
            Me.columnMeterSize.MaxLength = 45
            Me.columnMeterReference.MaxLength = 45
            Me.columnAcctStatus.MaxLength = 45
            Me.columnCanDelete.MaxLength = 45
            Me.columnconsID2.AutoIncrement = true
            Me.columnconsID2.AutoIncrementSeed = -1
            Me.columnconsID2.AutoIncrementStep = -1
            Me.columnConsumerName.MaxLength = 100
            Me.columncAddress.MaxLength = 200
            Me.columncontactNum.MaxLength = 30
            Me.columnclassID2.AutoIncrement = true
            Me.columnclassID2.AutoIncrementSeed = -1
            Me.columnclassID2.AutoIncrementStep = -1
            Me.columnclassification.MaxLength = 100
            Me.columnclasscode.MaxLength = 45
            Me.columnbrgyID1.AutoIncrement = true
            Me.columnbrgyID1.AutoIncrementSeed = -1
            Me.columnbrgyID1.AutoIncrementStep = -1
            Me.columnAddBrgy.MaxLength = 100
            Me.columnbrgyCode.MaxLength = 45
            Me.columnbClass.MaxLength = 45
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCollectionNoticeRow() As CollectionNoticeRow
            Return CType(Me.NewRow,CollectionNoticeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CollectionNoticeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CollectionNoticeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CollectionNoticeRowChangedEvent) Is Nothing) Then
                RaiseEvent CollectionNoticeRowChanged(Me, New CollectionNoticeRowChangeEvent(CType(e.Row,CollectionNoticeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CollectionNoticeRowChangingEvent) Is Nothing) Then
                RaiseEvent CollectionNoticeRowChanging(Me, New CollectionNoticeRowChangeEvent(CType(e.Row,CollectionNoticeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CollectionNoticeRowDeletedEvent) Is Nothing) Then
                RaiseEvent CollectionNoticeRowDeleted(Me, New CollectionNoticeRowChangeEvent(CType(e.Row,CollectionNoticeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CollectionNoticeRowDeletingEvent) Is Nothing) Then
                RaiseEvent CollectionNoticeRowDeleting(Me, New CollectionNoticeRowChangeEvent(CType(e.Row,CollectionNoticeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCollectionNoticeRow(ByVal row As CollectionNoticeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As reportingdataset = New reportingdataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CollectionNoticeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BillNoticeDataTable
        Inherits Global.System.Data.TypedTableBase(Of BillNoticeRow)
        
        Private columnconsID As Global.System.Data.DataColumn
        
        Private columnclassID As Global.System.Data.DataColumn
        
        Private columnbilldate As Global.System.Data.DataColumn
        
        Private columnbrgyID As Global.System.Data.DataColumn
        
        Private columnclusterID As Global.System.Data.DataColumn
        
        Private columnSequence As Global.System.Data.DataColumn
        
        Private columnAccountNo As Global.System.Data.DataColumn
        
        Private columnStreetAddress As Global.System.Data.DataColumn
        
        Private columnMeterNo As Global.System.Data.DataColumn
        
        Private columnConsumerName As Global.System.Data.DataColumn
        
        Private columnclassification As Global.System.Data.DataColumn
        
        Private columnuID As Global.System.Data.DataColumn
        
        Private columnbilliD As Global.System.Data.DataColumn
        
        Private columnacctID As Global.System.Data.DataColumn
        
        Private columnzoneID As Global.System.Data.DataColumn
        
        Private columnisSenior As Global.System.Data.DataColumn
        
        Private columndueDate As Global.System.Data.DataColumn
        
        Private columnfromDate As Global.System.Data.DataColumn
        
        Private columntoDate As Global.System.Data.DataColumn
        
        Private columnbillMonth As Global.System.Data.DataColumn
        
        Private columnbillYear As Global.System.Data.DataColumn
        
        Private columnprevRead As Global.System.Data.DataColumn
        
        Private columnpresRead As Global.System.Data.DataColumn
        
        Private columnprevConsump As Global.System.Data.DataColumn
        
        Private columnconsump As Global.System.Data.DataColumn
        
        Private columnisSC As Global.System.Data.DataColumn
        
        Private columnseqNum As Global.System.Data.DataColumn
        
        Private columnisAdjusted As Global.System.Data.DataColumn
        
        Private columnadjReason As Global.System.Data.DataColumn
        
        Private columnadjPrep As Global.System.Data.DataColumn
        
        Private columnadjDate As Global.System.Data.DataColumn
        
        Private columnadjApprov As Global.System.Data.DataColumn
        
        Private columnadjRemark As Global.System.Data.DataColumn
        
        Private columnadjApprovStat As Global.System.Data.DataColumn
        
        Private columnbillstat As Global.System.Data.DataColumn
        
        Private columnmetReadID As Global.System.Data.DataColumn
        
        Private columnmetName As Global.System.Data.DataColumn
        
        Private columnbillNote As Global.System.Data.DataColumn
        
        Private columnbillperiod As Global.System.Data.DataColumn
        
        Private columnFconsump As Global.System.Data.DataColumn
        
        Private columnSConsump As Global.System.Data.DataColumn
        
        Private columnFLabel As Global.System.Data.DataColumn
        
        Private columnSLabel As Global.System.Data.DataColumn
        
        Private columnclustername As Global.System.Data.DataColumn
        
        Private columnPrepAdjName As Global.System.Data.DataColumn
        
        Private columnApprovAdjName As Global.System.Data.DataColumn
        
        Private columnUserFullName As Global.System.Data.DataColumn
        
        Private columnaddBrgy As Global.System.Data.DataColumn
        
        Private columnreadDate As Global.System.Data.DataColumn
        
        Private columnadjConsump As Global.System.Data.DataColumn
        
        Private columnminconsump As Global.System.Data.DataColumn
        
        Private columnAccountName As Global.System.Data.DataColumn
        
        Private columncontactNum As Global.System.Data.DataColumn
        
        Private columnapplicationfee As Global.System.Data.DataColumn
        
        Private columnprevBal As Global.System.Data.DataColumn
        
        Private columnprevEnv As Global.System.Data.DataColumn
        
        Private columnprevAdj As Global.System.Data.DataColumn
        
        Private columnprevAdjustedRate As Global.System.Data.DataColumn
        
        Private columnprevPenalty As Global.System.Data.DataColumn
        
        Private columnprevAmountDue As Global.System.Data.DataColumn
        
        Private columnprevTotal As Global.System.Data.DataColumn
        
        Private columnamount As Global.System.Data.DataColumn
        
        Private columnflatrate As Global.System.Data.DataColumn
        
        Private columnexcess As Global.System.Data.DataColumn
        
        Private columnadjusted As Global.System.Data.DataColumn
        
        Private columnadjustedRate As Global.System.Data.DataColumn
        
        Private columnEnviFee As Global.System.Data.DataColumn
        
        Private columntotalAmountDue As Global.System.Data.DataColumn
        
        Private columnuseAmount As Global.System.Data.DataColumn
        
        Private columnuseADue As Global.System.Data.DataColumn
        
        Private columnpenalty As Global.System.Data.DataColumn
        
        Private columnAmountADue As Global.System.Data.DataColumn
        
        Private columnSCDiscount As Global.System.Data.DataColumn
        
        Private columnSCPenalty As Global.System.Data.DataColumn
        
        Private columnORNumPaid As Global.System.Data.DataColumn
        
        Private columnAmountPaid As Global.System.Data.DataColumn
        
        Private columnMoneyAmount As Global.System.Data.DataColumn
        
        Private columnmChange As Global.System.Data.DataColumn
        
        Private columnFexcess As Global.System.Data.DataColumn
        
        Private columnSExcess As Global.System.Data.DataColumn
        
        Private columnFratepercub As Global.System.Data.DataColumn
        
        Private columnSRatepercub As Global.System.Data.DataColumn
        
        Private columnprevSCDis As Global.System.Data.DataColumn
        
        Private columnmunicipality As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BillNotice"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property classIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclassID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbilldate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property brgyIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbrgyID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clusterIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclusterID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SequenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSequence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StreetAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStreetAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeterNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeterNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConsumerNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConsumerName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property classificationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclassification
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property uIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billiDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbilliD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acctIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnacctID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property zoneIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzoneID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property isSeniorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisSenior
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dueDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndueDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fromDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfromDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property toDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntoDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billMonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillMonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevReadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevRead
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property presReadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpresRead
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevConsumpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevConsump
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consumpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsump
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property isSCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisSC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property seqNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseqNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property isAdjustedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisAdjusted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjReasonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjReason
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjPrepColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjPrep
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjApprovColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjApprov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjRemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjRemark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjApprovStatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjApprovStat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billstatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillstat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property metReadIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmetReadID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property metNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmetName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billNoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billperiodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillperiod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FconsumpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFconsump
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SConsumpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSConsump
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FLabelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFLabel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SLabelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSLabel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clusternameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclustername
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrepAdjNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrepAdjName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ApprovAdjNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApprovAdjName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UserFullNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserFullName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property addBrgyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddBrgy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property readDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreadDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjConsumpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjConsump
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property minconsumpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnminconsump
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contactNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontactNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property applicationfeeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnapplicationfee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevBalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevBal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevEnvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevEnv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevAdjColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevAdj
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevAdjustedRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevAdjustedRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevPenaltyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevPenalty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevAmountDueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevAmountDue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property flatrateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnflatrate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property excessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexcess
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjustedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjusted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjustedRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjustedRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EnviFeeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEnviFee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalAmountDueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotalAmountDue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property useAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuseAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property useADueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuseADue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property penaltyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpenalty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AmountADueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmountADue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCDiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCPenaltyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCPenalty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORNumPaidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORNumPaid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AmountPaidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmountPaid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MoneyAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMoneyAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mChangeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmChange
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FexcessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFexcess
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SExcessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSExcess
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FratepercubColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFratepercub
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SRatepercubColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRatepercub
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevSCDisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevSCDis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property municipalityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmunicipality
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BillNoticeRow
            Get
                Return CType(Me.Rows(index),BillNoticeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BillNoticeRowChanging As BillNoticeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BillNoticeRowChanged As BillNoticeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BillNoticeRowDeleting As BillNoticeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BillNoticeRowDeleted As BillNoticeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddBillNoticeRow(ByVal row As BillNoticeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddBillNoticeRow( _
                    ByVal consID As Integer,  _
                    ByVal classID As Integer,  _
                    ByVal billdate As Date,  _
                    ByVal brgyID As Integer,  _
                    ByVal clusterID As Integer,  _
                    ByVal Sequence As Integer,  _
                    ByVal AccountNo As String,  _
                    ByVal StreetAddress As String,  _
                    ByVal MeterNo As String,  _
                    ByVal ConsumerName As String,  _
                    ByVal classification As String,  _
                    ByVal uID As Integer,  _
                    ByVal acctID As Integer,  _
                    ByVal zoneID As Integer,  _
                    ByVal isSenior As String,  _
                    ByVal dueDate As Date,  _
                    ByVal fromDate As Date,  _
                    ByVal toDate As Date,  _
                    ByVal billMonth As String,  _
                    ByVal billYear As Integer,  _
                    ByVal prevRead As Integer,  _
                    ByVal presRead As Integer,  _
                    ByVal prevConsump As Integer,  _
                    ByVal consump As Integer,  _
                    ByVal isSC As String,  _
                    ByVal seqNum As Integer,  _
                    ByVal isAdjusted As String,  _
                    ByVal adjReason As String,  _
                    ByVal adjPrep As Integer,  _
                    ByVal adjDate As Date,  _
                    ByVal adjApprov As Integer,  _
                    ByVal adjRemark As String,  _
                    ByVal adjApprovStat As String,  _
                    ByVal billstat As String,  _
                    ByVal metReadID As Integer,  _
                    ByVal metName As String,  _
                    ByVal billNote As String,  _
                    ByVal billperiod As String,  _
                    ByVal Fconsump As Integer,  _
                    ByVal SConsump As Integer,  _
                    ByVal FLabel As String,  _
                    ByVal SLabel As String,  _
                    ByVal clustername As String,  _
                    ByVal PrepAdjName As String,  _
                    ByVal ApprovAdjName As String,  _
                    ByVal UserFullName As String,  _
                    ByVal addBrgy As String,  _
                    ByVal readDate As Date,  _
                    ByVal adjConsump As Integer,  _
                    ByVal minconsump As Integer,  _
                    ByVal AccountName As String,  _
                    ByVal contactNum As String,  _
                    ByVal applicationfee As Decimal,  _
                    ByVal prevBal As Decimal,  _
                    ByVal prevEnv As Decimal,  _
                    ByVal prevAdj As Decimal,  _
                    ByVal prevAdjustedRate As Decimal,  _
                    ByVal prevPenalty As Decimal,  _
                    ByVal prevAmountDue As Decimal,  _
                    ByVal prevTotal As Decimal,  _
                    ByVal amount As Decimal,  _
                    ByVal flatrate As Decimal,  _
                    ByVal excess As Decimal,  _
                    ByVal adjusted As Decimal,  _
                    ByVal adjustedRate As Decimal,  _
                    ByVal EnviFee As Decimal,  _
                    ByVal totalAmountDue As Decimal,  _
                    ByVal useAmount As Decimal,  _
                    ByVal useADue As Decimal,  _
                    ByVal penalty As Decimal,  _
                    ByVal AmountADue As Decimal,  _
                    ByVal SCDiscount As Decimal,  _
                    ByVal SCPenalty As Decimal,  _
                    ByVal ORNumPaid As String,  _
                    ByVal AmountPaid As Decimal,  _
                    ByVal MoneyAmount As Decimal,  _
                    ByVal mChange As Decimal,  _
                    ByVal Fexcess As Decimal,  _
                    ByVal SExcess As Decimal,  _
                    ByVal Fratepercub As Decimal,  _
                    ByVal SRatepercub As Decimal,  _
                    ByVal prevSCDis As Decimal,  _
                    ByVal municipality As String) As BillNoticeRow
            Dim rowBillNoticeRow As BillNoticeRow = CType(Me.NewRow,BillNoticeRow)
            Dim columnValuesArray() As Object = New Object() {consID, classID, billdate, brgyID, clusterID, Sequence, AccountNo, StreetAddress, MeterNo, ConsumerName, classification, uID, Nothing, acctID, zoneID, isSenior, dueDate, fromDate, toDate, billMonth, billYear, prevRead, presRead, prevConsump, consump, isSC, seqNum, isAdjusted, adjReason, adjPrep, adjDate, adjApprov, adjRemark, adjApprovStat, billstat, metReadID, metName, billNote, billperiod, Fconsump, SConsump, FLabel, SLabel, clustername, PrepAdjName, ApprovAdjName, UserFullName, addBrgy, readDate, adjConsump, minconsump, AccountName, contactNum, applicationfee, prevBal, prevEnv, prevAdj, prevAdjustedRate, prevPenalty, prevAmountDue, prevTotal, amount, flatrate, excess, adjusted, adjustedRate, EnviFee, totalAmountDue, useAmount, useADue, penalty, AmountADue, SCDiscount, SCPenalty, ORNumPaid, AmountPaid, MoneyAmount, mChange, Fexcess, SExcess, Fratepercub, SRatepercub, prevSCDis, municipality}
            rowBillNoticeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBillNoticeRow)
            Return rowBillNoticeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BillNoticeDataTable = CType(MyBase.Clone,BillNoticeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BillNoticeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnconsID = MyBase.Columns("consID")
            Me.columnclassID = MyBase.Columns("classID")
            Me.columnbilldate = MyBase.Columns("billdate")
            Me.columnbrgyID = MyBase.Columns("brgyID")
            Me.columnclusterID = MyBase.Columns("clusterID")
            Me.columnSequence = MyBase.Columns("Sequence")
            Me.columnAccountNo = MyBase.Columns("AccountNo")
            Me.columnStreetAddress = MyBase.Columns("StreetAddress")
            Me.columnMeterNo = MyBase.Columns("MeterNo")
            Me.columnConsumerName = MyBase.Columns("ConsumerName")
            Me.columnclassification = MyBase.Columns("classification")
            Me.columnuID = MyBase.Columns("uID")
            Me.columnbilliD = MyBase.Columns("billiD")
            Me.columnacctID = MyBase.Columns("acctID")
            Me.columnzoneID = MyBase.Columns("zoneID")
            Me.columnisSenior = MyBase.Columns("isSenior")
            Me.columndueDate = MyBase.Columns("dueDate")
            Me.columnfromDate = MyBase.Columns("fromDate")
            Me.columntoDate = MyBase.Columns("toDate")
            Me.columnbillMonth = MyBase.Columns("billMonth")
            Me.columnbillYear = MyBase.Columns("billYear")
            Me.columnprevRead = MyBase.Columns("prevRead")
            Me.columnpresRead = MyBase.Columns("presRead")
            Me.columnprevConsump = MyBase.Columns("prevConsump")
            Me.columnconsump = MyBase.Columns("consump")
            Me.columnisSC = MyBase.Columns("isSC")
            Me.columnseqNum = MyBase.Columns("seqNum")
            Me.columnisAdjusted = MyBase.Columns("isAdjusted")
            Me.columnadjReason = MyBase.Columns("adjReason")
            Me.columnadjPrep = MyBase.Columns("adjPrep")
            Me.columnadjDate = MyBase.Columns("adjDate")
            Me.columnadjApprov = MyBase.Columns("adjApprov")
            Me.columnadjRemark = MyBase.Columns("adjRemark")
            Me.columnadjApprovStat = MyBase.Columns("adjApprovStat")
            Me.columnbillstat = MyBase.Columns("billstat")
            Me.columnmetReadID = MyBase.Columns("metReadID")
            Me.columnmetName = MyBase.Columns("metName")
            Me.columnbillNote = MyBase.Columns("billNote")
            Me.columnbillperiod = MyBase.Columns("billperiod")
            Me.columnFconsump = MyBase.Columns("Fconsump")
            Me.columnSConsump = MyBase.Columns("SConsump")
            Me.columnFLabel = MyBase.Columns("FLabel")
            Me.columnSLabel = MyBase.Columns("SLabel")
            Me.columnclustername = MyBase.Columns("clustername")
            Me.columnPrepAdjName = MyBase.Columns("PrepAdjName")
            Me.columnApprovAdjName = MyBase.Columns("ApprovAdjName")
            Me.columnUserFullName = MyBase.Columns("UserFullName")
            Me.columnaddBrgy = MyBase.Columns("addBrgy")
            Me.columnreadDate = MyBase.Columns("readDate")
            Me.columnadjConsump = MyBase.Columns("adjConsump")
            Me.columnminconsump = MyBase.Columns("minconsump")
            Me.columnAccountName = MyBase.Columns("AccountName")
            Me.columncontactNum = MyBase.Columns("contactNum")
            Me.columnapplicationfee = MyBase.Columns("applicationfee")
            Me.columnprevBal = MyBase.Columns("prevBal")
            Me.columnprevEnv = MyBase.Columns("prevEnv")
            Me.columnprevAdj = MyBase.Columns("prevAdj")
            Me.columnprevAdjustedRate = MyBase.Columns("prevAdjustedRate")
            Me.columnprevPenalty = MyBase.Columns("prevPenalty")
            Me.columnprevAmountDue = MyBase.Columns("prevAmountDue")
            Me.columnprevTotal = MyBase.Columns("prevTotal")
            Me.columnamount = MyBase.Columns("amount")
            Me.columnflatrate = MyBase.Columns("flatrate")
            Me.columnexcess = MyBase.Columns("excess")
            Me.columnadjusted = MyBase.Columns("adjusted")
            Me.columnadjustedRate = MyBase.Columns("adjustedRate")
            Me.columnEnviFee = MyBase.Columns("EnviFee")
            Me.columntotalAmountDue = MyBase.Columns("totalAmountDue")
            Me.columnuseAmount = MyBase.Columns("useAmount")
            Me.columnuseADue = MyBase.Columns("useADue")
            Me.columnpenalty = MyBase.Columns("penalty")
            Me.columnAmountADue = MyBase.Columns("AmountADue")
            Me.columnSCDiscount = MyBase.Columns("SCDiscount")
            Me.columnSCPenalty = MyBase.Columns("SCPenalty")
            Me.columnORNumPaid = MyBase.Columns("ORNumPaid")
            Me.columnAmountPaid = MyBase.Columns("AmountPaid")
            Me.columnMoneyAmount = MyBase.Columns("MoneyAmount")
            Me.columnmChange = MyBase.Columns("mChange")
            Me.columnFexcess = MyBase.Columns("Fexcess")
            Me.columnSExcess = MyBase.Columns("SExcess")
            Me.columnFratepercub = MyBase.Columns("Fratepercub")
            Me.columnSRatepercub = MyBase.Columns("SRatepercub")
            Me.columnprevSCDis = MyBase.Columns("prevSCDis")
            Me.columnmunicipality = MyBase.Columns("municipality")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnconsID = New Global.System.Data.DataColumn("consID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsID)
            Me.columnclassID = New Global.System.Data.DataColumn("classID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclassID)
            Me.columnbilldate = New Global.System.Data.DataColumn("billdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbilldate)
            Me.columnbrgyID = New Global.System.Data.DataColumn("brgyID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbrgyID)
            Me.columnclusterID = New Global.System.Data.DataColumn("clusterID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclusterID)
            Me.columnSequence = New Global.System.Data.DataColumn("Sequence", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSequence)
            Me.columnAccountNo = New Global.System.Data.DataColumn("AccountNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountNo)
            Me.columnStreetAddress = New Global.System.Data.DataColumn("StreetAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStreetAddress)
            Me.columnMeterNo = New Global.System.Data.DataColumn("MeterNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeterNo)
            Me.columnConsumerName = New Global.System.Data.DataColumn("ConsumerName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConsumerName)
            Me.columnclassification = New Global.System.Data.DataColumn("classification", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclassification)
            Me.columnuID = New Global.System.Data.DataColumn("uID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuID)
            Me.columnbilliD = New Global.System.Data.DataColumn("billiD", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbilliD)
            Me.columnacctID = New Global.System.Data.DataColumn("acctID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacctID)
            Me.columnzoneID = New Global.System.Data.DataColumn("zoneID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzoneID)
            Me.columnisSenior = New Global.System.Data.DataColumn("isSenior", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisSenior)
            Me.columndueDate = New Global.System.Data.DataColumn("dueDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndueDate)
            Me.columnfromDate = New Global.System.Data.DataColumn("fromDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfromDate)
            Me.columntoDate = New Global.System.Data.DataColumn("toDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntoDate)
            Me.columnbillMonth = New Global.System.Data.DataColumn("billMonth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillMonth)
            Me.columnbillYear = New Global.System.Data.DataColumn("billYear", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillYear)
            Me.columnprevRead = New Global.System.Data.DataColumn("prevRead", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevRead)
            Me.columnpresRead = New Global.System.Data.DataColumn("presRead", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpresRead)
            Me.columnprevConsump = New Global.System.Data.DataColumn("prevConsump", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevConsump)
            Me.columnconsump = New Global.System.Data.DataColumn("consump", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsump)
            Me.columnisSC = New Global.System.Data.DataColumn("isSC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisSC)
            Me.columnseqNum = New Global.System.Data.DataColumn("seqNum", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseqNum)
            Me.columnisAdjusted = New Global.System.Data.DataColumn("isAdjusted", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisAdjusted)
            Me.columnadjReason = New Global.System.Data.DataColumn("adjReason", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjReason)
            Me.columnadjPrep = New Global.System.Data.DataColumn("adjPrep", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjPrep)
            Me.columnadjDate = New Global.System.Data.DataColumn("adjDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjDate)
            Me.columnadjApprov = New Global.System.Data.DataColumn("adjApprov", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjApprov)
            Me.columnadjRemark = New Global.System.Data.DataColumn("adjRemark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjRemark)
            Me.columnadjApprovStat = New Global.System.Data.DataColumn("adjApprovStat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjApprovStat)
            Me.columnbillstat = New Global.System.Data.DataColumn("billstat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillstat)
            Me.columnmetReadID = New Global.System.Data.DataColumn("metReadID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmetReadID)
            Me.columnmetName = New Global.System.Data.DataColumn("metName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmetName)
            Me.columnbillNote = New Global.System.Data.DataColumn("billNote", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillNote)
            Me.columnbillperiod = New Global.System.Data.DataColumn("billperiod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillperiod)
            Me.columnFconsump = New Global.System.Data.DataColumn("Fconsump", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFconsump)
            Me.columnSConsump = New Global.System.Data.DataColumn("SConsump", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSConsump)
            Me.columnFLabel = New Global.System.Data.DataColumn("FLabel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFLabel)
            Me.columnSLabel = New Global.System.Data.DataColumn("SLabel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSLabel)
            Me.columnclustername = New Global.System.Data.DataColumn("clustername", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclustername)
            Me.columnPrepAdjName = New Global.System.Data.DataColumn("PrepAdjName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrepAdjName)
            Me.columnApprovAdjName = New Global.System.Data.DataColumn("ApprovAdjName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApprovAdjName)
            Me.columnUserFullName = New Global.System.Data.DataColumn("UserFullName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserFullName)
            Me.columnaddBrgy = New Global.System.Data.DataColumn("addBrgy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddBrgy)
            Me.columnreadDate = New Global.System.Data.DataColumn("readDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreadDate)
            Me.columnadjConsump = New Global.System.Data.DataColumn("adjConsump", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjConsump)
            Me.columnminconsump = New Global.System.Data.DataColumn("minconsump", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnminconsump)
            Me.columnAccountName = New Global.System.Data.DataColumn("AccountName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountName)
            Me.columncontactNum = New Global.System.Data.DataColumn("contactNum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontactNum)
            Me.columnapplicationfee = New Global.System.Data.DataColumn("applicationfee", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnapplicationfee)
            Me.columnprevBal = New Global.System.Data.DataColumn("prevBal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevBal)
            Me.columnprevEnv = New Global.System.Data.DataColumn("prevEnv", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevEnv)
            Me.columnprevAdj = New Global.System.Data.DataColumn("prevAdj", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevAdj)
            Me.columnprevAdjustedRate = New Global.System.Data.DataColumn("prevAdjustedRate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevAdjustedRate)
            Me.columnprevPenalty = New Global.System.Data.DataColumn("prevPenalty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevPenalty)
            Me.columnprevAmountDue = New Global.System.Data.DataColumn("prevAmountDue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevAmountDue)
            Me.columnprevTotal = New Global.System.Data.DataColumn("prevTotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevTotal)
            Me.columnamount = New Global.System.Data.DataColumn("amount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount)
            Me.columnflatrate = New Global.System.Data.DataColumn("flatrate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnflatrate)
            Me.columnexcess = New Global.System.Data.DataColumn("excess", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexcess)
            Me.columnadjusted = New Global.System.Data.DataColumn("adjusted", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjusted)
            Me.columnadjustedRate = New Global.System.Data.DataColumn("adjustedRate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjustedRate)
            Me.columnEnviFee = New Global.System.Data.DataColumn("EnviFee", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEnviFee)
            Me.columntotalAmountDue = New Global.System.Data.DataColumn("totalAmountDue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotalAmountDue)
            Me.columnuseAmount = New Global.System.Data.DataColumn("useAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuseAmount)
            Me.columnuseADue = New Global.System.Data.DataColumn("useADue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuseADue)
            Me.columnpenalty = New Global.System.Data.DataColumn("penalty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpenalty)
            Me.columnAmountADue = New Global.System.Data.DataColumn("AmountADue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmountADue)
            Me.columnSCDiscount = New Global.System.Data.DataColumn("SCDiscount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCDiscount)
            Me.columnSCPenalty = New Global.System.Data.DataColumn("SCPenalty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCPenalty)
            Me.columnORNumPaid = New Global.System.Data.DataColumn("ORNumPaid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORNumPaid)
            Me.columnAmountPaid = New Global.System.Data.DataColumn("AmountPaid", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmountPaid)
            Me.columnMoneyAmount = New Global.System.Data.DataColumn("MoneyAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMoneyAmount)
            Me.columnmChange = New Global.System.Data.DataColumn("mChange", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmChange)
            Me.columnFexcess = New Global.System.Data.DataColumn("Fexcess", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFexcess)
            Me.columnSExcess = New Global.System.Data.DataColumn("SExcess", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSExcess)
            Me.columnFratepercub = New Global.System.Data.DataColumn("Fratepercub", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFratepercub)
            Me.columnSRatepercub = New Global.System.Data.DataColumn("SRatepercub", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRatepercub)
            Me.columnprevSCDis = New Global.System.Data.DataColumn("prevSCDis", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevSCDis)
            Me.columnmunicipality = New Global.System.Data.DataColumn("municipality", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmunicipality)
            Me.columnAccountNo.MaxLength = 45
            Me.columnStreetAddress.MaxLength = 100
            Me.columnMeterNo.MaxLength = 45
            Me.columnConsumerName.MaxLength = 100
            Me.columnclassification.MaxLength = 100
            Me.columnbilliD.AutoIncrement = true
            Me.columnbilliD.AutoIncrementSeed = -1
            Me.columnbilliD.AutoIncrementStep = -1
            Me.columnbilliD.AllowDBNull = false
            Me.columnisSenior.MaxLength = 45
            Me.columnbillMonth.MaxLength = 90
            Me.columnisSC.MaxLength = 90
            Me.columnisAdjusted.MaxLength = 90
            Me.columnadjReason.MaxLength = 200
            Me.columnadjRemark.MaxLength = 600
            Me.columnadjApprovStat.MaxLength = 90
            Me.columnbillstat.MaxLength = 90
            Me.columnmetName.MaxLength = 120
            Me.columnbillNote.MaxLength = 600
            Me.columnbillperiod.MaxLength = 90
            Me.columnFLabel.MaxLength = 90
            Me.columnSLabel.MaxLength = 90
            Me.columnclustername.MaxLength = 100
            Me.columnPrepAdjName.MaxLength = 45
            Me.columnApprovAdjName.MaxLength = 45
            Me.columnUserFullName.MaxLength = 45
            Me.columnaddBrgy.MaxLength = 100
            Me.columnAccountName.MaxLength = 200
            Me.columncontactNum.MaxLength = 30
            Me.columnORNumPaid.MaxLength = 90
            Me.columnmunicipality.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewBillNoticeRow() As BillNoticeRow
            Return CType(Me.NewRow,BillNoticeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BillNoticeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BillNoticeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BillNoticeRowChangedEvent) Is Nothing) Then
                RaiseEvent BillNoticeRowChanged(Me, New BillNoticeRowChangeEvent(CType(e.Row,BillNoticeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BillNoticeRowChangingEvent) Is Nothing) Then
                RaiseEvent BillNoticeRowChanging(Me, New BillNoticeRowChangeEvent(CType(e.Row,BillNoticeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BillNoticeRowDeletedEvent) Is Nothing) Then
                RaiseEvent BillNoticeRowDeleted(Me, New BillNoticeRowChangeEvent(CType(e.Row,BillNoticeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BillNoticeRowDeletingEvent) Is Nothing) Then
                RaiseEvent BillNoticeRowDeleting(Me, New BillNoticeRowChangeEvent(CType(e.Row,BillNoticeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveBillNoticeRow(ByVal row As BillNoticeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As reportingdataset = New reportingdataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BillNoticeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ORDataTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of ORDataTableRow)
        
        Private columnorID As Global.System.Data.DataColumn
        
        Private columnORNum As Global.System.Data.DataColumn
        
        Private columntotalPayment As Global.System.Data.DataColumn
        
        Private columnpType As Global.System.Data.DataColumn
        
        Private columnuID As Global.System.Data.DataColumn
        
        Private columnamountinwords As Global.System.Data.DataColumn
        
        Private columnconsID As Global.System.Data.DataColumn
        
        Private columnconsID1 As Global.System.Data.DataColumn
        
        Private columnuID1 As Global.System.Data.DataColumn
        
        Private columnConsumerName As Global.System.Data.DataColumn
        
        Private columncAddress As Global.System.Data.DataColumn
        
        Private columncontactNum As Global.System.Data.DataColumn
        
        Private columnuname As Global.System.Data.DataColumn
        
        Private columnupass As Global.System.Data.DataColumn
        
        Private columnfullname As Global.System.Data.DataColumn
        
        Private columnutypeid As Global.System.Data.DataColumn
        
        Private columnposition As Global.System.Data.DataColumn
        
        Private columnuserStatus As Global.System.Data.DataColumn
        
        Private columncanDel As Global.System.Data.DataColumn
        
        Private columndraweeBank As Global.System.Data.DataColumn
        
        Private columndraweenum As Global.System.Data.DataColumn
        
        Private columndraweedate As Global.System.Data.DataColumn
        
        Private columnpDate As Global.System.Data.DataColumn
        
        Private columnseniorRmk As Global.System.Data.DataColumn
        
        Private columnseniorID As Global.System.Data.DataColumn
        
        Private columntotalDiscount As Global.System.Data.DataColumn
        
        Private columnnature1 As Global.System.Data.DataColumn
        
        Private columnnature2 As Global.System.Data.DataColumn
        
        Private columnnature3 As Global.System.Data.DataColumn
        
        Private columnnature4 As Global.System.Data.DataColumn
        
        Private columnnature5 As Global.System.Data.DataColumn
        
        Private columnnature6 As Global.System.Data.DataColumn
        
        Private columnnature7 As Global.System.Data.DataColumn
        
        Private columnnature8 As Global.System.Data.DataColumn
        
        Private columncode1 As Global.System.Data.DataColumn
        
        Private columncode2 As Global.System.Data.DataColumn
        
        Private columncode3 As Global.System.Data.DataColumn
        
        Private columncode4 As Global.System.Data.DataColumn
        
        Private columncode5 As Global.System.Data.DataColumn
        
        Private columncode6 As Global.System.Data.DataColumn
        
        Private columncode7 As Global.System.Data.DataColumn
        
        Private columncode8 As Global.System.Data.DataColumn
        
        Private columnamount1 As Global.System.Data.DataColumn
        
        Private columnamount2 As Global.System.Data.DataColumn
        
        Private columnamount3 As Global.System.Data.DataColumn
        
        Private columnamount4 As Global.System.Data.DataColumn
        
        Private columnamount5 As Global.System.Data.DataColumn
        
        Private columnamount6 As Global.System.Data.DataColumn
        
        Private columnamount7 As Global.System.Data.DataColumn
        
        Private columnamount8 As Global.System.Data.DataColumn
        
        Private columncollectorname As Global.System.Data.DataColumn
        
        Private columnisSC As Global.System.Data.DataColumn
        
        Private columnseniorID1 As Global.System.Data.DataColumn
        
        Private columnagency As Global.System.Data.DataColumn
        
        Private columnamountinwords2 As Global.System.Data.DataColumn
        
        Private columncashCheck As Global.System.Data.DataColumn
        
        Private columncheckCheck As Global.System.Data.DataColumn
        
        Private columnMoneyOrderCheck As Global.System.Data.DataColumn
        
        Private columnmoneyordernum As Global.System.Data.DataColumn
        
        Private columnmoneyorderdate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ORDataTable"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property orIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalPaymentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotalPayment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property uIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amountinwordsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamountinwords
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property uID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnuID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConsumerNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConsumerName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contactNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontactNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property unameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property upassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fullnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfullname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property utypeidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnutypeid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property positionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnposition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property userStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuserStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property canDelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncanDel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property draweeBankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndraweeBank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property draweenumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndraweenum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property draweedateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndraweedate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property seniorRmkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseniorRmk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property seniorIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseniorID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalDiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotalDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nature1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnature1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nature2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnature2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nature3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnature3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nature4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnature4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nature5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnature5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nature6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnature6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nature7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnature7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nature8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnature8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property code1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncode1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property code2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncode2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property code3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncode3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property code4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncode4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property code5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncode5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property code6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncode6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property code7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncode7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property code8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncode8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property collectornameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncollectorname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property isSCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisSC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property seniorID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnseniorID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property agencyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnagency
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amountinwords2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamountinwords2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cashCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncashCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property checkCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncheckCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MoneyOrderCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMoneyOrderCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property moneyordernumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmoneyordernum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property moneyorderdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmoneyorderdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ORDataTableRow
            Get
                Return CType(Me.Rows(index),ORDataTableRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ORDataTableRowChanging As ORDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ORDataTableRowChanged As ORDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ORDataTableRowDeleting As ORDataTableRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ORDataTableRowDeleted As ORDataTableRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddORDataTableRow(ByVal row As ORDataTableRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddORDataTableRow( _
                    ByVal ORNum As String,  _
                    ByVal totalPayment As Double,  _
                    ByVal pType As String,  _
                    ByVal uID As Integer,  _
                    ByVal amountinwords As String,  _
                    ByVal consID As Integer,  _
                    ByVal consID1 As Integer,  _
                    ByVal uID1 As Integer,  _
                    ByVal ConsumerName As String,  _
                    ByVal cAddress As String,  _
                    ByVal contactNum As String,  _
                    ByVal uname As String,  _
                    ByVal upass As String,  _
                    ByVal fullname As String,  _
                    ByVal utypeid As Integer,  _
                    ByVal position As String,  _
                    ByVal userStatus As String,  _
                    ByVal canDel As String,  _
                    ByVal draweeBank As String,  _
                    ByVal draweenum As String,  _
                    ByVal draweedate As String,  _
                    ByVal pDate As Date,  _
                    ByVal seniorRmk As String,  _
                    ByVal seniorID As String,  _
                    ByVal totalDiscount As Double,  _
                    ByVal nature1 As String,  _
                    ByVal nature2 As String,  _
                    ByVal nature3 As String,  _
                    ByVal nature4 As String,  _
                    ByVal nature5 As String,  _
                    ByVal nature6 As String,  _
                    ByVal nature7 As String,  _
                    ByVal nature8 As String,  _
                    ByVal code1 As String,  _
                    ByVal code2 As String,  _
                    ByVal code3 As String,  _
                    ByVal code4 As String,  _
                    ByVal code5 As String,  _
                    ByVal code6 As String,  _
                    ByVal code7 As String,  _
                    ByVal code8 As String,  _
                    ByVal amount1 As String,  _
                    ByVal amount2 As String,  _
                    ByVal amount3 As String,  _
                    ByVal amount4 As String,  _
                    ByVal amount5 As String,  _
                    ByVal amount6 As String,  _
                    ByVal amount7 As String,  _
                    ByVal amount8 As String,  _
                    ByVal collectorname As String,  _
                    ByVal isSC As String,  _
                    ByVal seniorID1 As String,  _
                    ByVal agency As String,  _
                    ByVal amountinwords2 As String,  _
                    ByVal cashCheck As String,  _
                    ByVal checkCheck As String,  _
                    ByVal MoneyOrderCheck As String,  _
                    ByVal moneyordernum As String,  _
                    ByVal moneyorderdate As String) As ORDataTableRow
            Dim rowORDataTableRow As ORDataTableRow = CType(Me.NewRow,ORDataTableRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ORNum, totalPayment, pType, uID, amountinwords, consID, consID1, uID1, ConsumerName, cAddress, contactNum, uname, upass, fullname, utypeid, position, userStatus, canDel, draweeBank, draweenum, draweedate, pDate, seniorRmk, seniorID, totalDiscount, nature1, nature2, nature3, nature4, nature5, nature6, nature7, nature8, code1, code2, code3, code4, code5, code6, code7, code8, amount1, amount2, amount3, amount4, amount5, amount6, amount7, amount8, collectorname, isSC, seniorID1, agency, amountinwords2, cashCheck, checkCheck, MoneyOrderCheck, moneyordernum, moneyorderdate}
            rowORDataTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowORDataTableRow)
            Return rowORDataTableRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ORDataTableDataTable = CType(MyBase.Clone,ORDataTableDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ORDataTableDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnorID = MyBase.Columns("orID")
            Me.columnORNum = MyBase.Columns("ORNum")
            Me.columntotalPayment = MyBase.Columns("totalPayment")
            Me.columnpType = MyBase.Columns("pType")
            Me.columnuID = MyBase.Columns("uID")
            Me.columnamountinwords = MyBase.Columns("amountinwords")
            Me.columnconsID = MyBase.Columns("consID")
            Me.columnconsID1 = MyBase.Columns("consID1")
            Me.columnuID1 = MyBase.Columns("uID1")
            Me.columnConsumerName = MyBase.Columns("ConsumerName")
            Me.columncAddress = MyBase.Columns("cAddress")
            Me.columncontactNum = MyBase.Columns("contactNum")
            Me.columnuname = MyBase.Columns("uname")
            Me.columnupass = MyBase.Columns("upass")
            Me.columnfullname = MyBase.Columns("fullname")
            Me.columnutypeid = MyBase.Columns("utypeid")
            Me.columnposition = MyBase.Columns("position")
            Me.columnuserStatus = MyBase.Columns("userStatus")
            Me.columncanDel = MyBase.Columns("canDel")
            Me.columndraweeBank = MyBase.Columns("draweeBank")
            Me.columndraweenum = MyBase.Columns("draweenum")
            Me.columndraweedate = MyBase.Columns("draweedate")
            Me.columnpDate = MyBase.Columns("pDate")
            Me.columnseniorRmk = MyBase.Columns("seniorRmk")
            Me.columnseniorID = MyBase.Columns("seniorID")
            Me.columntotalDiscount = MyBase.Columns("totalDiscount")
            Me.columnnature1 = MyBase.Columns("nature1")
            Me.columnnature2 = MyBase.Columns("nature2")
            Me.columnnature3 = MyBase.Columns("nature3")
            Me.columnnature4 = MyBase.Columns("nature4")
            Me.columnnature5 = MyBase.Columns("nature5")
            Me.columnnature6 = MyBase.Columns("nature6")
            Me.columnnature7 = MyBase.Columns("nature7")
            Me.columnnature8 = MyBase.Columns("nature8")
            Me.columncode1 = MyBase.Columns("code1")
            Me.columncode2 = MyBase.Columns("code2")
            Me.columncode3 = MyBase.Columns("code3")
            Me.columncode4 = MyBase.Columns("code4")
            Me.columncode5 = MyBase.Columns("code5")
            Me.columncode6 = MyBase.Columns("code6")
            Me.columncode7 = MyBase.Columns("code7")
            Me.columncode8 = MyBase.Columns("code8")
            Me.columnamount1 = MyBase.Columns("amount1")
            Me.columnamount2 = MyBase.Columns("amount2")
            Me.columnamount3 = MyBase.Columns("amount3")
            Me.columnamount4 = MyBase.Columns("amount4")
            Me.columnamount5 = MyBase.Columns("amount5")
            Me.columnamount6 = MyBase.Columns("amount6")
            Me.columnamount7 = MyBase.Columns("amount7")
            Me.columnamount8 = MyBase.Columns("amount8")
            Me.columncollectorname = MyBase.Columns("collectorname")
            Me.columnisSC = MyBase.Columns("isSC")
            Me.columnseniorID1 = MyBase.Columns("seniorID1")
            Me.columnagency = MyBase.Columns("agency")
            Me.columnamountinwords2 = MyBase.Columns("amountinwords2")
            Me.columncashCheck = MyBase.Columns("cashCheck")
            Me.columncheckCheck = MyBase.Columns("checkCheck")
            Me.columnMoneyOrderCheck = MyBase.Columns("MoneyOrderCheck")
            Me.columnmoneyordernum = MyBase.Columns("moneyordernum")
            Me.columnmoneyorderdate = MyBase.Columns("moneyorderdate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnorID = New Global.System.Data.DataColumn("orID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorID)
            Me.columnORNum = New Global.System.Data.DataColumn("ORNum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORNum)
            Me.columntotalPayment = New Global.System.Data.DataColumn("totalPayment", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotalPayment)
            Me.columnpType = New Global.System.Data.DataColumn("pType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpType)
            Me.columnuID = New Global.System.Data.DataColumn("uID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuID)
            Me.columnamountinwords = New Global.System.Data.DataColumn("amountinwords", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamountinwords)
            Me.columnconsID = New Global.System.Data.DataColumn("consID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsID)
            Me.columnconsID1 = New Global.System.Data.DataColumn("consID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsID1)
            Me.columnuID1 = New Global.System.Data.DataColumn("uID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuID1)
            Me.columnConsumerName = New Global.System.Data.DataColumn("ConsumerName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConsumerName)
            Me.columncAddress = New Global.System.Data.DataColumn("cAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncAddress)
            Me.columncontactNum = New Global.System.Data.DataColumn("contactNum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontactNum)
            Me.columnuname = New Global.System.Data.DataColumn("uname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuname)
            Me.columnupass = New Global.System.Data.DataColumn("upass", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupass)
            Me.columnfullname = New Global.System.Data.DataColumn("fullname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfullname)
            Me.columnutypeid = New Global.System.Data.DataColumn("utypeid", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnutypeid)
            Me.columnposition = New Global.System.Data.DataColumn("position", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnposition)
            Me.columnuserStatus = New Global.System.Data.DataColumn("userStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuserStatus)
            Me.columncanDel = New Global.System.Data.DataColumn("canDel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncanDel)
            Me.columndraweeBank = New Global.System.Data.DataColumn("draweeBank", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndraweeBank)
            Me.columndraweenum = New Global.System.Data.DataColumn("draweenum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndraweenum)
            Me.columndraweedate = New Global.System.Data.DataColumn("draweedate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndraweedate)
            Me.columnpDate = New Global.System.Data.DataColumn("pDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpDate)
            Me.columnseniorRmk = New Global.System.Data.DataColumn("seniorRmk", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseniorRmk)
            Me.columnseniorID = New Global.System.Data.DataColumn("seniorID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseniorID)
            Me.columntotalDiscount = New Global.System.Data.DataColumn("totalDiscount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotalDiscount)
            Me.columnnature1 = New Global.System.Data.DataColumn("nature1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnature1)
            Me.columnnature2 = New Global.System.Data.DataColumn("nature2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnature2)
            Me.columnnature3 = New Global.System.Data.DataColumn("nature3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnature3)
            Me.columnnature4 = New Global.System.Data.DataColumn("nature4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnature4)
            Me.columnnature5 = New Global.System.Data.DataColumn("nature5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnature5)
            Me.columnnature6 = New Global.System.Data.DataColumn("nature6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnature6)
            Me.columnnature7 = New Global.System.Data.DataColumn("nature7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnature7)
            Me.columnnature8 = New Global.System.Data.DataColumn("nature8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnature8)
            Me.columncode1 = New Global.System.Data.DataColumn("code1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode1)
            Me.columncode2 = New Global.System.Data.DataColumn("code2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode2)
            Me.columncode3 = New Global.System.Data.DataColumn("code3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode3)
            Me.columncode4 = New Global.System.Data.DataColumn("code4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode4)
            Me.columncode5 = New Global.System.Data.DataColumn("code5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode5)
            Me.columncode6 = New Global.System.Data.DataColumn("code6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode6)
            Me.columncode7 = New Global.System.Data.DataColumn("code7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode7)
            Me.columncode8 = New Global.System.Data.DataColumn("code8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode8)
            Me.columnamount1 = New Global.System.Data.DataColumn("amount1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount1)
            Me.columnamount2 = New Global.System.Data.DataColumn("amount2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount2)
            Me.columnamount3 = New Global.System.Data.DataColumn("amount3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount3)
            Me.columnamount4 = New Global.System.Data.DataColumn("amount4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount4)
            Me.columnamount5 = New Global.System.Data.DataColumn("amount5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount5)
            Me.columnamount6 = New Global.System.Data.DataColumn("amount6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount6)
            Me.columnamount7 = New Global.System.Data.DataColumn("amount7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount7)
            Me.columnamount8 = New Global.System.Data.DataColumn("amount8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount8)
            Me.columncollectorname = New Global.System.Data.DataColumn("collectorname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncollectorname)
            Me.columnisSC = New Global.System.Data.DataColumn("isSC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisSC)
            Me.columnseniorID1 = New Global.System.Data.DataColumn("seniorID1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseniorID1)
            Me.columnagency = New Global.System.Data.DataColumn("agency", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnagency)
            Me.columnamountinwords2 = New Global.System.Data.DataColumn("amountinwords2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamountinwords2)
            Me.columncashCheck = New Global.System.Data.DataColumn("cashCheck", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncashCheck)
            Me.columncheckCheck = New Global.System.Data.DataColumn("checkCheck", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncheckCheck)
            Me.columnMoneyOrderCheck = New Global.System.Data.DataColumn("MoneyOrderCheck", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMoneyOrderCheck)
            Me.columnmoneyordernum = New Global.System.Data.DataColumn("moneyordernum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmoneyordernum)
            Me.columnmoneyorderdate = New Global.System.Data.DataColumn("moneyorderdate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmoneyorderdate)
            Me.columnorID.AutoIncrement = true
            Me.columnorID.AutoIncrementSeed = -1
            Me.columnorID.AutoIncrementStep = -1
            Me.columnorID.AllowDBNull = false
            Me.columnORNum.MaxLength = 45
            Me.columnpType.MaxLength = 45
            Me.columnamountinwords.MaxLength = 1000
            Me.columnConsumerName.MaxLength = 100
            Me.columncAddress.MaxLength = 200
            Me.columncontactNum.MaxLength = 30
            Me.columnuname.MaxLength = 45
            Me.columnupass.MaxLength = 45
            Me.columnfullname.MaxLength = 45
            Me.columnposition.MaxLength = 100
            Me.columnuserStatus.MaxLength = 45
            Me.columncanDel.MaxLength = 45
            Me.columndraweeBank.MaxLength = 90
            Me.columndraweenum.MaxLength = 90
            Me.columndraweedate.MaxLength = 90
            Me.columnseniorRmk.MaxLength = 90
            Me.columnseniorID.MaxLength = 90
            Me.columnnature1.MaxLength = 90
            Me.columnnature2.MaxLength = 90
            Me.columnnature3.MaxLength = 90
            Me.columnnature4.MaxLength = 90
            Me.columnnature5.MaxLength = 90
            Me.columnnature6.MaxLength = 90
            Me.columnnature7.MaxLength = 90
            Me.columnnature8.MaxLength = 90
            Me.columncode1.MaxLength = 90
            Me.columncode2.MaxLength = 90
            Me.columncode3.MaxLength = 90
            Me.columncode4.MaxLength = 90
            Me.columncode5.MaxLength = 90
            Me.columncode6.MaxLength = 90
            Me.columncode7.MaxLength = 90
            Me.columncode8.MaxLength = 90
            Me.columnamount1.MaxLength = 90
            Me.columnamount2.MaxLength = 90
            Me.columnamount3.MaxLength = 90
            Me.columnamount4.MaxLength = 90
            Me.columnamount5.MaxLength = 90
            Me.columnamount6.MaxLength = 90
            Me.columnamount7.MaxLength = 90
            Me.columnamount8.MaxLength = 90
            Me.columncollectorname.MaxLength = 200
            Me.columnisSC.MaxLength = 45
            Me.columnseniorID1.MaxLength = 45
            Me.columnagency.MaxLength = 100
            Me.columnamountinwords2.MaxLength = 600
            Me.columncashCheck.MaxLength = 90
            Me.columncheckCheck.MaxLength = 90
            Me.columnMoneyOrderCheck.MaxLength = 90
            Me.columnmoneyordernum.MaxLength = 90
            Me.columnmoneyorderdate.MaxLength = 90
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewORDataTableRow() As ORDataTableRow
            Return CType(Me.NewRow,ORDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ORDataTableRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ORDataTableRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ORDataTableRowChangedEvent) Is Nothing) Then
                RaiseEvent ORDataTableRowChanged(Me, New ORDataTableRowChangeEvent(CType(e.Row,ORDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ORDataTableRowChangingEvent) Is Nothing) Then
                RaiseEvent ORDataTableRowChanging(Me, New ORDataTableRowChangeEvent(CType(e.Row,ORDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ORDataTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent ORDataTableRowDeleted(Me, New ORDataTableRowChangeEvent(CType(e.Row,ORDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ORDataTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent ORDataTableRowDeleting(Me, New ORDataTableRowChangeEvent(CType(e.Row,ORDataTableRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveORDataTableRow(ByVal row As ORDataTableRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As reportingdataset = New reportingdataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ORDataTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DailyReportDataSetDataTable
        Inherits Global.System.Data.TypedTableBase(Of DailyReportDataSetRow)
        
        Private columnconsumername As Global.System.Data.DataColumn
        
        Private columnaddbrgy As Global.System.Data.DataColumn
        
        Private columnORNumber As Global.System.Data.DataColumn
        
        Private columnDatesRange As Global.System.Data.DataColumn
        
        Private columnpayAmount As Global.System.Data.DataColumn
        
        Private columnConsumption As Global.System.Data.DataColumn
        
        Private columnSurcharge As Global.System.Data.DataColumn
        
        Private columnpaymentType As Global.System.Data.DataColumn
        
        Private columnInstallation As Global.System.Data.DataColumn
        
        Private columnOTHERS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DailyReportDataSet"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consumernameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsumername
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property addbrgyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddbrgy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DatesRangeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatesRange
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property payAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpayAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConsumptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConsumption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SurchargeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSurcharge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property paymentTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpaymentType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InstallationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstallation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DailyReportDataSetRow
            Get
                Return CType(Me.Rows(index),DailyReportDataSetRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DailyReportDataSetRowChanging As DailyReportDataSetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DailyReportDataSetRowChanged As DailyReportDataSetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DailyReportDataSetRowDeleting As DailyReportDataSetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DailyReportDataSetRowDeleted As DailyReportDataSetRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddDailyReportDataSetRow(ByVal row As DailyReportDataSetRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddDailyReportDataSetRow(ByVal consumername As String, ByVal addbrgy As String, ByVal ORNumber As String, ByVal DatesRange As String, ByVal payAmount As String, ByVal Consumption As Integer, ByVal Surcharge As String, ByVal paymentType As String, ByVal Installation As Double, ByVal OTHERS As Double) As DailyReportDataSetRow
            Dim rowDailyReportDataSetRow As DailyReportDataSetRow = CType(Me.NewRow,DailyReportDataSetRow)
            Dim columnValuesArray() As Object = New Object() {consumername, addbrgy, ORNumber, DatesRange, payAmount, Consumption, Surcharge, paymentType, Installation, OTHERS}
            rowDailyReportDataSetRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDailyReportDataSetRow)
            Return rowDailyReportDataSetRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DailyReportDataSetDataTable = CType(MyBase.Clone,DailyReportDataSetDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DailyReportDataSetDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnconsumername = MyBase.Columns("consumername")
            Me.columnaddbrgy = MyBase.Columns("addbrgy")
            Me.columnORNumber = MyBase.Columns("ORNumber")
            Me.columnDatesRange = MyBase.Columns("DatesRange")
            Me.columnpayAmount = MyBase.Columns("payAmount")
            Me.columnConsumption = MyBase.Columns("Consumption")
            Me.columnSurcharge = MyBase.Columns("Surcharge")
            Me.columnpaymentType = MyBase.Columns("paymentType")
            Me.columnInstallation = MyBase.Columns("Installation")
            Me.columnOTHERS = MyBase.Columns("OTHERS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnconsumername = New Global.System.Data.DataColumn("consumername", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsumername)
            Me.columnaddbrgy = New Global.System.Data.DataColumn("addbrgy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddbrgy)
            Me.columnORNumber = New Global.System.Data.DataColumn("ORNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORNumber)
            Me.columnDatesRange = New Global.System.Data.DataColumn("DatesRange", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatesRange)
            Me.columnpayAmount = New Global.System.Data.DataColumn("payAmount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpayAmount)
            Me.columnConsumption = New Global.System.Data.DataColumn("Consumption", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConsumption)
            Me.columnSurcharge = New Global.System.Data.DataColumn("Surcharge", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSurcharge)
            Me.columnpaymentType = New Global.System.Data.DataColumn("paymentType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpaymentType)
            Me.columnInstallation = New Global.System.Data.DataColumn("Installation", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstallation)
            Me.columnOTHERS = New Global.System.Data.DataColumn("OTHERS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTHERS)
            Me.columnconsumername.MaxLength = 100
            Me.columnaddbrgy.MaxLength = 100
            Me.columnORNumber.MaxLength = 45
            Me.columnDatesRange.MaxLength = 24
            Me.columnpayAmount.MaxLength = 63
            Me.columnSurcharge.MaxLength = 62
            Me.columnpaymentType.MaxLength = 45
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewDailyReportDataSetRow() As DailyReportDataSetRow
            Return CType(Me.NewRow,DailyReportDataSetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DailyReportDataSetRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DailyReportDataSetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DailyReportDataSetRowChangedEvent) Is Nothing) Then
                RaiseEvent DailyReportDataSetRowChanged(Me, New DailyReportDataSetRowChangeEvent(CType(e.Row,DailyReportDataSetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DailyReportDataSetRowChangingEvent) Is Nothing) Then
                RaiseEvent DailyReportDataSetRowChanging(Me, New DailyReportDataSetRowChangeEvent(CType(e.Row,DailyReportDataSetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DailyReportDataSetRowDeletedEvent) Is Nothing) Then
                RaiseEvent DailyReportDataSetRowDeleted(Me, New DailyReportDataSetRowChangeEvent(CType(e.Row,DailyReportDataSetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DailyReportDataSetRowDeletingEvent) Is Nothing) Then
                RaiseEvent DailyReportDataSetRowDeleting(Me, New DailyReportDataSetRowChangeEvent(CType(e.Row,DailyReportDataSetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveDailyReportDataSetRow(ByVal row As DailyReportDataSetRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As reportingdataset = New reportingdataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DailyReportDataSetDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class billAdjustmentRequestDataTable
        Inherits Global.System.Data.TypedTableBase(Of billAdjustmentRequestRow)
        
        Private columnreqID As Global.System.Data.DataColumn
        
        Private columnacctID As Global.System.Data.DataColumn
        
        Private columnclusterID As Global.System.Data.DataColumn
        
        Private columnconsID As Global.System.Data.DataColumn
        
        Private columnrequestdate As Global.System.Data.DataColumn
        
        Private columnadjReason As Global.System.Data.DataColumn
        
        Private columnpreparedby As Global.System.Data.DataColumn
        
        Private columnrequestedby As Global.System.Data.DataColumn
        
        Private columnadjInspection As Global.System.Data.DataColumn
        
        Private columnincpectedby As Global.System.Data.DataColumn
        
        Private columnapprovedby As Global.System.Data.DataColumn
        
        Private columnbillID As Global.System.Data.DataColumn
        
        Private columnbillID1 As Global.System.Data.DataColumn
        
        Private columnacctID1 As Global.System.Data.DataColumn
        
        Private columnconsID1 As Global.System.Data.DataColumn
        
        Private columnclassID As Global.System.Data.DataColumn
        
        Private columndueDate As Global.System.Data.DataColumn
        
        Private columnfromDate As Global.System.Data.DataColumn
        
        Private columntoDate As Global.System.Data.DataColumn
        
        Private columnbillMonth As Global.System.Data.DataColumn
        
        Private columnbillYear As Global.System.Data.DataColumn
        
        Private columnprevRead As Global.System.Data.DataColumn
        
        Private columnpresRead As Global.System.Data.DataColumn
        
        Private columnprevBal As Global.System.Data.DataColumn
        
        Private columnprevConsump As Global.System.Data.DataColumn
        
        Private columnprevEnv As Global.System.Data.DataColumn
        
        Private columnprevAdj As Global.System.Data.DataColumn
        
        Private columnprevAdjustedRate As Global.System.Data.DataColumn
        
        Private columnprevPenalty As Global.System.Data.DataColumn
        
        Private columnprevAmountDue As Global.System.Data.DataColumn
        
        Private columnprevTotal As Global.System.Data.DataColumn
        
        Private columnconsump As Global.System.Data.DataColumn
        
        Private columnamount As Global.System.Data.DataColumn
        
        Private columnflatrate As Global.System.Data.DataColumn
        
        Private columnexcess As Global.System.Data.DataColumn
        
        Private columnadjusted As Global.System.Data.DataColumn
        
        Private columnadjustedRate As Global.System.Data.DataColumn
        
        Private columnEnviFee As Global.System.Data.DataColumn
        
        Private columntotalAmountDue As Global.System.Data.DataColumn
        
        Private columnuseAmount As Global.System.Data.DataColumn
        
        Private columnuseADue As Global.System.Data.DataColumn
        
        Private columnpenalty As Global.System.Data.DataColumn
        
        Private columnAmountADue As Global.System.Data.DataColumn
        
        Private columnisSC As Global.System.Data.DataColumn
        
        Private columnSCDiscount As Global.System.Data.DataColumn
        
        Private columnSCPenalty As Global.System.Data.DataColumn
        
        Private columnseqNum As Global.System.Data.DataColumn
        
        Private columnisAdjusted As Global.System.Data.DataColumn
        
        Private columnorigConsump As Global.System.Data.DataColumn
        
        Private columnorigAmount As Global.System.Data.DataColumn
        
        Private columnorigFlat As Global.System.Data.DataColumn
        
        Private columnorigExcess As Global.System.Data.DataColumn
        
        Private columnorigAdjusted As Global.System.Data.DataColumn
        
        Private columnorigAdjustedRate As Global.System.Data.DataColumn
        
        Private columnorigEnvi As Global.System.Data.DataColumn
        
        Private columnorigPenalty As Global.System.Data.DataColumn
        
        Private columnorigTotalPen As Global.System.Data.DataColumn
        
        Private columnorigSCDis As Global.System.Data.DataColumn
        
        Private columnorigSCPen As Global.System.Data.DataColumn
        
        Private columnadjReason1 As Global.System.Data.DataColumn
        
        Private columnadjPrep As Global.System.Data.DataColumn
        
        Private columnadjDate As Global.System.Data.DataColumn
        
        Private columnadjApprov As Global.System.Data.DataColumn
        
        Private columnadjRemark As Global.System.Data.DataColumn
        
        Private columnadjApprovStat As Global.System.Data.DataColumn
        
        Private columnbillStat As Global.System.Data.DataColumn
        
        Private columnORNumPaid As Global.System.Data.DataColumn
        
        Private columnAmountPaid As Global.System.Data.DataColumn
        
        Private columnMoneyAmount As Global.System.Data.DataColumn
        
        Private columnmChange As Global.System.Data.DataColumn
        
        Private columnmetReadID As Global.System.Data.DataColumn
        
        Private columnbillNote As Global.System.Data.DataColumn
        
        Private columnuID As Global.System.Data.DataColumn
        
        Private columnzoneID As Global.System.Data.DataColumn
        
        Private columnclusterID1 As Global.System.Data.DataColumn
        
        Private columnbillPeriod As Global.System.Data.DataColumn
        
        Private columnbillDate As Global.System.Data.DataColumn
        
        Private columnFconsump As Global.System.Data.DataColumn
        
        Private columnSConsump As Global.System.Data.DataColumn
        
        Private columnFExcess As Global.System.Data.DataColumn
        
        Private columnSExcess As Global.System.Data.DataColumn
        
        Private columnFLabel As Global.System.Data.DataColumn
        
        Private columnSLabel As Global.System.Data.DataColumn
        
        Private columnreadDate As Global.System.Data.DataColumn
        
        Private columnadjConsump As Global.System.Data.DataColumn
        
        Private columnminConsump As Global.System.Data.DataColumn
        
        Private columnFratepercub As Global.System.Data.DataColumn
        
        Private columnSRatepercub As Global.System.Data.DataColumn
        
        Private columnprevSCDis As Global.System.Data.DataColumn
        
        Private columnpaymentDate As Global.System.Data.DataColumn
        
        Private columnbillNo As Global.System.Data.DataColumn
        
        Private columnSCRate As Global.System.Data.DataColumn
        
        Private columnadjApprovDate As Global.System.Data.DataColumn
        
        Private columnprevOutstanding As Global.System.Data.DataColumn
        
        Private columnprevOutstandingStat As Global.System.Data.DataColumn
        
        Private columnprevOutstandingOR As Global.System.Data.DataColumn
        
        Private columnprevOutstandingDuration As Global.System.Data.DataColumn
        
        Private columnBaseRate As Global.System.Data.DataColumn
        
        Private columnconsID2 As Global.System.Data.DataColumn
        
        Private columnConsumerName As Global.System.Data.DataColumn
        
        Private columncAddress As Global.System.Data.DataColumn
        
        Private columncontactNum As Global.System.Data.DataColumn
        
        Private columnisSC1 As Global.System.Data.DataColumn
        
        Private columnseniorID As Global.System.Data.DataColumn
        
        Private columnagency As Global.System.Data.DataColumn
        
        Private columnacctID2 As Global.System.Data.DataColumn
        
        Private columnconsID3 As Global.System.Data.DataColumn
        
        Private columnclassID1 As Global.System.Data.DataColumn
        
        Private columnbrgyID As Global.System.Data.DataColumn
        
        Private columnclusterID2 As Global.System.Data.DataColumn
        
        Private columnSequence As Global.System.Data.DataColumn
        
        Private columnAccountNo As Global.System.Data.DataColumn
        
        Private columnreceiptNo As Global.System.Data.DataColumn
        
        Private columnStreetAddress As Global.System.Data.DataColumn
        
        Private columnMeterNo As Global.System.Data.DataColumn
        
        Private columnMeterBrand As Global.System.Data.DataColumn
        
        Private columnMeterSize As Global.System.Data.DataColumn
        
        Private columnMeterReference As Global.System.Data.DataColumn
        
        Private columnConnectionDate As Global.System.Data.DataColumn
        
        Private columnAcctStatus As Global.System.Data.DataColumn
        
        Private columnCanDelete As Global.System.Data.DataColumn
        
        Private columnisSenior As Global.System.Data.DataColumn
        
        Private columnseniorID1 As Global.System.Data.DataColumn
        
        Private columnAccountName As Global.System.Data.DataColumn
        
        Private columnclusterID3 As Global.System.Data.DataColumn
        
        Private columnbrgyID1 As Global.System.Data.DataColumn
        
        Private columnClusterName As Global.System.Data.DataColumn
        
        Private columnbrgyID2 As Global.System.Data.DataColumn
        
        Private columnZoneID1 As Global.System.Data.DataColumn
        
        Private columnAddBrgy As Global.System.Data.DataColumn
        
        Private columnbrgyCode As Global.System.Data.DataColumn
        
        Private columnClusterSize As Global.System.Data.DataColumn
        
        Private columnbClass As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "billAdjustmentRequest"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property reqIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreqID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acctIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnacctID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clusterIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclusterID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property requestdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrequestdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjReasonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjReason
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property preparedbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpreparedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property requestedbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrequestedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjInspectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjInspection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property incpectedbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnincpectedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property approvedbyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnapprovedby
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acctID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnacctID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property classIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclassID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dueDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndueDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fromDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfromDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property toDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntoDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billMonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillMonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevReadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevRead
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property presReadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpresRead
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevBalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevBal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevConsumpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevConsump
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevEnvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevEnv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevAdjColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevAdj
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevAdjustedRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevAdjustedRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevPenaltyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevPenalty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevAmountDueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevAmountDue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consumpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsump
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property flatrateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnflatrate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property excessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexcess
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjustedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjusted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjustedRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjustedRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EnviFeeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEnviFee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalAmountDueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotalAmountDue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property useAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuseAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property useADueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuseADue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property penaltyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpenalty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AmountADueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmountADue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property isSCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisSC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCDiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCPenaltyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCPenalty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property seqNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseqNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property isAdjustedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisAdjusted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property origConsumpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorigConsump
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property origAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorigAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property origFlatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorigFlat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property origExcessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorigExcess
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property origAdjustedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorigAdjusted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property origAdjustedRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorigAdjustedRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property origEnviColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorigEnvi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property origPenaltyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorigPenalty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property origTotalPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorigTotalPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property origSCDisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorigSCDis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property origSCPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorigSCPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjReason1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjReason1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjPrepColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjPrep
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjApprovColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjApprov
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjRemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjRemark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjApprovStatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjApprovStat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billStatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillStat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORNumPaidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORNumPaid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AmountPaidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmountPaid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MoneyAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMoneyAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mChangeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmChange
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property metReadIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmetReadID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billNoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property uIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property zoneIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzoneID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clusterID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnclusterID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billPeriodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillPeriod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FconsumpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFconsump
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SConsumpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSConsump
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FExcessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFExcess
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SExcessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSExcess
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FLabelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFLabel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SLabelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSLabel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property readDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreadDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjConsumpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjConsump
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property minConsumpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnminConsump
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FratepercubColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFratepercub
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SRatepercubColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRatepercub
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevSCDisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevSCDis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property paymentDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpaymentDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SCRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjApprovDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjApprovDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevOutstandingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevOutstanding
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevOutstandingStatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevOutstandingStat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevOutstandingORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevOutstandingOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevOutstandingDurationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevOutstandingDuration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BaseRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBaseRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consID2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsID2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConsumerNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConsumerName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contactNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontactNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property isSC1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnisSC1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property seniorIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseniorID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property agencyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnagency
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acctID2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnacctID2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consID3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsID3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property classID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnclassID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property brgyIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbrgyID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clusterID2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnclusterID2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SequenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSequence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property receiptNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreceiptNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StreetAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStreetAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeterNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeterNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeterBrandColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeterBrand
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeterSizeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeterSize
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeterReferenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeterReference
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConnectionDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConnectionDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcctStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcctStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CanDeleteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCanDelete
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property isSeniorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisSenior
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property seniorID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnseniorID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clusterID3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnclusterID3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property brgyID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnbrgyID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClusterNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClusterName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property brgyID2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnbrgyID2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZoneID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnZoneID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AddBrgyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddBrgy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property brgyCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbrgyCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClusterSizeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClusterSize
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property bClassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbClass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As billAdjustmentRequestRow
            Get
                Return CType(Me.Rows(index),billAdjustmentRequestRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event billAdjustmentRequestRowChanging As billAdjustmentRequestRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event billAdjustmentRequestRowChanged As billAdjustmentRequestRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event billAdjustmentRequestRowDeleting As billAdjustmentRequestRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event billAdjustmentRequestRowDeleted As billAdjustmentRequestRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddbillAdjustmentRequestRow(ByVal row As billAdjustmentRequestRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddbillAdjustmentRequestRow( _
                    ByVal reqID As Integer,  _
                    ByVal acctID As Integer,  _
                    ByVal clusterID As Integer,  _
                    ByVal consID As Integer,  _
                    ByVal requestdate As Date,  _
                    ByVal adjReason As String,  _
                    ByVal preparedby As String,  _
                    ByVal requestedby As String,  _
                    ByVal adjInspection As String,  _
                    ByVal incpectedby As String,  _
                    ByVal approvedby As String,  _
                    ByVal billID As Integer,  _
                    ByVal acctID1 As Integer,  _
                    ByVal consID1 As Integer,  _
                    ByVal classID As Integer,  _
                    ByVal dueDate As Date,  _
                    ByVal fromDate As Date,  _
                    ByVal toDate As Date,  _
                    ByVal billMonth As String,  _
                    ByVal billYear As Integer,  _
                    ByVal prevRead As Integer,  _
                    ByVal presRead As Integer,  _
                    ByVal prevBal As Double,  _
                    ByVal prevConsump As Integer,  _
                    ByVal prevEnv As Double,  _
                    ByVal prevAdj As Double,  _
                    ByVal prevAdjustedRate As Double,  _
                    ByVal prevPenalty As Double,  _
                    ByVal prevAmountDue As Double,  _
                    ByVal prevTotal As Double,  _
                    ByVal consump As Integer,  _
                    ByVal amount As Double,  _
                    ByVal flatrate As Double,  _
                    ByVal excess As Double,  _
                    ByVal adjusted As Double,  _
                    ByVal adjustedRate As Double,  _
                    ByVal EnviFee As Double,  _
                    ByVal totalAmountDue As Double,  _
                    ByVal useAmount As Double,  _
                    ByVal useADue As Double,  _
                    ByVal penalty As Double,  _
                    ByVal AmountADue As Double,  _
                    ByVal isSC As String,  _
                    ByVal SCDiscount As Double,  _
                    ByVal SCPenalty As Double,  _
                    ByVal seqNum As Integer,  _
                    ByVal isAdjusted As String,  _
                    ByVal origConsump As Integer,  _
                    ByVal origAmount As Double,  _
                    ByVal origFlat As Double,  _
                    ByVal origExcess As Double,  _
                    ByVal origAdjusted As Double,  _
                    ByVal origAdjustedRate As Double,  _
                    ByVal origEnvi As Double,  _
                    ByVal origPenalty As Double,  _
                    ByVal origTotalPen As Double,  _
                    ByVal origSCDis As Double,  _
                    ByVal origSCPen As Double,  _
                    ByVal adjReason1 As String,  _
                    ByVal adjPrep As Integer,  _
                    ByVal adjDate As Date,  _
                    ByVal adjApprov As Integer,  _
                    ByVal adjRemark As String,  _
                    ByVal adjApprovStat As String,  _
                    ByVal billStat As String,  _
                    ByVal ORNumPaid As Double,  _
                    ByVal AmountPaid As Double,  _
                    ByVal MoneyAmount As Double,  _
                    ByVal mChange As Double,  _
                    ByVal metReadID As Integer,  _
                    ByVal billNote As String,  _
                    ByVal uID As Integer,  _
                    ByVal zoneID As Integer,  _
                    ByVal clusterID1 As Integer,  _
                    ByVal billPeriod As String,  _
                    ByVal billDate As Date,  _
                    ByVal Fconsump As Integer,  _
                    ByVal SConsump As Integer,  _
                    ByVal FExcess As Double,  _
                    ByVal SExcess As Double,  _
                    ByVal FLabel As String,  _
                    ByVal SLabel As String,  _
                    ByVal readDate As Date,  _
                    ByVal adjConsump As Integer,  _
                    ByVal minConsump As Integer,  _
                    ByVal Fratepercub As Double,  _
                    ByVal SRatepercub As Double,  _
                    ByVal prevSCDis As Double,  _
                    ByVal paymentDate As Date,  _
                    ByVal billNo As Integer,  _
                    ByVal SCRate As Double,  _
                    ByVal adjApprovDate As Date,  _
                    ByVal prevOutstanding As Double,  _
                    ByVal prevOutstandingStat As String,  _
                    ByVal prevOutstandingOR As String,  _
                    ByVal prevOutstandingDuration As String,  _
                    ByVal BaseRate As Double,  _
                    ByVal ConsumerName As String,  _
                    ByVal cAddress As String,  _
                    ByVal contactNum As String,  _
                    ByVal isSC1 As String,  _
                    ByVal seniorID As String,  _
                    ByVal agency As String,  _
                    ByVal consID3 As Integer,  _
                    ByVal classID1 As Integer,  _
                    ByVal brgyID As Integer,  _
                    ByVal clusterID2 As Integer,  _
                    ByVal Sequence As Integer,  _
                    ByVal AccountNo As String,  _
                    ByVal receiptNo As String,  _
                    ByVal StreetAddress As String,  _
                    ByVal MeterNo As String,  _
                    ByVal MeterBrand As String,  _
                    ByVal MeterSize As String,  _
                    ByVal MeterReference As String,  _
                    ByVal ConnectionDate As Date,  _
                    ByVal AcctStatus As Integer,  _
                    ByVal CanDelete As String,  _
                    ByVal isSenior As String,  _
                    ByVal seniorID1 As String,  _
                    ByVal AccountName As String,  _
                    ByVal brgyID1 As Integer,  _
                    ByVal ClusterName As String,  _
                    ByVal ZoneID1 As Integer,  _
                    ByVal AddBrgy As String,  _
                    ByVal brgyCode As String,  _
                    ByVal ClusterSize As Integer,  _
                    ByVal bClass As String) As billAdjustmentRequestRow
            Dim rowbillAdjustmentRequestRow As billAdjustmentRequestRow = CType(Me.NewRow,billAdjustmentRequestRow)
            Dim columnValuesArray() As Object = New Object() {reqID, acctID, clusterID, consID, requestdate, adjReason, preparedby, requestedby, adjInspection, incpectedby, approvedby, billID, Nothing, acctID1, consID1, classID, dueDate, fromDate, toDate, billMonth, billYear, prevRead, presRead, prevBal, prevConsump, prevEnv, prevAdj, prevAdjustedRate, prevPenalty, prevAmountDue, prevTotal, consump, amount, flatrate, excess, adjusted, adjustedRate, EnviFee, totalAmountDue, useAmount, useADue, penalty, AmountADue, isSC, SCDiscount, SCPenalty, seqNum, isAdjusted, origConsump, origAmount, origFlat, origExcess, origAdjusted, origAdjustedRate, origEnvi, origPenalty, origTotalPen, origSCDis, origSCPen, adjReason1, adjPrep, adjDate, adjApprov, adjRemark, adjApprovStat, billStat, ORNumPaid, AmountPaid, MoneyAmount, mChange, metReadID, billNote, uID, zoneID, clusterID1, billPeriod, billDate, Fconsump, SConsump, FExcess, SExcess, FLabel, SLabel, readDate, adjConsump, minConsump, Fratepercub, SRatepercub, prevSCDis, paymentDate, billNo, SCRate, adjApprovDate, prevOutstanding, prevOutstandingStat, prevOutstandingOR, prevOutstandingDuration, BaseRate, Nothing, ConsumerName, cAddress, contactNum, isSC1, seniorID, agency, Nothing, consID3, classID1, brgyID, clusterID2, Sequence, AccountNo, receiptNo, StreetAddress, MeterNo, MeterBrand, MeterSize, MeterReference, ConnectionDate, AcctStatus, CanDelete, isSenior, seniorID1, AccountName, Nothing, brgyID1, ClusterName, Nothing, ZoneID1, AddBrgy, brgyCode, ClusterSize, bClass}
            rowbillAdjustmentRequestRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowbillAdjustmentRequestRow)
            Return rowbillAdjustmentRequestRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As billAdjustmentRequestDataTable = CType(MyBase.Clone,billAdjustmentRequestDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New billAdjustmentRequestDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnreqID = MyBase.Columns("reqID")
            Me.columnacctID = MyBase.Columns("acctID")
            Me.columnclusterID = MyBase.Columns("clusterID")
            Me.columnconsID = MyBase.Columns("consID")
            Me.columnrequestdate = MyBase.Columns("requestdate")
            Me.columnadjReason = MyBase.Columns("adjReason")
            Me.columnpreparedby = MyBase.Columns("preparedby")
            Me.columnrequestedby = MyBase.Columns("requestedby")
            Me.columnadjInspection = MyBase.Columns("adjInspection")
            Me.columnincpectedby = MyBase.Columns("incpectedby")
            Me.columnapprovedby = MyBase.Columns("approvedby")
            Me.columnbillID = MyBase.Columns("billID")
            Me.columnbillID1 = MyBase.Columns("billID1")
            Me.columnacctID1 = MyBase.Columns("acctID1")
            Me.columnconsID1 = MyBase.Columns("consID1")
            Me.columnclassID = MyBase.Columns("classID")
            Me.columndueDate = MyBase.Columns("dueDate")
            Me.columnfromDate = MyBase.Columns("fromDate")
            Me.columntoDate = MyBase.Columns("toDate")
            Me.columnbillMonth = MyBase.Columns("billMonth")
            Me.columnbillYear = MyBase.Columns("billYear")
            Me.columnprevRead = MyBase.Columns("prevRead")
            Me.columnpresRead = MyBase.Columns("presRead")
            Me.columnprevBal = MyBase.Columns("prevBal")
            Me.columnprevConsump = MyBase.Columns("prevConsump")
            Me.columnprevEnv = MyBase.Columns("prevEnv")
            Me.columnprevAdj = MyBase.Columns("prevAdj")
            Me.columnprevAdjustedRate = MyBase.Columns("prevAdjustedRate")
            Me.columnprevPenalty = MyBase.Columns("prevPenalty")
            Me.columnprevAmountDue = MyBase.Columns("prevAmountDue")
            Me.columnprevTotal = MyBase.Columns("prevTotal")
            Me.columnconsump = MyBase.Columns("consump")
            Me.columnamount = MyBase.Columns("amount")
            Me.columnflatrate = MyBase.Columns("flatrate")
            Me.columnexcess = MyBase.Columns("excess")
            Me.columnadjusted = MyBase.Columns("adjusted")
            Me.columnadjustedRate = MyBase.Columns("adjustedRate")
            Me.columnEnviFee = MyBase.Columns("EnviFee")
            Me.columntotalAmountDue = MyBase.Columns("totalAmountDue")
            Me.columnuseAmount = MyBase.Columns("useAmount")
            Me.columnuseADue = MyBase.Columns("useADue")
            Me.columnpenalty = MyBase.Columns("penalty")
            Me.columnAmountADue = MyBase.Columns("AmountADue")
            Me.columnisSC = MyBase.Columns("isSC")
            Me.columnSCDiscount = MyBase.Columns("SCDiscount")
            Me.columnSCPenalty = MyBase.Columns("SCPenalty")
            Me.columnseqNum = MyBase.Columns("seqNum")
            Me.columnisAdjusted = MyBase.Columns("isAdjusted")
            Me.columnorigConsump = MyBase.Columns("origConsump")
            Me.columnorigAmount = MyBase.Columns("origAmount")
            Me.columnorigFlat = MyBase.Columns("origFlat")
            Me.columnorigExcess = MyBase.Columns("origExcess")
            Me.columnorigAdjusted = MyBase.Columns("origAdjusted")
            Me.columnorigAdjustedRate = MyBase.Columns("origAdjustedRate")
            Me.columnorigEnvi = MyBase.Columns("origEnvi")
            Me.columnorigPenalty = MyBase.Columns("origPenalty")
            Me.columnorigTotalPen = MyBase.Columns("origTotalPen")
            Me.columnorigSCDis = MyBase.Columns("origSCDis")
            Me.columnorigSCPen = MyBase.Columns("origSCPen")
            Me.columnadjReason1 = MyBase.Columns("adjReason1")
            Me.columnadjPrep = MyBase.Columns("adjPrep")
            Me.columnadjDate = MyBase.Columns("adjDate")
            Me.columnadjApprov = MyBase.Columns("adjApprov")
            Me.columnadjRemark = MyBase.Columns("adjRemark")
            Me.columnadjApprovStat = MyBase.Columns("adjApprovStat")
            Me.columnbillStat = MyBase.Columns("billStat")
            Me.columnORNumPaid = MyBase.Columns("ORNumPaid")
            Me.columnAmountPaid = MyBase.Columns("AmountPaid")
            Me.columnMoneyAmount = MyBase.Columns("MoneyAmount")
            Me.columnmChange = MyBase.Columns("mChange")
            Me.columnmetReadID = MyBase.Columns("metReadID")
            Me.columnbillNote = MyBase.Columns("billNote")
            Me.columnuID = MyBase.Columns("uID")
            Me.columnzoneID = MyBase.Columns("zoneID")
            Me.columnclusterID1 = MyBase.Columns("clusterID1")
            Me.columnbillPeriod = MyBase.Columns("billPeriod")
            Me.columnbillDate = MyBase.Columns("billDate")
            Me.columnFconsump = MyBase.Columns("Fconsump")
            Me.columnSConsump = MyBase.Columns("SConsump")
            Me.columnFExcess = MyBase.Columns("FExcess")
            Me.columnSExcess = MyBase.Columns("SExcess")
            Me.columnFLabel = MyBase.Columns("FLabel")
            Me.columnSLabel = MyBase.Columns("SLabel")
            Me.columnreadDate = MyBase.Columns("readDate")
            Me.columnadjConsump = MyBase.Columns("adjConsump")
            Me.columnminConsump = MyBase.Columns("minConsump")
            Me.columnFratepercub = MyBase.Columns("Fratepercub")
            Me.columnSRatepercub = MyBase.Columns("SRatepercub")
            Me.columnprevSCDis = MyBase.Columns("prevSCDis")
            Me.columnpaymentDate = MyBase.Columns("paymentDate")
            Me.columnbillNo = MyBase.Columns("billNo")
            Me.columnSCRate = MyBase.Columns("SCRate")
            Me.columnadjApprovDate = MyBase.Columns("adjApprovDate")
            Me.columnprevOutstanding = MyBase.Columns("prevOutstanding")
            Me.columnprevOutstandingStat = MyBase.Columns("prevOutstandingStat")
            Me.columnprevOutstandingOR = MyBase.Columns("prevOutstandingOR")
            Me.columnprevOutstandingDuration = MyBase.Columns("prevOutstandingDuration")
            Me.columnBaseRate = MyBase.Columns("BaseRate")
            Me.columnconsID2 = MyBase.Columns("consID2")
            Me.columnConsumerName = MyBase.Columns("ConsumerName")
            Me.columncAddress = MyBase.Columns("cAddress")
            Me.columncontactNum = MyBase.Columns("contactNum")
            Me.columnisSC1 = MyBase.Columns("isSC1")
            Me.columnseniorID = MyBase.Columns("seniorID")
            Me.columnagency = MyBase.Columns("agency")
            Me.columnacctID2 = MyBase.Columns("acctID2")
            Me.columnconsID3 = MyBase.Columns("consID3")
            Me.columnclassID1 = MyBase.Columns("classID1")
            Me.columnbrgyID = MyBase.Columns("brgyID")
            Me.columnclusterID2 = MyBase.Columns("clusterID2")
            Me.columnSequence = MyBase.Columns("Sequence")
            Me.columnAccountNo = MyBase.Columns("AccountNo")
            Me.columnreceiptNo = MyBase.Columns("receiptNo")
            Me.columnStreetAddress = MyBase.Columns("StreetAddress")
            Me.columnMeterNo = MyBase.Columns("MeterNo")
            Me.columnMeterBrand = MyBase.Columns("MeterBrand")
            Me.columnMeterSize = MyBase.Columns("MeterSize")
            Me.columnMeterReference = MyBase.Columns("MeterReference")
            Me.columnConnectionDate = MyBase.Columns("ConnectionDate")
            Me.columnAcctStatus = MyBase.Columns("AcctStatus")
            Me.columnCanDelete = MyBase.Columns("CanDelete")
            Me.columnisSenior = MyBase.Columns("isSenior")
            Me.columnseniorID1 = MyBase.Columns("seniorID1")
            Me.columnAccountName = MyBase.Columns("AccountName")
            Me.columnclusterID3 = MyBase.Columns("clusterID3")
            Me.columnbrgyID1 = MyBase.Columns("brgyID1")
            Me.columnClusterName = MyBase.Columns("ClusterName")
            Me.columnbrgyID2 = MyBase.Columns("brgyID2")
            Me.columnZoneID1 = MyBase.Columns("ZoneID1")
            Me.columnAddBrgy = MyBase.Columns("AddBrgy")
            Me.columnbrgyCode = MyBase.Columns("brgyCode")
            Me.columnClusterSize = MyBase.Columns("ClusterSize")
            Me.columnbClass = MyBase.Columns("bClass")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnreqID = New Global.System.Data.DataColumn("reqID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreqID)
            Me.columnacctID = New Global.System.Data.DataColumn("acctID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacctID)
            Me.columnclusterID = New Global.System.Data.DataColumn("clusterID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclusterID)
            Me.columnconsID = New Global.System.Data.DataColumn("consID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsID)
            Me.columnrequestdate = New Global.System.Data.DataColumn("requestdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrequestdate)
            Me.columnadjReason = New Global.System.Data.DataColumn("adjReason", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjReason)
            Me.columnpreparedby = New Global.System.Data.DataColumn("preparedby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpreparedby)
            Me.columnrequestedby = New Global.System.Data.DataColumn("requestedby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrequestedby)
            Me.columnadjInspection = New Global.System.Data.DataColumn("adjInspection", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjInspection)
            Me.columnincpectedby = New Global.System.Data.DataColumn("incpectedby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnincpectedby)
            Me.columnapprovedby = New Global.System.Data.DataColumn("approvedby", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnapprovedby)
            Me.columnbillID = New Global.System.Data.DataColumn("billID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillID)
            Me.columnbillID1 = New Global.System.Data.DataColumn("billID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillID1)
            Me.columnacctID1 = New Global.System.Data.DataColumn("acctID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacctID1)
            Me.columnconsID1 = New Global.System.Data.DataColumn("consID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsID1)
            Me.columnclassID = New Global.System.Data.DataColumn("classID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclassID)
            Me.columndueDate = New Global.System.Data.DataColumn("dueDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndueDate)
            Me.columnfromDate = New Global.System.Data.DataColumn("fromDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfromDate)
            Me.columntoDate = New Global.System.Data.DataColumn("toDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntoDate)
            Me.columnbillMonth = New Global.System.Data.DataColumn("billMonth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillMonth)
            Me.columnbillYear = New Global.System.Data.DataColumn("billYear", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillYear)
            Me.columnprevRead = New Global.System.Data.DataColumn("prevRead", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevRead)
            Me.columnpresRead = New Global.System.Data.DataColumn("presRead", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpresRead)
            Me.columnprevBal = New Global.System.Data.DataColumn("prevBal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevBal)
            Me.columnprevConsump = New Global.System.Data.DataColumn("prevConsump", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevConsump)
            Me.columnprevEnv = New Global.System.Data.DataColumn("prevEnv", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevEnv)
            Me.columnprevAdj = New Global.System.Data.DataColumn("prevAdj", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevAdj)
            Me.columnprevAdjustedRate = New Global.System.Data.DataColumn("prevAdjustedRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevAdjustedRate)
            Me.columnprevPenalty = New Global.System.Data.DataColumn("prevPenalty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevPenalty)
            Me.columnprevAmountDue = New Global.System.Data.DataColumn("prevAmountDue", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevAmountDue)
            Me.columnprevTotal = New Global.System.Data.DataColumn("prevTotal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevTotal)
            Me.columnconsump = New Global.System.Data.DataColumn("consump", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsump)
            Me.columnamount = New Global.System.Data.DataColumn("amount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount)
            Me.columnflatrate = New Global.System.Data.DataColumn("flatrate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnflatrate)
            Me.columnexcess = New Global.System.Data.DataColumn("excess", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexcess)
            Me.columnadjusted = New Global.System.Data.DataColumn("adjusted", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjusted)
            Me.columnadjustedRate = New Global.System.Data.DataColumn("adjustedRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjustedRate)
            Me.columnEnviFee = New Global.System.Data.DataColumn("EnviFee", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEnviFee)
            Me.columntotalAmountDue = New Global.System.Data.DataColumn("totalAmountDue", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotalAmountDue)
            Me.columnuseAmount = New Global.System.Data.DataColumn("useAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuseAmount)
            Me.columnuseADue = New Global.System.Data.DataColumn("useADue", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuseADue)
            Me.columnpenalty = New Global.System.Data.DataColumn("penalty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpenalty)
            Me.columnAmountADue = New Global.System.Data.DataColumn("AmountADue", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmountADue)
            Me.columnisSC = New Global.System.Data.DataColumn("isSC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisSC)
            Me.columnSCDiscount = New Global.System.Data.DataColumn("SCDiscount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCDiscount)
            Me.columnSCPenalty = New Global.System.Data.DataColumn("SCPenalty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCPenalty)
            Me.columnseqNum = New Global.System.Data.DataColumn("seqNum", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseqNum)
            Me.columnisAdjusted = New Global.System.Data.DataColumn("isAdjusted", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisAdjusted)
            Me.columnorigConsump = New Global.System.Data.DataColumn("origConsump", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorigConsump)
            Me.columnorigAmount = New Global.System.Data.DataColumn("origAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorigAmount)
            Me.columnorigFlat = New Global.System.Data.DataColumn("origFlat", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorigFlat)
            Me.columnorigExcess = New Global.System.Data.DataColumn("origExcess", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorigExcess)
            Me.columnorigAdjusted = New Global.System.Data.DataColumn("origAdjusted", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorigAdjusted)
            Me.columnorigAdjustedRate = New Global.System.Data.DataColumn("origAdjustedRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorigAdjustedRate)
            Me.columnorigEnvi = New Global.System.Data.DataColumn("origEnvi", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorigEnvi)
            Me.columnorigPenalty = New Global.System.Data.DataColumn("origPenalty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorigPenalty)
            Me.columnorigTotalPen = New Global.System.Data.DataColumn("origTotalPen", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorigTotalPen)
            Me.columnorigSCDis = New Global.System.Data.DataColumn("origSCDis", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorigSCDis)
            Me.columnorigSCPen = New Global.System.Data.DataColumn("origSCPen", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorigSCPen)
            Me.columnadjReason1 = New Global.System.Data.DataColumn("adjReason1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjReason1)
            Me.columnadjPrep = New Global.System.Data.DataColumn("adjPrep", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjPrep)
            Me.columnadjDate = New Global.System.Data.DataColumn("adjDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjDate)
            Me.columnadjApprov = New Global.System.Data.DataColumn("adjApprov", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjApprov)
            Me.columnadjRemark = New Global.System.Data.DataColumn("adjRemark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjRemark)
            Me.columnadjApprovStat = New Global.System.Data.DataColumn("adjApprovStat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjApprovStat)
            Me.columnbillStat = New Global.System.Data.DataColumn("billStat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillStat)
            Me.columnORNumPaid = New Global.System.Data.DataColumn("ORNumPaid", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORNumPaid)
            Me.columnAmountPaid = New Global.System.Data.DataColumn("AmountPaid", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmountPaid)
            Me.columnMoneyAmount = New Global.System.Data.DataColumn("MoneyAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMoneyAmount)
            Me.columnmChange = New Global.System.Data.DataColumn("mChange", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmChange)
            Me.columnmetReadID = New Global.System.Data.DataColumn("metReadID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmetReadID)
            Me.columnbillNote = New Global.System.Data.DataColumn("billNote", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillNote)
            Me.columnuID = New Global.System.Data.DataColumn("uID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuID)
            Me.columnzoneID = New Global.System.Data.DataColumn("zoneID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzoneID)
            Me.columnclusterID1 = New Global.System.Data.DataColumn("clusterID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclusterID1)
            Me.columnbillPeriod = New Global.System.Data.DataColumn("billPeriod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillPeriod)
            Me.columnbillDate = New Global.System.Data.DataColumn("billDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillDate)
            Me.columnFconsump = New Global.System.Data.DataColumn("Fconsump", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFconsump)
            Me.columnSConsump = New Global.System.Data.DataColumn("SConsump", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSConsump)
            Me.columnFExcess = New Global.System.Data.DataColumn("FExcess", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFExcess)
            Me.columnSExcess = New Global.System.Data.DataColumn("SExcess", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSExcess)
            Me.columnFLabel = New Global.System.Data.DataColumn("FLabel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFLabel)
            Me.columnSLabel = New Global.System.Data.DataColumn("SLabel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSLabel)
            Me.columnreadDate = New Global.System.Data.DataColumn("readDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreadDate)
            Me.columnadjConsump = New Global.System.Data.DataColumn("adjConsump", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjConsump)
            Me.columnminConsump = New Global.System.Data.DataColumn("minConsump", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnminConsump)
            Me.columnFratepercub = New Global.System.Data.DataColumn("Fratepercub", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFratepercub)
            Me.columnSRatepercub = New Global.System.Data.DataColumn("SRatepercub", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRatepercub)
            Me.columnprevSCDis = New Global.System.Data.DataColumn("prevSCDis", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevSCDis)
            Me.columnpaymentDate = New Global.System.Data.DataColumn("paymentDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpaymentDate)
            Me.columnbillNo = New Global.System.Data.DataColumn("billNo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillNo)
            Me.columnSCRate = New Global.System.Data.DataColumn("SCRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCRate)
            Me.columnadjApprovDate = New Global.System.Data.DataColumn("adjApprovDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjApprovDate)
            Me.columnprevOutstanding = New Global.System.Data.DataColumn("prevOutstanding", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevOutstanding)
            Me.columnprevOutstandingStat = New Global.System.Data.DataColumn("prevOutstandingStat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevOutstandingStat)
            Me.columnprevOutstandingOR = New Global.System.Data.DataColumn("prevOutstandingOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevOutstandingOR)
            Me.columnprevOutstandingDuration = New Global.System.Data.DataColumn("prevOutstandingDuration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevOutstandingDuration)
            Me.columnBaseRate = New Global.System.Data.DataColumn("BaseRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBaseRate)
            Me.columnconsID2 = New Global.System.Data.DataColumn("consID2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsID2)
            Me.columnConsumerName = New Global.System.Data.DataColumn("ConsumerName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConsumerName)
            Me.columncAddress = New Global.System.Data.DataColumn("cAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncAddress)
            Me.columncontactNum = New Global.System.Data.DataColumn("contactNum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontactNum)
            Me.columnisSC1 = New Global.System.Data.DataColumn("isSC1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisSC1)
            Me.columnseniorID = New Global.System.Data.DataColumn("seniorID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseniorID)
            Me.columnagency = New Global.System.Data.DataColumn("agency", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnagency)
            Me.columnacctID2 = New Global.System.Data.DataColumn("acctID2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacctID2)
            Me.columnconsID3 = New Global.System.Data.DataColumn("consID3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsID3)
            Me.columnclassID1 = New Global.System.Data.DataColumn("classID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclassID1)
            Me.columnbrgyID = New Global.System.Data.DataColumn("brgyID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbrgyID)
            Me.columnclusterID2 = New Global.System.Data.DataColumn("clusterID2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclusterID2)
            Me.columnSequence = New Global.System.Data.DataColumn("Sequence", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSequence)
            Me.columnAccountNo = New Global.System.Data.DataColumn("AccountNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountNo)
            Me.columnreceiptNo = New Global.System.Data.DataColumn("receiptNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreceiptNo)
            Me.columnStreetAddress = New Global.System.Data.DataColumn("StreetAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStreetAddress)
            Me.columnMeterNo = New Global.System.Data.DataColumn("MeterNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeterNo)
            Me.columnMeterBrand = New Global.System.Data.DataColumn("MeterBrand", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeterBrand)
            Me.columnMeterSize = New Global.System.Data.DataColumn("MeterSize", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeterSize)
            Me.columnMeterReference = New Global.System.Data.DataColumn("MeterReference", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeterReference)
            Me.columnConnectionDate = New Global.System.Data.DataColumn("ConnectionDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConnectionDate)
            Me.columnAcctStatus = New Global.System.Data.DataColumn("AcctStatus", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcctStatus)
            Me.columnCanDelete = New Global.System.Data.DataColumn("CanDelete", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCanDelete)
            Me.columnisSenior = New Global.System.Data.DataColumn("isSenior", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisSenior)
            Me.columnseniorID1 = New Global.System.Data.DataColumn("seniorID1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseniorID1)
            Me.columnAccountName = New Global.System.Data.DataColumn("AccountName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountName)
            Me.columnclusterID3 = New Global.System.Data.DataColumn("clusterID3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclusterID3)
            Me.columnbrgyID1 = New Global.System.Data.DataColumn("brgyID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbrgyID1)
            Me.columnClusterName = New Global.System.Data.DataColumn("ClusterName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClusterName)
            Me.columnbrgyID2 = New Global.System.Data.DataColumn("brgyID2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbrgyID2)
            Me.columnZoneID1 = New Global.System.Data.DataColumn("ZoneID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZoneID1)
            Me.columnAddBrgy = New Global.System.Data.DataColumn("AddBrgy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddBrgy)
            Me.columnbrgyCode = New Global.System.Data.DataColumn("brgyCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbrgyCode)
            Me.columnClusterSize = New Global.System.Data.DataColumn("ClusterSize", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClusterSize)
            Me.columnbClass = New Global.System.Data.DataColumn("bClass", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbClass)
            Me.columnreqID.AllowDBNull = false
            Me.columnadjReason.MaxLength = 500
            Me.columnpreparedby.MaxLength = 100
            Me.columnrequestedby.MaxLength = 100
            Me.columnadjInspection.MaxLength = 500
            Me.columnincpectedby.MaxLength = 100
            Me.columnapprovedby.MaxLength = 100
            Me.columnbillID1.AutoIncrement = true
            Me.columnbillID1.AutoIncrementSeed = -1
            Me.columnbillID1.AutoIncrementStep = -1
            Me.columnbillMonth.MaxLength = 90
            Me.columnisSC.MaxLength = 90
            Me.columnisAdjusted.MaxLength = 90
            Me.columnadjReason1.MaxLength = 200
            Me.columnadjRemark.MaxLength = 600
            Me.columnadjApprovStat.MaxLength = 90
            Me.columnbillStat.MaxLength = 90
            Me.columnbillNote.MaxLength = 600
            Me.columnbillPeriod.MaxLength = 90
            Me.columnFLabel.MaxLength = 90
            Me.columnSLabel.MaxLength = 90
            Me.columnprevOutstandingStat.MaxLength = 90
            Me.columnprevOutstandingOR.MaxLength = 90
            Me.columnprevOutstandingDuration.MaxLength = 90
            Me.columnconsID2.AutoIncrement = true
            Me.columnconsID2.AutoIncrementSeed = -1
            Me.columnconsID2.AutoIncrementStep = -1
            Me.columnConsumerName.MaxLength = 100
            Me.columncAddress.MaxLength = 200
            Me.columncontactNum.MaxLength = 30
            Me.columnisSC1.MaxLength = 45
            Me.columnseniorID.MaxLength = 45
            Me.columnagency.MaxLength = 100
            Me.columnacctID2.AutoIncrement = true
            Me.columnacctID2.AutoIncrementSeed = -1
            Me.columnacctID2.AutoIncrementStep = -1
            Me.columnAccountNo.MaxLength = 45
            Me.columnreceiptNo.MaxLength = 45
            Me.columnStreetAddress.MaxLength = 100
            Me.columnMeterNo.MaxLength = 45
            Me.columnMeterBrand.MaxLength = 45
            Me.columnMeterSize.MaxLength = 45
            Me.columnMeterReference.MaxLength = 45
            Me.columnCanDelete.MaxLength = 45
            Me.columnisSenior.MaxLength = 45
            Me.columnseniorID1.MaxLength = 45
            Me.columnAccountName.MaxLength = 200
            Me.columnclusterID3.AutoIncrement = true
            Me.columnclusterID3.AutoIncrementSeed = -1
            Me.columnclusterID3.AutoIncrementStep = -1
            Me.columnClusterName.MaxLength = 100
            Me.columnbrgyID2.AutoIncrement = true
            Me.columnbrgyID2.AutoIncrementSeed = -1
            Me.columnbrgyID2.AutoIncrementStep = -1
            Me.columnAddBrgy.MaxLength = 100
            Me.columnbrgyCode.MaxLength = 45
            Me.columnbClass.MaxLength = 45
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewbillAdjustmentRequestRow() As billAdjustmentRequestRow
            Return CType(Me.NewRow,billAdjustmentRequestRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New billAdjustmentRequestRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(billAdjustmentRequestRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.billAdjustmentRequestRowChangedEvent) Is Nothing) Then
                RaiseEvent billAdjustmentRequestRowChanged(Me, New billAdjustmentRequestRowChangeEvent(CType(e.Row,billAdjustmentRequestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.billAdjustmentRequestRowChangingEvent) Is Nothing) Then
                RaiseEvent billAdjustmentRequestRowChanging(Me, New billAdjustmentRequestRowChangeEvent(CType(e.Row,billAdjustmentRequestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.billAdjustmentRequestRowDeletedEvent) Is Nothing) Then
                RaiseEvent billAdjustmentRequestRowDeleted(Me, New billAdjustmentRequestRowChangeEvent(CType(e.Row,billAdjustmentRequestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.billAdjustmentRequestRowDeletingEvent) Is Nothing) Then
                RaiseEvent billAdjustmentRequestRowDeleting(Me, New billAdjustmentRequestRowChangeEvent(CType(e.Row,billAdjustmentRequestRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovebillAdjustmentRequestRow(ByVal row As billAdjustmentRequestRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As reportingdataset = New reportingdataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "billAdjustmentRequestDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DailyCollectionDataTable
        Inherits Global.System.Data.TypedTableBase(Of DailyCollectionRow)
        
        Private columnorID As Global.System.Data.DataColumn
        
        Private columnORNum As Global.System.Data.DataColumn
        
        Private columntotalPayment As Global.System.Data.DataColumn
        
        Private columnpType As Global.System.Data.DataColumn
        
        Private columndraweeBank As Global.System.Data.DataColumn
        
        Private columndraweenum As Global.System.Data.DataColumn
        
        Private columndraweedate As Global.System.Data.DataColumn
        
        Private columnamountinwords As Global.System.Data.DataColumn
        
        Private columnamountinwords2 As Global.System.Data.DataColumn
        
        Private columnuID As Global.System.Data.DataColumn
        
        Private columnpDate As Global.System.Data.DataColumn
        
        Private columnconsID As Global.System.Data.DataColumn
        
        Private columnseniorRmk As Global.System.Data.DataColumn
        
        Private columnseniorID As Global.System.Data.DataColumn
        
        Private columntotalDiscount As Global.System.Data.DataColumn
        
        Private columnnature1 As Global.System.Data.DataColumn
        
        Private columnnature2 As Global.System.Data.DataColumn
        
        Private columnnature3 As Global.System.Data.DataColumn
        
        Private columnnature4 As Global.System.Data.DataColumn
        
        Private columnnature5 As Global.System.Data.DataColumn
        
        Private columnnature6 As Global.System.Data.DataColumn
        
        Private columnnature7 As Global.System.Data.DataColumn
        
        Private columnnature8 As Global.System.Data.DataColumn
        
        Private columncode1 As Global.System.Data.DataColumn
        
        Private columncode2 As Global.System.Data.DataColumn
        
        Private columncode3 As Global.System.Data.DataColumn
        
        Private columncode4 As Global.System.Data.DataColumn
        
        Private columncode5 As Global.System.Data.DataColumn
        
        Private columncode6 As Global.System.Data.DataColumn
        
        Private columncode7 As Global.System.Data.DataColumn
        
        Private columncode8 As Global.System.Data.DataColumn
        
        Private columnamount1 As Global.System.Data.DataColumn
        
        Private columnamount2 As Global.System.Data.DataColumn
        
        Private columnamount3 As Global.System.Data.DataColumn
        
        Private columnamount4 As Global.System.Data.DataColumn
        
        Private columnamount5 As Global.System.Data.DataColumn
        
        Private columnamount6 As Global.System.Data.DataColumn
        
        Private columnamount7 As Global.System.Data.DataColumn
        
        Private columnamount8 As Global.System.Data.DataColumn
        
        Private columncollectorname As Global.System.Data.DataColumn
        
        Private columncashCheck As Global.System.Data.DataColumn
        
        Private columncheckCheck As Global.System.Data.DataColumn
        
        Private columnMoneyOrderCheck As Global.System.Data.DataColumn
        
        Private columnmoneyordernum As Global.System.Data.DataColumn
        
        Private columnmoneyorderdate As Global.System.Data.DataColumn
        
        Private columnorRemark As Global.System.Data.DataColumn
        
        Private columnconsID1 As Global.System.Data.DataColumn
        
        Private columnConsumerName As Global.System.Data.DataColumn
        
        Private columncAddress As Global.System.Data.DataColumn
        
        Private columncontactNum As Global.System.Data.DataColumn
        
        Private columnisSC As Global.System.Data.DataColumn
        
        Private columnseniorID1 As Global.System.Data.DataColumn
        
        Private columnagency As Global.System.Data.DataColumn
        
        Private columngender As Global.System.Data.DataColumn
        
        Private columnpenaltyAmt As Global.System.Data.DataColumn
        
        Private columnbillAmount As Global.System.Data.DataColumn
        
        Private columnadjustmentAmount As Global.System.Data.DataColumn
        
        Private _columnPenaltyAmt As Global.System.Data.DataColumn
        
        Private columnEFAmt As Global.System.Data.DataColumn
        
        Private columnApplicationFee As Global.System.Data.DataColumn
        
        Private columnReconnectionFee As Global.System.Data.DataColumn
        
        Private columnTransferFee As Global.System.Data.DataColumn
        
        Private columnogID As Global.System.Data.DataColumn
        
        Private columnoverpayment As Global.System.Data.DataColumn
        
        Private columnacctID As Global.System.Data.DataColumn
        
        Private columnacctID1 As Global.System.Data.DataColumn
        
        Private columnconsID2 As Global.System.Data.DataColumn
        
        Private columnclassID As Global.System.Data.DataColumn
        
        Private columnbrgyID As Global.System.Data.DataColumn
        
        Private columnclusterID As Global.System.Data.DataColumn
        
        Private columnSequence As Global.System.Data.DataColumn
        
        Private columnAccountNo As Global.System.Data.DataColumn
        
        Private columnreceiptNo As Global.System.Data.DataColumn
        
        Private columnStreetAddress As Global.System.Data.DataColumn
        
        Private columnMeterNo As Global.System.Data.DataColumn
        
        Private columnMeterBrand As Global.System.Data.DataColumn
        
        Private columnMeterSize As Global.System.Data.DataColumn
        
        Private columnMeterReference As Global.System.Data.DataColumn
        
        Private columnConnectionDate As Global.System.Data.DataColumn
        
        Private columnAcctStatus As Global.System.Data.DataColumn
        
        Private columnCanDelete As Global.System.Data.DataColumn
        
        Private columnisSenior As Global.System.Data.DataColumn
        
        Private columnseniorID2 As Global.System.Data.DataColumn
        
        Private columnAccountName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DailyCollection"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property orIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalPaymentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotalPayment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property draweeBankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndraweeBank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property draweenumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndraweenum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property draweedateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndraweedate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amountinwordsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamountinwords
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amountinwords2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamountinwords2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property uIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property seniorRmkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseniorRmk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property seniorIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseniorID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalDiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotalDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nature1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnature1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nature2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnature2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nature3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnature3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nature4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnature4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nature5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnature5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nature6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnature6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nature7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnature7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nature8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnnature8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property code1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncode1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property code2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncode2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property code3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncode3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property code4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncode4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property code5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncode5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property code6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncode6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property code7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncode7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property code8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columncode8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property collectornameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncollectorname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cashCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncashCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property checkCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncheckCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MoneyOrderCheckColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMoneyOrderCheck
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property moneyordernumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmoneyordernum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property moneyorderdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmoneyorderdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property orRemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnorRemark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConsumerNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConsumerName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contactNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontactNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property isSCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisSC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property seniorID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnseniorID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property agencyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnagency
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property genderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property penaltyAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpenaltyAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adjustmentAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadjustmentAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _PenaltyAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnPenaltyAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EFAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEFAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ApplicationFeeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApplicationFee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReconnectionFeeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReconnectionFee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TransferFeeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransferFee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ogIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnogID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property overpaymentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoverpayment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acctIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnacctID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acctID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnacctID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consID2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsID2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property classIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclassID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property brgyIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbrgyID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clusterIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclusterID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SequenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSequence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property receiptNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreceiptNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StreetAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStreetAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeterNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeterNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeterBrandColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeterBrand
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeterSizeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeterSize
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeterReferenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeterReference
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConnectionDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConnectionDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcctStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcctStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CanDeleteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCanDelete
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property isSeniorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnisSenior
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property seniorID2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnseniorID2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DailyCollectionRow
            Get
                Return CType(Me.Rows(index),DailyCollectionRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DailyCollectionRowChanging As DailyCollectionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DailyCollectionRowChanged As DailyCollectionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DailyCollectionRowDeleting As DailyCollectionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DailyCollectionRowDeleted As DailyCollectionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddDailyCollectionRow(ByVal row As DailyCollectionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddDailyCollectionRow( _
                    ByVal ORNum As String,  _
                    ByVal totalPayment As Double,  _
                    ByVal pType As String,  _
                    ByVal draweeBank As String,  _
                    ByVal draweenum As String,  _
                    ByVal draweedate As String,  _
                    ByVal amountinwords As String,  _
                    ByVal amountinwords2 As String,  _
                    ByVal uID As Integer,  _
                    ByVal pDate As Date,  _
                    ByVal consID As Integer,  _
                    ByVal seniorRmk As String,  _
                    ByVal seniorID As String,  _
                    ByVal totalDiscount As Double,  _
                    ByVal nature1 As String,  _
                    ByVal nature2 As String,  _
                    ByVal nature3 As String,  _
                    ByVal nature4 As String,  _
                    ByVal nature5 As String,  _
                    ByVal nature6 As String,  _
                    ByVal nature7 As String,  _
                    ByVal nature8 As String,  _
                    ByVal code1 As String,  _
                    ByVal code2 As String,  _
                    ByVal code3 As String,  _
                    ByVal code4 As String,  _
                    ByVal code5 As String,  _
                    ByVal code6 As String,  _
                    ByVal code7 As String,  _
                    ByVal code8 As String,  _
                    ByVal amount1 As String,  _
                    ByVal amount2 As String,  _
                    ByVal amount3 As String,  _
                    ByVal amount4 As String,  _
                    ByVal amount5 As String,  _
                    ByVal amount6 As String,  _
                    ByVal amount7 As String,  _
                    ByVal amount8 As String,  _
                    ByVal collectorname As String,  _
                    ByVal cashCheck As String,  _
                    ByVal checkCheck As String,  _
                    ByVal MoneyOrderCheck As String,  _
                    ByVal moneyordernum As String,  _
                    ByVal moneyorderdate As String,  _
                    ByVal orRemark As String,  _
                    ByVal ConsumerName As String,  _
                    ByVal cAddress As String,  _
                    ByVal contactNum As String,  _
                    ByVal isSC As String,  _
                    ByVal seniorID1 As String,  _
                    ByVal agency As String,  _
                    ByVal gender As String,  _
                    ByVal penaltyAmt As Double,  _
                    ByVal billAmount As Decimal,  _
                    ByVal adjustmentAmount As Decimal,  _
                    ByVal _PenaltyAmt As Decimal,  _
                    ByVal EFAmt As Decimal,  _
                    ByVal ApplicationFee As Decimal,  _
                    ByVal ReconnectionFee As Decimal,  _
                    ByVal TransferFee As Decimal,  _
                    ByVal ogID As Integer,  _
                    ByVal overpayment As Decimal,  _
                    ByVal acctID As Integer,  _
                    ByVal consID2 As Integer,  _
                    ByVal classID As Integer,  _
                    ByVal brgyID As Integer,  _
                    ByVal clusterID As Integer,  _
                    ByVal Sequence As Integer,  _
                    ByVal AccountNo As String,  _
                    ByVal receiptNo As String,  _
                    ByVal StreetAddress As String,  _
                    ByVal MeterNo As String,  _
                    ByVal MeterBrand As String,  _
                    ByVal MeterSize As String,  _
                    ByVal MeterReference As String,  _
                    ByVal ConnectionDate As Date,  _
                    ByVal AcctStatus As Integer,  _
                    ByVal CanDelete As String,  _
                    ByVal isSenior As String,  _
                    ByVal seniorID2 As String,  _
                    ByVal AccountName As String) As DailyCollectionRow
            Dim rowDailyCollectionRow As DailyCollectionRow = CType(Me.NewRow,DailyCollectionRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ORNum, totalPayment, pType, draweeBank, draweenum, draweedate, amountinwords, amountinwords2, uID, pDate, consID, seniorRmk, seniorID, totalDiscount, nature1, nature2, nature3, nature4, nature5, nature6, nature7, nature8, code1, code2, code3, code4, code5, code6, code7, code8, amount1, amount2, amount3, amount4, amount5, amount6, amount7, amount8, collectorname, cashCheck, checkCheck, MoneyOrderCheck, moneyordernum, moneyorderdate, orRemark, Nothing, ConsumerName, cAddress, contactNum, isSC, seniorID1, agency, gender, penaltyAmt, billAmount, adjustmentAmount, _PenaltyAmt, EFAmt, ApplicationFee, ReconnectionFee, TransferFee, ogID, overpayment, acctID, Nothing, consID2, classID, brgyID, clusterID, Sequence, AccountNo, receiptNo, StreetAddress, MeterNo, MeterBrand, MeterSize, MeterReference, ConnectionDate, AcctStatus, CanDelete, isSenior, seniorID2, AccountName}
            rowDailyCollectionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDailyCollectionRow)
            Return rowDailyCollectionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DailyCollectionDataTable = CType(MyBase.Clone,DailyCollectionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DailyCollectionDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnorID = MyBase.Columns("orID")
            Me.columnORNum = MyBase.Columns("ORNum")
            Me.columntotalPayment = MyBase.Columns("totalPayment")
            Me.columnpType = MyBase.Columns("pType")
            Me.columndraweeBank = MyBase.Columns("draweeBank")
            Me.columndraweenum = MyBase.Columns("draweenum")
            Me.columndraweedate = MyBase.Columns("draweedate")
            Me.columnamountinwords = MyBase.Columns("amountinwords")
            Me.columnamountinwords2 = MyBase.Columns("amountinwords2")
            Me.columnuID = MyBase.Columns("uID")
            Me.columnpDate = MyBase.Columns("pDate")
            Me.columnconsID = MyBase.Columns("consID")
            Me.columnseniorRmk = MyBase.Columns("seniorRmk")
            Me.columnseniorID = MyBase.Columns("seniorID")
            Me.columntotalDiscount = MyBase.Columns("totalDiscount")
            Me.columnnature1 = MyBase.Columns("nature1")
            Me.columnnature2 = MyBase.Columns("nature2")
            Me.columnnature3 = MyBase.Columns("nature3")
            Me.columnnature4 = MyBase.Columns("nature4")
            Me.columnnature5 = MyBase.Columns("nature5")
            Me.columnnature6 = MyBase.Columns("nature6")
            Me.columnnature7 = MyBase.Columns("nature7")
            Me.columnnature8 = MyBase.Columns("nature8")
            Me.columncode1 = MyBase.Columns("code1")
            Me.columncode2 = MyBase.Columns("code2")
            Me.columncode3 = MyBase.Columns("code3")
            Me.columncode4 = MyBase.Columns("code4")
            Me.columncode5 = MyBase.Columns("code5")
            Me.columncode6 = MyBase.Columns("code6")
            Me.columncode7 = MyBase.Columns("code7")
            Me.columncode8 = MyBase.Columns("code8")
            Me.columnamount1 = MyBase.Columns("amount1")
            Me.columnamount2 = MyBase.Columns("amount2")
            Me.columnamount3 = MyBase.Columns("amount3")
            Me.columnamount4 = MyBase.Columns("amount4")
            Me.columnamount5 = MyBase.Columns("amount5")
            Me.columnamount6 = MyBase.Columns("amount6")
            Me.columnamount7 = MyBase.Columns("amount7")
            Me.columnamount8 = MyBase.Columns("amount8")
            Me.columncollectorname = MyBase.Columns("collectorname")
            Me.columncashCheck = MyBase.Columns("cashCheck")
            Me.columncheckCheck = MyBase.Columns("checkCheck")
            Me.columnMoneyOrderCheck = MyBase.Columns("MoneyOrderCheck")
            Me.columnmoneyordernum = MyBase.Columns("moneyordernum")
            Me.columnmoneyorderdate = MyBase.Columns("moneyorderdate")
            Me.columnorRemark = MyBase.Columns("orRemark")
            Me.columnconsID1 = MyBase.Columns("consID1")
            Me.columnConsumerName = MyBase.Columns("ConsumerName")
            Me.columncAddress = MyBase.Columns("cAddress")
            Me.columncontactNum = MyBase.Columns("contactNum")
            Me.columnisSC = MyBase.Columns("isSC")
            Me.columnseniorID1 = MyBase.Columns("seniorID1")
            Me.columnagency = MyBase.Columns("agency")
            Me.columngender = MyBase.Columns("gender")
            Me.columnpenaltyAmt = MyBase.Columns("penaltyAmt")
            Me.columnbillAmount = MyBase.Columns("billAmount")
            Me.columnadjustmentAmount = MyBase.Columns("adjustmentAmount")
            Me._columnPenaltyAmt = MyBase.Columns("PenaltyAmt")
            Me.columnEFAmt = MyBase.Columns("EFAmt")
            Me.columnApplicationFee = MyBase.Columns("ApplicationFee")
            Me.columnReconnectionFee = MyBase.Columns("ReconnectionFee")
            Me.columnTransferFee = MyBase.Columns("TransferFee")
            Me.columnogID = MyBase.Columns("ogID")
            Me.columnoverpayment = MyBase.Columns("overpayment")
            Me.columnacctID = MyBase.Columns("acctID")
            Me.columnacctID1 = MyBase.Columns("acctID1")
            Me.columnconsID2 = MyBase.Columns("consID2")
            Me.columnclassID = MyBase.Columns("classID")
            Me.columnbrgyID = MyBase.Columns("brgyID")
            Me.columnclusterID = MyBase.Columns("clusterID")
            Me.columnSequence = MyBase.Columns("Sequence")
            Me.columnAccountNo = MyBase.Columns("AccountNo")
            Me.columnreceiptNo = MyBase.Columns("receiptNo")
            Me.columnStreetAddress = MyBase.Columns("StreetAddress")
            Me.columnMeterNo = MyBase.Columns("MeterNo")
            Me.columnMeterBrand = MyBase.Columns("MeterBrand")
            Me.columnMeterSize = MyBase.Columns("MeterSize")
            Me.columnMeterReference = MyBase.Columns("MeterReference")
            Me.columnConnectionDate = MyBase.Columns("ConnectionDate")
            Me.columnAcctStatus = MyBase.Columns("AcctStatus")
            Me.columnCanDelete = MyBase.Columns("CanDelete")
            Me.columnisSenior = MyBase.Columns("isSenior")
            Me.columnseniorID2 = MyBase.Columns("seniorID2")
            Me.columnAccountName = MyBase.Columns("AccountName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnorID = New Global.System.Data.DataColumn("orID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorID)
            Me.columnORNum = New Global.System.Data.DataColumn("ORNum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORNum)
            Me.columntotalPayment = New Global.System.Data.DataColumn("totalPayment", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotalPayment)
            Me.columnpType = New Global.System.Data.DataColumn("pType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpType)
            Me.columndraweeBank = New Global.System.Data.DataColumn("draweeBank", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndraweeBank)
            Me.columndraweenum = New Global.System.Data.DataColumn("draweenum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndraweenum)
            Me.columndraweedate = New Global.System.Data.DataColumn("draweedate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndraweedate)
            Me.columnamountinwords = New Global.System.Data.DataColumn("amountinwords", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamountinwords)
            Me.columnamountinwords2 = New Global.System.Data.DataColumn("amountinwords2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamountinwords2)
            Me.columnuID = New Global.System.Data.DataColumn("uID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuID)
            Me.columnpDate = New Global.System.Data.DataColumn("pDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpDate)
            Me.columnconsID = New Global.System.Data.DataColumn("consID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsID)
            Me.columnseniorRmk = New Global.System.Data.DataColumn("seniorRmk", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseniorRmk)
            Me.columnseniorID = New Global.System.Data.DataColumn("seniorID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseniorID)
            Me.columntotalDiscount = New Global.System.Data.DataColumn("totalDiscount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotalDiscount)
            Me.columnnature1 = New Global.System.Data.DataColumn("nature1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnature1)
            Me.columnnature2 = New Global.System.Data.DataColumn("nature2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnature2)
            Me.columnnature3 = New Global.System.Data.DataColumn("nature3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnature3)
            Me.columnnature4 = New Global.System.Data.DataColumn("nature4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnature4)
            Me.columnnature5 = New Global.System.Data.DataColumn("nature5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnature5)
            Me.columnnature6 = New Global.System.Data.DataColumn("nature6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnature6)
            Me.columnnature7 = New Global.System.Data.DataColumn("nature7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnature7)
            Me.columnnature8 = New Global.System.Data.DataColumn("nature8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnature8)
            Me.columncode1 = New Global.System.Data.DataColumn("code1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode1)
            Me.columncode2 = New Global.System.Data.DataColumn("code2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode2)
            Me.columncode3 = New Global.System.Data.DataColumn("code3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode3)
            Me.columncode4 = New Global.System.Data.DataColumn("code4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode4)
            Me.columncode5 = New Global.System.Data.DataColumn("code5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode5)
            Me.columncode6 = New Global.System.Data.DataColumn("code6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode6)
            Me.columncode7 = New Global.System.Data.DataColumn("code7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode7)
            Me.columncode8 = New Global.System.Data.DataColumn("code8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode8)
            Me.columnamount1 = New Global.System.Data.DataColumn("amount1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount1)
            Me.columnamount2 = New Global.System.Data.DataColumn("amount2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount2)
            Me.columnamount3 = New Global.System.Data.DataColumn("amount3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount3)
            Me.columnamount4 = New Global.System.Data.DataColumn("amount4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount4)
            Me.columnamount5 = New Global.System.Data.DataColumn("amount5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount5)
            Me.columnamount6 = New Global.System.Data.DataColumn("amount6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount6)
            Me.columnamount7 = New Global.System.Data.DataColumn("amount7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount7)
            Me.columnamount8 = New Global.System.Data.DataColumn("amount8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount8)
            Me.columncollectorname = New Global.System.Data.DataColumn("collectorname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncollectorname)
            Me.columncashCheck = New Global.System.Data.DataColumn("cashCheck", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncashCheck)
            Me.columncheckCheck = New Global.System.Data.DataColumn("checkCheck", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncheckCheck)
            Me.columnMoneyOrderCheck = New Global.System.Data.DataColumn("MoneyOrderCheck", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMoneyOrderCheck)
            Me.columnmoneyordernum = New Global.System.Data.DataColumn("moneyordernum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmoneyordernum)
            Me.columnmoneyorderdate = New Global.System.Data.DataColumn("moneyorderdate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmoneyorderdate)
            Me.columnorRemark = New Global.System.Data.DataColumn("orRemark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnorRemark)
            Me.columnconsID1 = New Global.System.Data.DataColumn("consID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsID1)
            Me.columnConsumerName = New Global.System.Data.DataColumn("ConsumerName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConsumerName)
            Me.columncAddress = New Global.System.Data.DataColumn("cAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncAddress)
            Me.columncontactNum = New Global.System.Data.DataColumn("contactNum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontactNum)
            Me.columnisSC = New Global.System.Data.DataColumn("isSC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisSC)
            Me.columnseniorID1 = New Global.System.Data.DataColumn("seniorID1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseniorID1)
            Me.columnagency = New Global.System.Data.DataColumn("agency", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnagency)
            Me.columngender = New Global.System.Data.DataColumn("gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngender)
            Me.columnpenaltyAmt = New Global.System.Data.DataColumn("penaltyAmt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpenaltyAmt)
            Me.columnbillAmount = New Global.System.Data.DataColumn("billAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillAmount)
            Me.columnadjustmentAmount = New Global.System.Data.DataColumn("adjustmentAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadjustmentAmount)
            Me._columnPenaltyAmt = New Global.System.Data.DataColumn("PenaltyAmt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            Me._columnPenaltyAmt.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_PenaltyAmt")
            Me._columnPenaltyAmt.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_PenaltyAmtColumn")
            Me._columnPenaltyAmt.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnPenaltyAmt")
            Me._columnPenaltyAmt.ExtendedProperties.Add("Generator_UserColumnName", "PenaltyAmt")
            MyBase.Columns.Add(Me._columnPenaltyAmt)
            Me.columnEFAmt = New Global.System.Data.DataColumn("EFAmt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEFAmt)
            Me.columnApplicationFee = New Global.System.Data.DataColumn("ApplicationFee", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApplicationFee)
            Me.columnReconnectionFee = New Global.System.Data.DataColumn("ReconnectionFee", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReconnectionFee)
            Me.columnTransferFee = New Global.System.Data.DataColumn("TransferFee", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransferFee)
            Me.columnogID = New Global.System.Data.DataColumn("ogID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnogID)
            Me.columnoverpayment = New Global.System.Data.DataColumn("overpayment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoverpayment)
            Me.columnacctID = New Global.System.Data.DataColumn("acctID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacctID)
            Me.columnacctID1 = New Global.System.Data.DataColumn("acctID1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacctID1)
            Me.columnconsID2 = New Global.System.Data.DataColumn("consID2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsID2)
            Me.columnclassID = New Global.System.Data.DataColumn("classID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclassID)
            Me.columnbrgyID = New Global.System.Data.DataColumn("brgyID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbrgyID)
            Me.columnclusterID = New Global.System.Data.DataColumn("clusterID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclusterID)
            Me.columnSequence = New Global.System.Data.DataColumn("Sequence", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSequence)
            Me.columnAccountNo = New Global.System.Data.DataColumn("AccountNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountNo)
            Me.columnreceiptNo = New Global.System.Data.DataColumn("receiptNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreceiptNo)
            Me.columnStreetAddress = New Global.System.Data.DataColumn("StreetAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStreetAddress)
            Me.columnMeterNo = New Global.System.Data.DataColumn("MeterNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeterNo)
            Me.columnMeterBrand = New Global.System.Data.DataColumn("MeterBrand", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeterBrand)
            Me.columnMeterSize = New Global.System.Data.DataColumn("MeterSize", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeterSize)
            Me.columnMeterReference = New Global.System.Data.DataColumn("MeterReference", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeterReference)
            Me.columnConnectionDate = New Global.System.Data.DataColumn("ConnectionDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConnectionDate)
            Me.columnAcctStatus = New Global.System.Data.DataColumn("AcctStatus", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcctStatus)
            Me.columnCanDelete = New Global.System.Data.DataColumn("CanDelete", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCanDelete)
            Me.columnisSenior = New Global.System.Data.DataColumn("isSenior", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnisSenior)
            Me.columnseniorID2 = New Global.System.Data.DataColumn("seniorID2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseniorID2)
            Me.columnAccountName = New Global.System.Data.DataColumn("AccountName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountName)
            Me.columnorID.AutoIncrement = true
            Me.columnorID.AutoIncrementSeed = -1
            Me.columnorID.AutoIncrementStep = -1
            Me.columnorID.AllowDBNull = false
            Me.columnORNum.MaxLength = 90
            Me.columnpType.MaxLength = 90
            Me.columndraweeBank.MaxLength = 90
            Me.columndraweenum.MaxLength = 90
            Me.columndraweedate.MaxLength = 90
            Me.columnamountinwords.MaxLength = 600
            Me.columnamountinwords2.MaxLength = 600
            Me.columnseniorRmk.MaxLength = 90
            Me.columnseniorID.MaxLength = 90
            Me.columnnature1.MaxLength = 120
            Me.columnnature2.MaxLength = 120
            Me.columnnature3.MaxLength = 120
            Me.columnnature4.MaxLength = 120
            Me.columnnature5.MaxLength = 120
            Me.columnnature6.MaxLength = 120
            Me.columnnature7.MaxLength = 120
            Me.columnnature8.MaxLength = 120
            Me.columncode1.MaxLength = 90
            Me.columncode2.MaxLength = 90
            Me.columncode3.MaxLength = 90
            Me.columncode4.MaxLength = 90
            Me.columncode5.MaxLength = 90
            Me.columncode6.MaxLength = 90
            Me.columncode7.MaxLength = 90
            Me.columncode8.MaxLength = 90
            Me.columnamount1.MaxLength = 90
            Me.columnamount2.MaxLength = 90
            Me.columnamount3.MaxLength = 90
            Me.columnamount4.MaxLength = 90
            Me.columnamount5.MaxLength = 90
            Me.columnamount6.MaxLength = 90
            Me.columnamount7.MaxLength = 90
            Me.columnamount8.MaxLength = 90
            Me.columncollectorname.MaxLength = 200
            Me.columncashCheck.MaxLength = 90
            Me.columncheckCheck.MaxLength = 90
            Me.columnMoneyOrderCheck.MaxLength = 90
            Me.columnmoneyordernum.MaxLength = 90
            Me.columnmoneyorderdate.MaxLength = 90
            Me.columnorRemark.MaxLength = 90
            Me.columnconsID1.AutoIncrement = true
            Me.columnconsID1.AutoIncrementSeed = -1
            Me.columnconsID1.AutoIncrementStep = -1
            Me.columnConsumerName.MaxLength = 100
            Me.columncAddress.MaxLength = 200
            Me.columncontactNum.MaxLength = 30
            Me.columnisSC.MaxLength = 45
            Me.columnseniorID1.MaxLength = 45
            Me.columnagency.MaxLength = 100
            Me.columngender.MaxLength = 45
            Me.columnacctID1.AutoIncrement = true
            Me.columnacctID1.AutoIncrementSeed = -1
            Me.columnacctID1.AutoIncrementStep = -1
            Me.columnAccountNo.MaxLength = 45
            Me.columnreceiptNo.MaxLength = 45
            Me.columnStreetAddress.MaxLength = 100
            Me.columnMeterNo.MaxLength = 45
            Me.columnMeterBrand.MaxLength = 45
            Me.columnMeterSize.MaxLength = 45
            Me.columnMeterReference.MaxLength = 45
            Me.columnCanDelete.MaxLength = 45
            Me.columnisSenior.MaxLength = 45
            Me.columnseniorID2.MaxLength = 45
            Me.columnAccountName.MaxLength = 200
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewDailyCollectionRow() As DailyCollectionRow
            Return CType(Me.NewRow,DailyCollectionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DailyCollectionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DailyCollectionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DailyCollectionRowChangedEvent) Is Nothing) Then
                RaiseEvent DailyCollectionRowChanged(Me, New DailyCollectionRowChangeEvent(CType(e.Row,DailyCollectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DailyCollectionRowChangingEvent) Is Nothing) Then
                RaiseEvent DailyCollectionRowChanging(Me, New DailyCollectionRowChangeEvent(CType(e.Row,DailyCollectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DailyCollectionRowDeletedEvent) Is Nothing) Then
                RaiseEvent DailyCollectionRowDeleted(Me, New DailyCollectionRowChangeEvent(CType(e.Row,DailyCollectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DailyCollectionRowDeletingEvent) Is Nothing) Then
                RaiseEvent DailyCollectionRowDeleting(Me, New DailyCollectionRowChangeEvent(CType(e.Row,DailyCollectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveDailyCollectionRow(ByVal row As DailyCollectionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As reportingdataset = New reportingdataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DailyCollectionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ReaderListDataTable
        Inherits Global.System.Data.TypedTableBase(Of ReaderListRow)
        
        Private columnAccountNo As Global.System.Data.DataColumn
        
        Private columnAccountName As Global.System.Data.DataColumn
        
        Private columnStreetAddress As Global.System.Data.DataColumn
        
        Private columnAddBrgy As Global.System.Data.DataColumn
        
        Private columnmeterno As Global.System.Data.DataColumn
        
        Private columnConnectionDate As Global.System.Data.DataColumn
        
        Private columnStatusName As Global.System.Data.DataColumn
        
        Private columnMeterReference As Global.System.Data.DataColumn
        
        Private columnAcctID As Global.System.Data.DataColumn
        
        Private columnsequence As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ReaderList"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StreetAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStreetAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AddBrgyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddBrgy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property meternoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmeterno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConnectionDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConnectionDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatusNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatusName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeterReferenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeterReference
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcctIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcctID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sequenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsequence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ReaderListRow
            Get
                Return CType(Me.Rows(index),ReaderListRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReaderListRowChanging As ReaderListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReaderListRowChanged As ReaderListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReaderListRowDeleting As ReaderListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReaderListRowDeleted As ReaderListRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddReaderListRow(ByVal row As ReaderListRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddReaderListRow(ByVal AccountNo As String, ByVal AccountName As String, ByVal StreetAddress As String, ByVal AddBrgy As String, ByVal meterno As String, ByVal ConnectionDate As Date, ByVal StatusName As String, ByVal MeterReference As String, ByVal sequence As Integer) As ReaderListRow
            Dim rowReaderListRow As ReaderListRow = CType(Me.NewRow,ReaderListRow)
            Dim columnValuesArray() As Object = New Object() {AccountNo, AccountName, StreetAddress, AddBrgy, meterno, ConnectionDate, StatusName, MeterReference, Nothing, sequence}
            rowReaderListRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowReaderListRow)
            Return rowReaderListRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByAcctID(ByVal AcctID As Integer) As ReaderListRow
            Return CType(Me.Rows.Find(New Object() {AcctID}),ReaderListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ReaderListDataTable = CType(MyBase.Clone,ReaderListDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ReaderListDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAccountNo = MyBase.Columns("AccountNo")
            Me.columnAccountName = MyBase.Columns("AccountName")
            Me.columnStreetAddress = MyBase.Columns("StreetAddress")
            Me.columnAddBrgy = MyBase.Columns("AddBrgy")
            Me.columnmeterno = MyBase.Columns("meterno")
            Me.columnConnectionDate = MyBase.Columns("ConnectionDate")
            Me.columnStatusName = MyBase.Columns("StatusName")
            Me.columnMeterReference = MyBase.Columns("MeterReference")
            Me.columnAcctID = MyBase.Columns("AcctID")
            Me.columnsequence = MyBase.Columns("sequence")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAccountNo = New Global.System.Data.DataColumn("AccountNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountNo)
            Me.columnAccountName = New Global.System.Data.DataColumn("AccountName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountName)
            Me.columnStreetAddress = New Global.System.Data.DataColumn("StreetAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStreetAddress)
            Me.columnAddBrgy = New Global.System.Data.DataColumn("AddBrgy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddBrgy)
            Me.columnmeterno = New Global.System.Data.DataColumn("meterno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmeterno)
            Me.columnConnectionDate = New Global.System.Data.DataColumn("ConnectionDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConnectionDate)
            Me.columnStatusName = New Global.System.Data.DataColumn("StatusName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatusName)
            Me.columnMeterReference = New Global.System.Data.DataColumn("MeterReference", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeterReference)
            Me.columnAcctID = New Global.System.Data.DataColumn("AcctID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcctID)
            Me.columnsequence = New Global.System.Data.DataColumn("sequence", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsequence)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnAcctID}, true))
            Me.columnAccountNo.MaxLength = 45
            Me.columnAccountName.MaxLength = 200
            Me.columnStreetAddress.MaxLength = 100
            Me.columnAddBrgy.MaxLength = 100
            Me.columnmeterno.MaxLength = 45
            Me.columnStatusName.MaxLength = 45
            Me.columnMeterReference.MaxLength = 45
            Me.columnAcctID.AutoIncrement = true
            Me.columnAcctID.AutoIncrementSeed = -1
            Me.columnAcctID.AutoIncrementStep = -1
            Me.columnAcctID.AllowDBNull = false
            Me.columnAcctID.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewReaderListRow() As ReaderListRow
            Return CType(Me.NewRow,ReaderListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ReaderListRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ReaderListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ReaderListRowChangedEvent) Is Nothing) Then
                RaiseEvent ReaderListRowChanged(Me, New ReaderListRowChangeEvent(CType(e.Row,ReaderListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ReaderListRowChangingEvent) Is Nothing) Then
                RaiseEvent ReaderListRowChanging(Me, New ReaderListRowChangeEvent(CType(e.Row,ReaderListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ReaderListRowDeletedEvent) Is Nothing) Then
                RaiseEvent ReaderListRowDeleted(Me, New ReaderListRowChangeEvent(CType(e.Row,ReaderListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ReaderListRowDeletingEvent) Is Nothing) Then
                RaiseEvent ReaderListRowDeleting(Me, New ReaderListRowChangeEvent(CType(e.Row,ReaderListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveReaderListRow(ByVal row As ReaderListRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As reportingdataset = New reportingdataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ReaderListDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MonthlyReportDataTable
        Inherits Global.System.Data.TypedTableBase(Of MonthlyReportRow)
        
        Private columnBillAmount As Global.System.Data.DataColumn
        
        Private columnBillConnectionFee As Global.System.Data.DataColumn
        
        Private columnBillPenalty As Global.System.Data.DataColumn
        
        Private columnBillDiscount As Global.System.Data.DataColumn
        
        Private columnBillEF As Global.System.Data.DataColumn
        
        Private columnbillRevenue As Global.System.Data.DataColumn
        
        Private columnColAmount As Global.System.Data.DataColumn
        
        Private columnColConnection As Global.System.Data.DataColumn
        
        Private columnColPenalty As Global.System.Data.DataColumn
        
        Private columnColEF As Global.System.Data.DataColumn
        
        Private columnColDiscount As Global.System.Data.DataColumn
        
        Private columnColRecon As Global.System.Data.DataColumn
        
        Private columnColTMeter As Global.System.Data.DataColumn
        
        Private columnColTOwner As Global.System.Data.DataColumn
        
        Private columnCashReceipts As Global.System.Data.DataColumn
        
        Private columnCollectionEff As Global.System.Data.DataColumn
        
        Private columnAveWaterConsump As Global.System.Data.DataColumn
        
        Private columnAveBillAmount As Global.System.Data.DataColumn
        
        Private columnAveBillPenalty As Global.System.Data.DataColumn
        
        Private columnRevGrowth As Global.System.Data.DataColumn
        
        Private columnGrandTotalRev As Global.System.Data.DataColumn
        
        Private columnGrandTotalEF As Global.System.Data.DataColumn
        
        Private columnGrandTotalCollection As Global.System.Data.DataColumn
        
        Private columnReportMonth As Global.System.Data.DataColumn
        
        Private columnReportYear As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MonthlyReport"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BillAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBillAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BillConnectionFeeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBillConnectionFee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BillPenaltyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBillPenalty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BillDiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBillDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BillEFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBillEF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billRevenueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillRevenue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColConnectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColConnection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColPenaltyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColPenalty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColEFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColEF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColDiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColReconColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColRecon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColTMeterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColTMeter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColTOwnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColTOwner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CashReceiptsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCashReceipts
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CollectionEffColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCollectionEff
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AveWaterConsumpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAveWaterConsump
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AveBillAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAveBillAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AveBillPenaltyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAveBillPenalty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RevGrowthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRevGrowth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GrandTotalRevColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrandTotalRev
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GrandTotalEFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrandTotalEF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GrandTotalCollectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrandTotalCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReportMonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReportMonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReportYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReportYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MonthlyReportRow
            Get
                Return CType(Me.Rows(index),MonthlyReportRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MonthlyReportRowChanging As MonthlyReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MonthlyReportRowChanged As MonthlyReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MonthlyReportRowDeleting As MonthlyReportRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MonthlyReportRowDeleted As MonthlyReportRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMonthlyReportRow(ByVal row As MonthlyReportRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMonthlyReportRow( _
                    ByVal BillAmount As Decimal,  _
                    ByVal BillConnectionFee As Decimal,  _
                    ByVal BillPenalty As Decimal,  _
                    ByVal BillDiscount As Decimal,  _
                    ByVal BillEF As Decimal,  _
                    ByVal billRevenue As Decimal,  _
                    ByVal ColAmount As Decimal,  _
                    ByVal ColConnection As Decimal,  _
                    ByVal ColPenalty As Decimal,  _
                    ByVal ColEF As Decimal,  _
                    ByVal ColDiscount As Decimal,  _
                    ByVal ColRecon As Decimal,  _
                    ByVal ColTMeter As Decimal,  _
                    ByVal ColTOwner As Decimal,  _
                    ByVal CashReceipts As Decimal,  _
                    ByVal CollectionEff As Decimal,  _
                    ByVal AveWaterConsump As Decimal,  _
                    ByVal AveBillAmount As Decimal,  _
                    ByVal AveBillPenalty As Decimal,  _
                    ByVal RevGrowth As Decimal,  _
                    ByVal GrandTotalRev As Decimal,  _
                    ByVal GrandTotalEF As Decimal,  _
                    ByVal GrandTotalCollection As Decimal,  _
                    ByVal ReportMonth As String,  _
                    ByVal ReportYear As Short) As MonthlyReportRow
            Dim rowMonthlyReportRow As MonthlyReportRow = CType(Me.NewRow,MonthlyReportRow)
            Dim columnValuesArray() As Object = New Object() {BillAmount, BillConnectionFee, BillPenalty, BillDiscount, BillEF, billRevenue, ColAmount, ColConnection, ColPenalty, ColEF, ColDiscount, ColRecon, ColTMeter, ColTOwner, CashReceipts, CollectionEff, AveWaterConsump, AveBillAmount, AveBillPenalty, RevGrowth, GrandTotalRev, GrandTotalEF, GrandTotalCollection, ReportMonth, ReportYear}
            rowMonthlyReportRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMonthlyReportRow)
            Return rowMonthlyReportRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MonthlyReportDataTable = CType(MyBase.Clone,MonthlyReportDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MonthlyReportDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBillAmount = MyBase.Columns("BillAmount")
            Me.columnBillConnectionFee = MyBase.Columns("BillConnectionFee")
            Me.columnBillPenalty = MyBase.Columns("BillPenalty")
            Me.columnBillDiscount = MyBase.Columns("BillDiscount")
            Me.columnBillEF = MyBase.Columns("BillEF")
            Me.columnbillRevenue = MyBase.Columns("billRevenue")
            Me.columnColAmount = MyBase.Columns("ColAmount")
            Me.columnColConnection = MyBase.Columns("ColConnection")
            Me.columnColPenalty = MyBase.Columns("ColPenalty")
            Me.columnColEF = MyBase.Columns("ColEF")
            Me.columnColDiscount = MyBase.Columns("ColDiscount")
            Me.columnColRecon = MyBase.Columns("ColRecon")
            Me.columnColTMeter = MyBase.Columns("ColTMeter")
            Me.columnColTOwner = MyBase.Columns("ColTOwner")
            Me.columnCashReceipts = MyBase.Columns("CashReceipts")
            Me.columnCollectionEff = MyBase.Columns("CollectionEff")
            Me.columnAveWaterConsump = MyBase.Columns("AveWaterConsump")
            Me.columnAveBillAmount = MyBase.Columns("AveBillAmount")
            Me.columnAveBillPenalty = MyBase.Columns("AveBillPenalty")
            Me.columnRevGrowth = MyBase.Columns("RevGrowth")
            Me.columnGrandTotalRev = MyBase.Columns("GrandTotalRev")
            Me.columnGrandTotalEF = MyBase.Columns("GrandTotalEF")
            Me.columnGrandTotalCollection = MyBase.Columns("GrandTotalCollection")
            Me.columnReportMonth = MyBase.Columns("ReportMonth")
            Me.columnReportYear = MyBase.Columns("ReportYear")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBillAmount = New Global.System.Data.DataColumn("BillAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBillAmount)
            Me.columnBillConnectionFee = New Global.System.Data.DataColumn("BillConnectionFee", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBillConnectionFee)
            Me.columnBillPenalty = New Global.System.Data.DataColumn("BillPenalty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBillPenalty)
            Me.columnBillDiscount = New Global.System.Data.DataColumn("BillDiscount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBillDiscount)
            Me.columnBillEF = New Global.System.Data.DataColumn("BillEF", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBillEF)
            Me.columnbillRevenue = New Global.System.Data.DataColumn("billRevenue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillRevenue)
            Me.columnColAmount = New Global.System.Data.DataColumn("ColAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColAmount)
            Me.columnColConnection = New Global.System.Data.DataColumn("ColConnection", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColConnection)
            Me.columnColPenalty = New Global.System.Data.DataColumn("ColPenalty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColPenalty)
            Me.columnColEF = New Global.System.Data.DataColumn("ColEF", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColEF)
            Me.columnColDiscount = New Global.System.Data.DataColumn("ColDiscount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColDiscount)
            Me.columnColRecon = New Global.System.Data.DataColumn("ColRecon", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColRecon)
            Me.columnColTMeter = New Global.System.Data.DataColumn("ColTMeter", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColTMeter)
            Me.columnColTOwner = New Global.System.Data.DataColumn("ColTOwner", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColTOwner)
            Me.columnCashReceipts = New Global.System.Data.DataColumn("CashReceipts", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCashReceipts)
            Me.columnCollectionEff = New Global.System.Data.DataColumn("CollectionEff", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCollectionEff)
            Me.columnAveWaterConsump = New Global.System.Data.DataColumn("AveWaterConsump", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAveWaterConsump)
            Me.columnAveBillAmount = New Global.System.Data.DataColumn("AveBillAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAveBillAmount)
            Me.columnAveBillPenalty = New Global.System.Data.DataColumn("AveBillPenalty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAveBillPenalty)
            Me.columnRevGrowth = New Global.System.Data.DataColumn("RevGrowth", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRevGrowth)
            Me.columnGrandTotalRev = New Global.System.Data.DataColumn("GrandTotalRev", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrandTotalRev)
            Me.columnGrandTotalEF = New Global.System.Data.DataColumn("GrandTotalEF", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrandTotalEF)
            Me.columnGrandTotalCollection = New Global.System.Data.DataColumn("GrandTotalCollection", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrandTotalCollection)
            Me.columnReportMonth = New Global.System.Data.DataColumn("ReportMonth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReportMonth)
            Me.columnReportYear = New Global.System.Data.DataColumn("ReportYear", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReportYear)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMonthlyReportRow() As MonthlyReportRow
            Return CType(Me.NewRow,MonthlyReportRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MonthlyReportRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MonthlyReportRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MonthlyReportRowChangedEvent) Is Nothing) Then
                RaiseEvent MonthlyReportRowChanged(Me, New MonthlyReportRowChangeEvent(CType(e.Row,MonthlyReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MonthlyReportRowChangingEvent) Is Nothing) Then
                RaiseEvent MonthlyReportRowChanging(Me, New MonthlyReportRowChangeEvent(CType(e.Row,MonthlyReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MonthlyReportRowDeletedEvent) Is Nothing) Then
                RaiseEvent MonthlyReportRowDeleted(Me, New MonthlyReportRowChangeEvent(CType(e.Row,MonthlyReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MonthlyReportRowDeletingEvent) Is Nothing) Then
                RaiseEvent MonthlyReportRowDeleting(Me, New MonthlyReportRowChangeEvent(CType(e.Row,MonthlyReportRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMonthlyReportRow(ByVal row As MonthlyReportRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As reportingdataset = New reportingdataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MonthlyReportDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BillingStatementDataTable
        Inherits Global.System.Data.TypedTableBase(Of BillingStatementRow)
        
        Private columnbillID As Global.System.Data.DataColumn
        
        Private columnacctID As Global.System.Data.DataColumn
        
        Private columnconsID As Global.System.Data.DataColumn
        
        Private columnclassID As Global.System.Data.DataColumn
        
        Private columnzoneID As Global.System.Data.DataColumn
        
        Private columnbrgyID As Global.System.Data.DataColumn
        
        Private columnclusterID As Global.System.Data.DataColumn
        
        Private columnaddmunID As Global.System.Data.DataColumn
        
        Private columnmunicipality As Global.System.Data.DataColumn
        
        Private columnaddbrgy As Global.System.Data.DataColumn
        
        Private columnclustername As Global.System.Data.DataColumn
        
        Private columnstreetaddress As Global.System.Data.DataColumn
        
        Private columnaccountname As Global.System.Data.DataColumn
        
        Private columncontactnum As Global.System.Data.DataColumn
        
        Private columnaccountno As Global.System.Data.DataColumn
        
        Private columnmeterno As Global.System.Data.DataColumn
        
        Private columnbillmonth As Global.System.Data.DataColumn
        
        Private columnbillyear As Global.System.Data.DataColumn
        
        Private columnbillperiod As Global.System.Data.DataColumn
        
        Private columnduedate As Global.System.Data.DataColumn
        
        Private columnprevread As Global.System.Data.DataColumn
        
        Private columnpresread As Global.System.Data.DataColumn
        
        Private columnconsump As Global.System.Data.DataColumn
        
        Private columnamount As Global.System.Data.DataColumn
        
        Private columnenvifee As Global.System.Data.DataColumn
        
        Private columnissc As Global.System.Data.DataColumn
        
        Private columnscdiscount As Global.System.Data.DataColumn
        
        Private columnprevamountdue As Global.System.Data.DataColumn
        
        Private columnprevpenalty As Global.System.Data.DataColumn
        
        Private columnprevtotal As Global.System.Data.DataColumn
        
        Private columnapplicationfee As Global.System.Data.DataColumn
        
        Private columnpenalty As Global.System.Data.DataColumn
        
        Private columnbillnote As Global.System.Data.DataColumn
        
        Private columnreadDate As Global.System.Data.DataColumn
        
        Private columnfromDate As Global.System.Data.DataColumn
        
        Private columntoDate As Global.System.Data.DataColumn
        
        Private columnoverpayment As Global.System.Data.DataColumn
        
        Private columnuseAmount As Global.System.Data.DataColumn
        
        Private columnuseADue As Global.System.Data.DataColumn
        
        Private columnbillDate As Global.System.Data.DataColumn
        
        Private columnstandpipe As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BillingStatement"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acctIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnacctID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property classIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclassID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property zoneIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzoneID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property brgyIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbrgyID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clusterIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclusterID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property addmunIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddmunID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property municipalityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmunicipality
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property addbrgyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddbrgy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clusternameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclustername
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property streetaddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstreetaddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property accountnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaccountname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property contactnumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncontactnum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property accountnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaccountno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property meternoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmeterno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billmonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillmonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billyearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillyear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billperiodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillperiod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property duedateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnduedate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevreadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevread
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property presreadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpresread
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property consumpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsump
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property envifeeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnenvifee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property isscColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnissc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property scdiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnscdiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevamountdueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevamountdue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevpenaltyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevpenalty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevtotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevtotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property applicationfeeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnapplicationfee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property penaltyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpenalty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billnoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillnote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property readDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreadDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fromDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfromDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property toDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntoDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property overpaymentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoverpayment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property useAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuseAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property useADueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnuseADue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property standpipeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstandpipe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BillingStatementRow
            Get
                Return CType(Me.Rows(index),BillingStatementRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BillingStatementRowChanging As BillingStatementRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BillingStatementRowChanged As BillingStatementRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BillingStatementRowDeleting As BillingStatementRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BillingStatementRowDeleted As BillingStatementRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddBillingStatementRow(ByVal row As BillingStatementRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddBillingStatementRow( _
                    ByVal billID As Long,  _
                    ByVal acctID As Long,  _
                    ByVal consID As Long,  _
                    ByVal classID As Long,  _
                    ByVal zoneID As Long,  _
                    ByVal brgyID As Long,  _
                    ByVal clusterID As Long,  _
                    ByVal addmunID As Long,  _
                    ByVal municipality As String,  _
                    ByVal addbrgy As String,  _
                    ByVal clustername As String,  _
                    ByVal streetaddress As String,  _
                    ByVal accountname As String,  _
                    ByVal contactnum As String,  _
                    ByVal accountno As String,  _
                    ByVal meterno As String,  _
                    ByVal billmonth As String,  _
                    ByVal billyear As Short,  _
                    ByVal billperiod As String,  _
                    ByVal duedate As Date,  _
                    ByVal prevread As Short,  _
                    ByVal presread As Short,  _
                    ByVal consump As Short,  _
                    ByVal amount As Decimal,  _
                    ByVal envifee As Decimal,  _
                    ByVal issc As String,  _
                    ByVal scdiscount As Decimal,  _
                    ByVal prevamountdue As Decimal,  _
                    ByVal prevpenalty As Decimal,  _
                    ByVal prevtotal As Decimal,  _
                    ByVal applicationfee As Decimal,  _
                    ByVal penalty As Decimal,  _
                    ByVal billnote As String,  _
                    ByVal readDate As Date,  _
                    ByVal fromDate As Date,  _
                    ByVal toDate As Date,  _
                    ByVal overpayment As Decimal,  _
                    ByVal useAmount As Decimal,  _
                    ByVal useADue As Decimal,  _
                    ByVal billDate As Date,  _
                    ByVal standpipe As String) As BillingStatementRow
            Dim rowBillingStatementRow As BillingStatementRow = CType(Me.NewRow,BillingStatementRow)
            Dim columnValuesArray() As Object = New Object() {billID, acctID, consID, classID, zoneID, brgyID, clusterID, addmunID, municipality, addbrgy, clustername, streetaddress, accountname, contactnum, accountno, meterno, billmonth, billyear, billperiod, duedate, prevread, presread, consump, amount, envifee, issc, scdiscount, prevamountdue, prevpenalty, prevtotal, applicationfee, penalty, billnote, readDate, fromDate, toDate, overpayment, useAmount, useADue, billDate, standpipe}
            rowBillingStatementRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBillingStatementRow)
            Return rowBillingStatementRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BillingStatementDataTable = CType(MyBase.Clone,BillingStatementDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BillingStatementDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnbillID = MyBase.Columns("billID")
            Me.columnacctID = MyBase.Columns("acctID")
            Me.columnconsID = MyBase.Columns("consID")
            Me.columnclassID = MyBase.Columns("classID")
            Me.columnzoneID = MyBase.Columns("zoneID")
            Me.columnbrgyID = MyBase.Columns("brgyID")
            Me.columnclusterID = MyBase.Columns("clusterID")
            Me.columnaddmunID = MyBase.Columns("addmunID")
            Me.columnmunicipality = MyBase.Columns("municipality")
            Me.columnaddbrgy = MyBase.Columns("addbrgy")
            Me.columnclustername = MyBase.Columns("clustername")
            Me.columnstreetaddress = MyBase.Columns("streetaddress")
            Me.columnaccountname = MyBase.Columns("accountname")
            Me.columncontactnum = MyBase.Columns("contactnum")
            Me.columnaccountno = MyBase.Columns("accountno")
            Me.columnmeterno = MyBase.Columns("meterno")
            Me.columnbillmonth = MyBase.Columns("billmonth")
            Me.columnbillyear = MyBase.Columns("billyear")
            Me.columnbillperiod = MyBase.Columns("billperiod")
            Me.columnduedate = MyBase.Columns("duedate")
            Me.columnprevread = MyBase.Columns("prevread")
            Me.columnpresread = MyBase.Columns("presread")
            Me.columnconsump = MyBase.Columns("consump")
            Me.columnamount = MyBase.Columns("amount")
            Me.columnenvifee = MyBase.Columns("envifee")
            Me.columnissc = MyBase.Columns("issc")
            Me.columnscdiscount = MyBase.Columns("scdiscount")
            Me.columnprevamountdue = MyBase.Columns("prevamountdue")
            Me.columnprevpenalty = MyBase.Columns("prevpenalty")
            Me.columnprevtotal = MyBase.Columns("prevtotal")
            Me.columnapplicationfee = MyBase.Columns("applicationfee")
            Me.columnpenalty = MyBase.Columns("penalty")
            Me.columnbillnote = MyBase.Columns("billnote")
            Me.columnreadDate = MyBase.Columns("readDate")
            Me.columnfromDate = MyBase.Columns("fromDate")
            Me.columntoDate = MyBase.Columns("toDate")
            Me.columnoverpayment = MyBase.Columns("overpayment")
            Me.columnuseAmount = MyBase.Columns("useAmount")
            Me.columnuseADue = MyBase.Columns("useADue")
            Me.columnbillDate = MyBase.Columns("billDate")
            Me.columnstandpipe = MyBase.Columns("standpipe")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnbillID = New Global.System.Data.DataColumn("billID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillID)
            Me.columnacctID = New Global.System.Data.DataColumn("acctID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacctID)
            Me.columnconsID = New Global.System.Data.DataColumn("consID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsID)
            Me.columnclassID = New Global.System.Data.DataColumn("classID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclassID)
            Me.columnzoneID = New Global.System.Data.DataColumn("zoneID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzoneID)
            Me.columnbrgyID = New Global.System.Data.DataColumn("brgyID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbrgyID)
            Me.columnclusterID = New Global.System.Data.DataColumn("clusterID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclusterID)
            Me.columnaddmunID = New Global.System.Data.DataColumn("addmunID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddmunID)
            Me.columnmunicipality = New Global.System.Data.DataColumn("municipality", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmunicipality)
            Me.columnaddbrgy = New Global.System.Data.DataColumn("addbrgy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddbrgy)
            Me.columnclustername = New Global.System.Data.DataColumn("clustername", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclustername)
            Me.columnstreetaddress = New Global.System.Data.DataColumn("streetaddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstreetaddress)
            Me.columnaccountname = New Global.System.Data.DataColumn("accountname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaccountname)
            Me.columncontactnum = New Global.System.Data.DataColumn("contactnum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncontactnum)
            Me.columnaccountno = New Global.System.Data.DataColumn("accountno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaccountno)
            Me.columnmeterno = New Global.System.Data.DataColumn("meterno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmeterno)
            Me.columnbillmonth = New Global.System.Data.DataColumn("billmonth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillmonth)
            Me.columnbillyear = New Global.System.Data.DataColumn("billyear", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillyear)
            Me.columnbillperiod = New Global.System.Data.DataColumn("billperiod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillperiod)
            Me.columnduedate = New Global.System.Data.DataColumn("duedate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnduedate)
            Me.columnprevread = New Global.System.Data.DataColumn("prevread", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevread)
            Me.columnpresread = New Global.System.Data.DataColumn("presread", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpresread)
            Me.columnconsump = New Global.System.Data.DataColumn("consump", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsump)
            Me.columnamount = New Global.System.Data.DataColumn("amount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount)
            Me.columnenvifee = New Global.System.Data.DataColumn("envifee", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnenvifee)
            Me.columnissc = New Global.System.Data.DataColumn("issc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnissc)
            Me.columnscdiscount = New Global.System.Data.DataColumn("scdiscount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnscdiscount)
            Me.columnprevamountdue = New Global.System.Data.DataColumn("prevamountdue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevamountdue)
            Me.columnprevpenalty = New Global.System.Data.DataColumn("prevpenalty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevpenalty)
            Me.columnprevtotal = New Global.System.Data.DataColumn("prevtotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevtotal)
            Me.columnapplicationfee = New Global.System.Data.DataColumn("applicationfee", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnapplicationfee)
            Me.columnpenalty = New Global.System.Data.DataColumn("penalty", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpenalty)
            Me.columnbillnote = New Global.System.Data.DataColumn("billnote", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillnote)
            Me.columnreadDate = New Global.System.Data.DataColumn("readDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreadDate)
            Me.columnfromDate = New Global.System.Data.DataColumn("fromDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfromDate)
            Me.columntoDate = New Global.System.Data.DataColumn("toDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntoDate)
            Me.columnoverpayment = New Global.System.Data.DataColumn("overpayment", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoverpayment)
            Me.columnuseAmount = New Global.System.Data.DataColumn("useAmount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuseAmount)
            Me.columnuseADue = New Global.System.Data.DataColumn("useADue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnuseADue)
            Me.columnbillDate = New Global.System.Data.DataColumn("billDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillDate)
            Me.columnstandpipe = New Global.System.Data.DataColumn("standpipe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstandpipe)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewBillingStatementRow() As BillingStatementRow
            Return CType(Me.NewRow,BillingStatementRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BillingStatementRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BillingStatementRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BillingStatementRowChangedEvent) Is Nothing) Then
                RaiseEvent BillingStatementRowChanged(Me, New BillingStatementRowChangeEvent(CType(e.Row,BillingStatementRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BillingStatementRowChangingEvent) Is Nothing) Then
                RaiseEvent BillingStatementRowChanging(Me, New BillingStatementRowChangeEvent(CType(e.Row,BillingStatementRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BillingStatementRowDeletedEvent) Is Nothing) Then
                RaiseEvent BillingStatementRowDeleted(Me, New BillingStatementRowChangeEvent(CType(e.Row,BillingStatementRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BillingStatementRowDeletingEvent) Is Nothing) Then
                RaiseEvent BillingStatementRowDeleting(Me, New BillingStatementRowChangeEvent(CType(e.Row,BillingStatementRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveBillingStatementRow(ByVal row As BillingStatementRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As reportingdataset = New reportingdataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BillingStatementDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ReadingListDataTable
        Inherits Global.System.Data.TypedTableBase(Of ReadingListRow)
        
        Private columnAcctID As Global.System.Data.DataColumn
        
        Private columnSequence As Global.System.Data.DataColumn
        
        Private columnAccountNo As Global.System.Data.DataColumn
        
        Private columnAccountName As Global.System.Data.DataColumn
        
        Private columnStreetAddress As Global.System.Data.DataColumn
        
        Private columnAddBrgy As Global.System.Data.DataColumn
        
        Private columnmeterNo As Global.System.Data.DataColumn
        
        Private columnConnectionDate As Global.System.Data.DataColumn
        
        Private columnStatusName As Global.System.Data.DataColumn
        
        Private columnMeterReference As Global.System.Data.DataColumn
        
        Private columnCurrentMonth As Global.System.Data.DataColumn
        
        Private columnReadingMonth As Global.System.Data.DataColumn
        
        Private columnstandpipe As Global.System.Data.DataColumn
        
        Private columnclusterName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ReadingList"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcctIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcctID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SequenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSequence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StreetAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStreetAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AddBrgyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddBrgy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property meterNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmeterNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConnectionDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConnectionDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatusNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatusName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeterReferenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeterReference
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurrentMonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurrentMonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReadingMonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReadingMonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property standpipeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstandpipe
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clusterNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclusterName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ReadingListRow
            Get
                Return CType(Me.Rows(index),ReadingListRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReadingListRowChanging As ReadingListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReadingListRowChanged As ReadingListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReadingListRowDeleting As ReadingListRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReadingListRowDeleted As ReadingListRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddReadingListRow(ByVal row As ReadingListRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddReadingListRow(ByVal AcctID As Integer, ByVal Sequence As Integer, ByVal AccountNo As String, ByVal AccountName As String, ByVal StreetAddress As String, ByVal AddBrgy As String, ByVal meterNo As String, ByVal ConnectionDate As Date, ByVal StatusName As String, ByVal MeterReference As Integer, ByVal CurrentMonth As String, ByVal ReadingMonth As String, ByVal standpipe As String, ByVal clusterName As String) As ReadingListRow
            Dim rowReadingListRow As ReadingListRow = CType(Me.NewRow,ReadingListRow)
            Dim columnValuesArray() As Object = New Object() {AcctID, Sequence, AccountNo, AccountName, StreetAddress, AddBrgy, meterNo, ConnectionDate, StatusName, MeterReference, CurrentMonth, ReadingMonth, standpipe, clusterName}
            rowReadingListRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowReadingListRow)
            Return rowReadingListRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ReadingListDataTable = CType(MyBase.Clone,ReadingListDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ReadingListDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAcctID = MyBase.Columns("AcctID")
            Me.columnSequence = MyBase.Columns("Sequence")
            Me.columnAccountNo = MyBase.Columns("AccountNo")
            Me.columnAccountName = MyBase.Columns("AccountName")
            Me.columnStreetAddress = MyBase.Columns("StreetAddress")
            Me.columnAddBrgy = MyBase.Columns("AddBrgy")
            Me.columnmeterNo = MyBase.Columns("meterNo")
            Me.columnConnectionDate = MyBase.Columns("ConnectionDate")
            Me.columnStatusName = MyBase.Columns("StatusName")
            Me.columnMeterReference = MyBase.Columns("MeterReference")
            Me.columnCurrentMonth = MyBase.Columns("CurrentMonth")
            Me.columnReadingMonth = MyBase.Columns("ReadingMonth")
            Me.columnstandpipe = MyBase.Columns("standpipe")
            Me.columnclusterName = MyBase.Columns("clusterName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAcctID = New Global.System.Data.DataColumn("AcctID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcctID)
            Me.columnSequence = New Global.System.Data.DataColumn("Sequence", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSequence)
            Me.columnAccountNo = New Global.System.Data.DataColumn("AccountNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountNo)
            Me.columnAccountName = New Global.System.Data.DataColumn("AccountName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountName)
            Me.columnStreetAddress = New Global.System.Data.DataColumn("StreetAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStreetAddress)
            Me.columnAddBrgy = New Global.System.Data.DataColumn("AddBrgy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddBrgy)
            Me.columnmeterNo = New Global.System.Data.DataColumn("meterNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmeterNo)
            Me.columnConnectionDate = New Global.System.Data.DataColumn("ConnectionDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConnectionDate)
            Me.columnStatusName = New Global.System.Data.DataColumn("StatusName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatusName)
            Me.columnMeterReference = New Global.System.Data.DataColumn("MeterReference", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeterReference)
            Me.columnCurrentMonth = New Global.System.Data.DataColumn("CurrentMonth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurrentMonth)
            Me.columnReadingMonth = New Global.System.Data.DataColumn("ReadingMonth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReadingMonth)
            Me.columnstandpipe = New Global.System.Data.DataColumn("standpipe", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstandpipe)
            Me.columnclusterName = New Global.System.Data.DataColumn("clusterName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclusterName)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewReadingListRow() As ReadingListRow
            Return CType(Me.NewRow,ReadingListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ReadingListRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ReadingListRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ReadingListRowChangedEvent) Is Nothing) Then
                RaiseEvent ReadingListRowChanged(Me, New ReadingListRowChangeEvent(CType(e.Row,ReadingListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ReadingListRowChangingEvent) Is Nothing) Then
                RaiseEvent ReadingListRowChanging(Me, New ReadingListRowChangeEvent(CType(e.Row,ReadingListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ReadingListRowDeletedEvent) Is Nothing) Then
                RaiseEvent ReadingListRowDeleted(Me, New ReadingListRowChangeEvent(CType(e.Row,ReadingListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ReadingListRowDeletingEvent) Is Nothing) Then
                RaiseEvent ReadingListRowDeleting(Me, New ReadingListRowChangeEvent(CType(e.Row,ReadingListRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveReadingListRow(ByVal row As ReadingListRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As reportingdataset = New reportingdataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ReadingListDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class StatementOfAccountDataTable
        Inherits Global.System.Data.TypedTableBase(Of StatementOfAccountRow)
        
        Private columnNos As Global.System.Data.DataColumn
        
        Private columnColMonth As Global.System.Data.DataColumn
        
        Private columnColYear As Global.System.Data.DataColumn
        
        Private columnActualCubic As Global.System.Data.DataColumn
        
        Private columnActualAmount As Global.System.Data.DataColumn
        
        Private columnComBill As Global.System.Data.DataColumn
        
        Private columnComPen As Global.System.Data.DataColumn
        
        Private columnComAmtDue As Global.System.Data.DataColumn
        
        Private columnAdjustment As Global.System.Data.DataColumn
        
        Private columnPenalty As Global.System.Data.DataColumn
        
        Private columnAccountNo As Global.System.Data.DataColumn
        
        Private columnConsumerName As Global.System.Data.DataColumn
        
        Private columnCAddress As Global.System.Data.DataColumn
        
        Private columnJobTitle As Global.System.Data.DataColumn
        
        Private columnCompany As Global.System.Data.DataColumn
        
        Private columnClassification As Global.System.Data.DataColumn
        
        Private columnMeterNumber As Global.System.Data.DataColumn
        
        Private columnTotalToPay As Global.System.Data.DataColumn
        
        Private columnNotedBy As Global.System.Data.DataColumn
        
        Private columnTitlOfNotee As Global.System.Data.DataColumn
        
        Private columnComments As Global.System.Data.DataColumn
        
        Private columnBillStat As Global.System.Data.DataColumn
        
        Private columnSOADate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "StatementOfAccount"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColMonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColMonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ColYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActualCubicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActualCubic
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActualAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActualAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ComBillColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComBill
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ComPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ComAmtDueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComAmtDue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AdjustmentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdjustment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PenaltyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPenalty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConsumerNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConsumerName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JobTitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJobTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CompanyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompany
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClassificationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClassification
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeterNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeterNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalToPayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalToPay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NotedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TitlOfNoteeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitlOfNotee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CommentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BillStatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBillStat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SOADateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOADate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As StatementOfAccountRow
            Get
                Return CType(Me.Rows(index),StatementOfAccountRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StatementOfAccountRowChanging As StatementOfAccountRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StatementOfAccountRowChanged As StatementOfAccountRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StatementOfAccountRowDeleting As StatementOfAccountRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StatementOfAccountRowDeleted As StatementOfAccountRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddStatementOfAccountRow(ByVal row As StatementOfAccountRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddStatementOfAccountRow( _
                    ByVal Nos As String,  _
                    ByVal ColMonth As String,  _
                    ByVal ColYear As String,  _
                    ByVal ActualCubic As String,  _
                    ByVal ActualAmount As String,  _
                    ByVal ComBill As String,  _
                    ByVal ComPen As String,  _
                    ByVal ComAmtDue As String,  _
                    ByVal Adjustment As String,  _
                    ByVal Penalty As String,  _
                    ByVal AccountNo As String,  _
                    ByVal ConsumerName As String,  _
                    ByVal CAddress As String,  _
                    ByVal JobTitle As String,  _
                    ByVal Company As String,  _
                    ByVal Classification As String,  _
                    ByVal MeterNumber As String,  _
                    ByVal TotalToPay As String,  _
                    ByVal NotedBy As String,  _
                    ByVal TitlOfNotee As String,  _
                    ByVal Comments As String,  _
                    ByVal BillStat As String,  _
                    ByVal SOADate As String) As StatementOfAccountRow
            Dim rowStatementOfAccountRow As StatementOfAccountRow = CType(Me.NewRow,StatementOfAccountRow)
            Dim columnValuesArray() As Object = New Object() {Nos, ColMonth, ColYear, ActualCubic, ActualAmount, ComBill, ComPen, ComAmtDue, Adjustment, Penalty, AccountNo, ConsumerName, CAddress, JobTitle, Company, Classification, MeterNumber, TotalToPay, NotedBy, TitlOfNotee, Comments, BillStat, SOADate}
            rowStatementOfAccountRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowStatementOfAccountRow)
            Return rowStatementOfAccountRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As StatementOfAccountDataTable = CType(MyBase.Clone,StatementOfAccountDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New StatementOfAccountDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNos = MyBase.Columns("Nos")
            Me.columnColMonth = MyBase.Columns("ColMonth")
            Me.columnColYear = MyBase.Columns("ColYear")
            Me.columnActualCubic = MyBase.Columns("ActualCubic")
            Me.columnActualAmount = MyBase.Columns("ActualAmount")
            Me.columnComBill = MyBase.Columns("ComBill")
            Me.columnComPen = MyBase.Columns("ComPen")
            Me.columnComAmtDue = MyBase.Columns("ComAmtDue")
            Me.columnAdjustment = MyBase.Columns("Adjustment")
            Me.columnPenalty = MyBase.Columns("Penalty")
            Me.columnAccountNo = MyBase.Columns("AccountNo")
            Me.columnConsumerName = MyBase.Columns("ConsumerName")
            Me.columnCAddress = MyBase.Columns("CAddress")
            Me.columnJobTitle = MyBase.Columns("JobTitle")
            Me.columnCompany = MyBase.Columns("Company")
            Me.columnClassification = MyBase.Columns("Classification")
            Me.columnMeterNumber = MyBase.Columns("MeterNumber")
            Me.columnTotalToPay = MyBase.Columns("TotalToPay")
            Me.columnNotedBy = MyBase.Columns("NotedBy")
            Me.columnTitlOfNotee = MyBase.Columns("TitlOfNotee")
            Me.columnComments = MyBase.Columns("Comments")
            Me.columnBillStat = MyBase.Columns("BillStat")
            Me.columnSOADate = MyBase.Columns("SOADate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNos = New Global.System.Data.DataColumn("Nos", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNos)
            Me.columnColMonth = New Global.System.Data.DataColumn("ColMonth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColMonth)
            Me.columnColYear = New Global.System.Data.DataColumn("ColYear", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColYear)
            Me.columnActualCubic = New Global.System.Data.DataColumn("ActualCubic", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActualCubic)
            Me.columnActualAmount = New Global.System.Data.DataColumn("ActualAmount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActualAmount)
            Me.columnComBill = New Global.System.Data.DataColumn("ComBill", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComBill)
            Me.columnComPen = New Global.System.Data.DataColumn("ComPen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComPen)
            Me.columnComAmtDue = New Global.System.Data.DataColumn("ComAmtDue", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComAmtDue)
            Me.columnAdjustment = New Global.System.Data.DataColumn("Adjustment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdjustment)
            Me.columnPenalty = New Global.System.Data.DataColumn("Penalty", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPenalty)
            Me.columnAccountNo = New Global.System.Data.DataColumn("AccountNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountNo)
            Me.columnConsumerName = New Global.System.Data.DataColumn("ConsumerName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConsumerName)
            Me.columnCAddress = New Global.System.Data.DataColumn("CAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAddress)
            Me.columnJobTitle = New Global.System.Data.DataColumn("JobTitle", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJobTitle)
            Me.columnCompany = New Global.System.Data.DataColumn("Company", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompany)
            Me.columnClassification = New Global.System.Data.DataColumn("Classification", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClassification)
            Me.columnMeterNumber = New Global.System.Data.DataColumn("MeterNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeterNumber)
            Me.columnTotalToPay = New Global.System.Data.DataColumn("TotalToPay", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalToPay)
            Me.columnNotedBy = New Global.System.Data.DataColumn("NotedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotedBy)
            Me.columnTitlOfNotee = New Global.System.Data.DataColumn("TitlOfNotee", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitlOfNotee)
            Me.columnComments = New Global.System.Data.DataColumn("Comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComments)
            Me.columnBillStat = New Global.System.Data.DataColumn("BillStat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBillStat)
            Me.columnSOADate = New Global.System.Data.DataColumn("SOADate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOADate)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewStatementOfAccountRow() As StatementOfAccountRow
            Return CType(Me.NewRow,StatementOfAccountRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New StatementOfAccountRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(StatementOfAccountRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.StatementOfAccountRowChangedEvent) Is Nothing) Then
                RaiseEvent StatementOfAccountRowChanged(Me, New StatementOfAccountRowChangeEvent(CType(e.Row,StatementOfAccountRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.StatementOfAccountRowChangingEvent) Is Nothing) Then
                RaiseEvent StatementOfAccountRowChanging(Me, New StatementOfAccountRowChangeEvent(CType(e.Row,StatementOfAccountRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.StatementOfAccountRowDeletedEvent) Is Nothing) Then
                RaiseEvent StatementOfAccountRowDeleted(Me, New StatementOfAccountRowChangeEvent(CType(e.Row,StatementOfAccountRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.StatementOfAccountRowDeletingEvent) Is Nothing) Then
                RaiseEvent StatementOfAccountRowDeleting(Me, New StatementOfAccountRowChangeEvent(CType(e.Row,StatementOfAccountRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveStatementOfAccountRow(ByVal row As StatementOfAccountRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As reportingdataset = New reportingdataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "StatementOfAccountDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PendingDisconnectionDataTable
        Inherits Global.System.Data.TypedTableBase(Of PendingDisconnectionRow)
        
        Private columnAcctID As Global.System.Data.DataColumn
        
        Private columnSequence As Global.System.Data.DataColumn
        
        Private columnAccountNo As Global.System.Data.DataColumn
        
        Private columnAccountName As Global.System.Data.DataColumn
        
        Private columnMeterNo As Global.System.Data.DataColumn
        
        Private columnStreetAddress As Global.System.Data.DataColumn
        
        Private columnAddBrgy As Global.System.Data.DataColumn
        
        Private columnBalance As Global.System.Data.DataColumn
        
        Private columndFromMonth As Global.System.Data.DataColumn
        
        Private columndFromYear As Global.System.Data.DataColumn
        
        Private columndToMonth As Global.System.Data.DataColumn
        
        Private columndToYear As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PendingDisconnection"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcctIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcctID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SequenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSequence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AccountNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAccountName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeterNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeterNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StreetAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStreetAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AddBrgyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddBrgy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BalanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBalance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dFromMonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndFromMonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dFromYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndFromYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dToMonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndToMonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dToYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndToYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PendingDisconnectionRow
            Get
                Return CType(Me.Rows(index),PendingDisconnectionRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PendingDisconnectionRowChanging As PendingDisconnectionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PendingDisconnectionRowChanged As PendingDisconnectionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PendingDisconnectionRowDeleting As PendingDisconnectionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PendingDisconnectionRowDeleted As PendingDisconnectionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPendingDisconnectionRow(ByVal row As PendingDisconnectionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPendingDisconnectionRow(ByVal AcctID As Integer, ByVal Sequence As Integer, ByVal AccountNo As String, ByVal AccountName As String, ByVal MeterNo As String, ByVal StreetAddress As String, ByVal AddBrgy As String, ByVal Balance As Decimal, ByVal dFromMonth As String, ByVal dFromYear As String, ByVal dToMonth As String, ByVal dToYear As String) As PendingDisconnectionRow
            Dim rowPendingDisconnectionRow As PendingDisconnectionRow = CType(Me.NewRow,PendingDisconnectionRow)
            Dim columnValuesArray() As Object = New Object() {AcctID, Sequence, AccountNo, AccountName, MeterNo, StreetAddress, AddBrgy, Balance, dFromMonth, dFromYear, dToMonth, dToYear}
            rowPendingDisconnectionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPendingDisconnectionRow)
            Return rowPendingDisconnectionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PendingDisconnectionDataTable = CType(MyBase.Clone,PendingDisconnectionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PendingDisconnectionDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAcctID = MyBase.Columns("AcctID")
            Me.columnSequence = MyBase.Columns("Sequence")
            Me.columnAccountNo = MyBase.Columns("AccountNo")
            Me.columnAccountName = MyBase.Columns("AccountName")
            Me.columnMeterNo = MyBase.Columns("MeterNo")
            Me.columnStreetAddress = MyBase.Columns("StreetAddress")
            Me.columnAddBrgy = MyBase.Columns("AddBrgy")
            Me.columnBalance = MyBase.Columns("Balance")
            Me.columndFromMonth = MyBase.Columns("dFromMonth")
            Me.columndFromYear = MyBase.Columns("dFromYear")
            Me.columndToMonth = MyBase.Columns("dToMonth")
            Me.columndToYear = MyBase.Columns("dToYear")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAcctID = New Global.System.Data.DataColumn("AcctID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcctID)
            Me.columnSequence = New Global.System.Data.DataColumn("Sequence", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSequence)
            Me.columnAccountNo = New Global.System.Data.DataColumn("AccountNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountNo)
            Me.columnAccountName = New Global.System.Data.DataColumn("AccountName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAccountName)
            Me.columnMeterNo = New Global.System.Data.DataColumn("MeterNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeterNo)
            Me.columnStreetAddress = New Global.System.Data.DataColumn("StreetAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStreetAddress)
            Me.columnAddBrgy = New Global.System.Data.DataColumn("AddBrgy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddBrgy)
            Me.columnBalance = New Global.System.Data.DataColumn("Balance", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBalance)
            Me.columndFromMonth = New Global.System.Data.DataColumn("dFromMonth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndFromMonth)
            Me.columndFromYear = New Global.System.Data.DataColumn("dFromYear", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndFromYear)
            Me.columndToMonth = New Global.System.Data.DataColumn("dToMonth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndToMonth)
            Me.columndToYear = New Global.System.Data.DataColumn("dToYear", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndToYear)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPendingDisconnectionRow() As PendingDisconnectionRow
            Return CType(Me.NewRow,PendingDisconnectionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PendingDisconnectionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PendingDisconnectionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PendingDisconnectionRowChangedEvent) Is Nothing) Then
                RaiseEvent PendingDisconnectionRowChanged(Me, New PendingDisconnectionRowChangeEvent(CType(e.Row,PendingDisconnectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PendingDisconnectionRowChangingEvent) Is Nothing) Then
                RaiseEvent PendingDisconnectionRowChanging(Me, New PendingDisconnectionRowChangeEvent(CType(e.Row,PendingDisconnectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PendingDisconnectionRowDeletedEvent) Is Nothing) Then
                RaiseEvent PendingDisconnectionRowDeleted(Me, New PendingDisconnectionRowChangeEvent(CType(e.Row,PendingDisconnectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PendingDisconnectionRowDeletingEvent) Is Nothing) Then
                RaiseEvent PendingDisconnectionRowDeleting(Me, New PendingDisconnectionRowChangeEvent(CType(e.Row,PendingDisconnectionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePendingDisconnectionRow(ByVal row As PendingDisconnectionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As reportingdataset = New reportingdataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PendingDisconnectionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SOADataSetDataTable
        Inherits Global.System.Data.TypedTableBase(Of SOADataSetRow)
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SOADataSet"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SOADataSetRow
            Get
                Return CType(Me.Rows(index),SOADataSetRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SOADataSetRowChanging As SOADataSetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SOADataSetRowChanged As SOADataSetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SOADataSetRowDeleting As SOADataSetRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SOADataSetRowDeleted As SOADataSetRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSOADataSetRow(ByVal row As SOADataSetRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSOADataSetRow() As SOADataSetRow
            Dim rowSOADataSetRow As SOADataSetRow = CType(Me.NewRow,SOADataSetRow)
            Dim columnValuesArray(-1) As Object
            rowSOADataSetRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSOADataSetRow)
            Return rowSOADataSetRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SOADataSetDataTable = CType(MyBase.Clone,SOADataSetDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SOADataSetDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSOADataSetRow() As SOADataSetRow
            Return CType(Me.NewRow,SOADataSetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SOADataSetRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SOADataSetRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SOADataSetRowChangedEvent) Is Nothing) Then
                RaiseEvent SOADataSetRowChanged(Me, New SOADataSetRowChangeEvent(CType(e.Row,SOADataSetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SOADataSetRowChangingEvent) Is Nothing) Then
                RaiseEvent SOADataSetRowChanging(Me, New SOADataSetRowChangeEvent(CType(e.Row,SOADataSetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SOADataSetRowDeletedEvent) Is Nothing) Then
                RaiseEvent SOADataSetRowDeleted(Me, New SOADataSetRowChangeEvent(CType(e.Row,SOADataSetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SOADataSetRowDeletingEvent) Is Nothing) Then
                RaiseEvent SOADataSetRowDeleting(Me, New SOADataSetRowChangeEvent(CType(e.Row,SOADataSetRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSOADataSetRow(ByVal row As SOADataSetRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As reportingdataset = New reportingdataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SOADataSetDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SCDSRepDataTable
        Inherits Global.System.Data.TypedTableBase(Of SCDSRepRow)
        
        Private columnbrgyID As Global.System.Data.DataColumn
        
        Private columnAddBrgy As Global.System.Data.DataColumn
        
        Private columnzoneID As Global.System.Data.DataColumn
        
        Private columnPlantName As Global.System.Data.DataColumn
        
        Private columnTotalAccounts As Global.System.Data.DataColumn
        
        Private columnActiveTotal As Global.System.Data.DataColumn
        
        Private columnActiveInstalled As Global.System.Data.DataColumn
        
        Private columnActiveReconnected As Global.System.Data.DataColumn
        
        Private columnActiveDirect As Global.System.Data.DataColumn
        
        Private columnUninstalledTotal As Global.System.Data.DataColumn
        
        Private columnUninstalledBacklogs As Global.System.Data.DataColumn
        
        Private columnUninstalledNew As Global.System.Data.DataColumn
        
        Private columnDisconnectedTotal As Global.System.Data.DataColumn
        
        Private columnDisconnectedNonPay As Global.System.Data.DataColumn
        
        Private columnDisconnectedVoluntary As Global.System.Data.DataColumn
        
        Private columnTotalAccountsRes As Global.System.Data.DataColumn
        
        Private columnTotalAccountsIns As Global.System.Data.DataColumn
        
        Private columnTotalAccountsCom As Global.System.Data.DataColumn
        
        Private columnTotalAccountsInd As Global.System.Data.DataColumn
        
        Private columnActiveRes As Global.System.Data.DataColumn
        
        Private columnActiveIns As Global.System.Data.DataColumn
        
        Private columnActiveCom As Global.System.Data.DataColumn
        
        Private columnActiveInd As Global.System.Data.DataColumn
        
        Private columnRegular As Global.System.Data.DataColumn
        
        Private columnSenior As Global.System.Data.DataColumn
        
        Private columnrepMonth As Global.System.Data.DataColumn
        
        Private columnrepYear As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SCDSRep"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property brgyIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbrgyID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AddBrgyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddBrgy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property zoneIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzoneID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PlantNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlantName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalAccountsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalAccounts
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActiveTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiveTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActiveInstalledColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiveInstalled
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActiveReconnectedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiveReconnected
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActiveDirectColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiveDirect
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UninstalledTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUninstalledTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UninstalledBacklogsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUninstalledBacklogs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UninstalledNewColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUninstalledNew
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DisconnectedTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisconnectedTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DisconnectedNonPayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisconnectedNonPay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DisconnectedVoluntaryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisconnectedVoluntary
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalAccountsResColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalAccountsRes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalAccountsInsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalAccountsIns
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalAccountsComColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalAccountsCom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalAccountsIndColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalAccountsInd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActiveResColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiveRes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActiveInsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiveIns
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActiveComColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiveCom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActiveIndColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiveInd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RegularColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegular
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SeniorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSenior
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property repMonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrepMonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property repYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrepYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SCDSRepRow
            Get
                Return CType(Me.Rows(index),SCDSRepRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SCDSRepRowChanging As SCDSRepRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SCDSRepRowChanged As SCDSRepRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SCDSRepRowDeleting As SCDSRepRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SCDSRepRowDeleted As SCDSRepRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSCDSRepRow(ByVal row As SCDSRepRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSCDSRepRow( _
                    ByVal brgyID As Short,  _
                    ByVal AddBrgy As String,  _
                    ByVal zoneID As Short,  _
                    ByVal PlantName As String,  _
                    ByVal TotalAccounts As Integer,  _
                    ByVal ActiveTotal As Integer,  _
                    ByVal ActiveInstalled As Integer,  _
                    ByVal ActiveReconnected As Integer,  _
                    ByVal ActiveDirect As Integer,  _
                    ByVal UninstalledTotal As Integer,  _
                    ByVal UninstalledBacklogs As Integer,  _
                    ByVal UninstalledNew As Integer,  _
                    ByVal DisconnectedTotal As Integer,  _
                    ByVal DisconnectedNonPay As Integer,  _
                    ByVal DisconnectedVoluntary As Integer,  _
                    ByVal TotalAccountsRes As Integer,  _
                    ByVal TotalAccountsIns As Integer,  _
                    ByVal TotalAccountsCom As Integer,  _
                    ByVal TotalAccountsInd As Integer,  _
                    ByVal ActiveRes As Integer,  _
                    ByVal ActiveIns As Integer,  _
                    ByVal ActiveCom As Integer,  _
                    ByVal ActiveInd As Integer,  _
                    ByVal Regular As Integer,  _
                    ByVal Senior As Integer,  _
                    ByVal repMonth As String,  _
                    ByVal repYear As Short) As SCDSRepRow
            Dim rowSCDSRepRow As SCDSRepRow = CType(Me.NewRow,SCDSRepRow)
            Dim columnValuesArray() As Object = New Object() {brgyID, AddBrgy, zoneID, PlantName, TotalAccounts, ActiveTotal, ActiveInstalled, ActiveReconnected, ActiveDirect, UninstalledTotal, UninstalledBacklogs, UninstalledNew, DisconnectedTotal, DisconnectedNonPay, DisconnectedVoluntary, TotalAccountsRes, TotalAccountsIns, TotalAccountsCom, TotalAccountsInd, ActiveRes, ActiveIns, ActiveCom, ActiveInd, Regular, Senior, repMonth, repYear}
            rowSCDSRepRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSCDSRepRow)
            Return rowSCDSRepRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SCDSRepDataTable = CType(MyBase.Clone,SCDSRepDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SCDSRepDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnbrgyID = MyBase.Columns("brgyID")
            Me.columnAddBrgy = MyBase.Columns("AddBrgy")
            Me.columnzoneID = MyBase.Columns("zoneID")
            Me.columnPlantName = MyBase.Columns("PlantName")
            Me.columnTotalAccounts = MyBase.Columns("TotalAccounts")
            Me.columnActiveTotal = MyBase.Columns("ActiveTotal")
            Me.columnActiveInstalled = MyBase.Columns("ActiveInstalled")
            Me.columnActiveReconnected = MyBase.Columns("ActiveReconnected")
            Me.columnActiveDirect = MyBase.Columns("ActiveDirect")
            Me.columnUninstalledTotal = MyBase.Columns("UninstalledTotal")
            Me.columnUninstalledBacklogs = MyBase.Columns("UninstalledBacklogs")
            Me.columnUninstalledNew = MyBase.Columns("UninstalledNew")
            Me.columnDisconnectedTotal = MyBase.Columns("DisconnectedTotal")
            Me.columnDisconnectedNonPay = MyBase.Columns("DisconnectedNonPay")
            Me.columnDisconnectedVoluntary = MyBase.Columns("DisconnectedVoluntary")
            Me.columnTotalAccountsRes = MyBase.Columns("TotalAccountsRes")
            Me.columnTotalAccountsIns = MyBase.Columns("TotalAccountsIns")
            Me.columnTotalAccountsCom = MyBase.Columns("TotalAccountsCom")
            Me.columnTotalAccountsInd = MyBase.Columns("TotalAccountsInd")
            Me.columnActiveRes = MyBase.Columns("ActiveRes")
            Me.columnActiveIns = MyBase.Columns("ActiveIns")
            Me.columnActiveCom = MyBase.Columns("ActiveCom")
            Me.columnActiveInd = MyBase.Columns("ActiveInd")
            Me.columnRegular = MyBase.Columns("Regular")
            Me.columnSenior = MyBase.Columns("Senior")
            Me.columnrepMonth = MyBase.Columns("repMonth")
            Me.columnrepYear = MyBase.Columns("repYear")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnbrgyID = New Global.System.Data.DataColumn("brgyID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbrgyID)
            Me.columnAddBrgy = New Global.System.Data.DataColumn("AddBrgy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddBrgy)
            Me.columnzoneID = New Global.System.Data.DataColumn("zoneID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzoneID)
            Me.columnPlantName = New Global.System.Data.DataColumn("PlantName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlantName)
            Me.columnTotalAccounts = New Global.System.Data.DataColumn("TotalAccounts", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalAccounts)
            Me.columnActiveTotal = New Global.System.Data.DataColumn("ActiveTotal", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiveTotal)
            Me.columnActiveInstalled = New Global.System.Data.DataColumn("ActiveInstalled", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiveInstalled)
            Me.columnActiveReconnected = New Global.System.Data.DataColumn("ActiveReconnected", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiveReconnected)
            Me.columnActiveDirect = New Global.System.Data.DataColumn("ActiveDirect", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiveDirect)
            Me.columnUninstalledTotal = New Global.System.Data.DataColumn("UninstalledTotal", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUninstalledTotal)
            Me.columnUninstalledBacklogs = New Global.System.Data.DataColumn("UninstalledBacklogs", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUninstalledBacklogs)
            Me.columnUninstalledNew = New Global.System.Data.DataColumn("UninstalledNew", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUninstalledNew)
            Me.columnDisconnectedTotal = New Global.System.Data.DataColumn("DisconnectedTotal", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisconnectedTotal)
            Me.columnDisconnectedNonPay = New Global.System.Data.DataColumn("DisconnectedNonPay", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisconnectedNonPay)
            Me.columnDisconnectedVoluntary = New Global.System.Data.DataColumn("DisconnectedVoluntary", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisconnectedVoluntary)
            Me.columnTotalAccountsRes = New Global.System.Data.DataColumn("TotalAccountsRes", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalAccountsRes)
            Me.columnTotalAccountsIns = New Global.System.Data.DataColumn("TotalAccountsIns", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalAccountsIns)
            Me.columnTotalAccountsCom = New Global.System.Data.DataColumn("TotalAccountsCom", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalAccountsCom)
            Me.columnTotalAccountsInd = New Global.System.Data.DataColumn("TotalAccountsInd", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalAccountsInd)
            Me.columnActiveRes = New Global.System.Data.DataColumn("ActiveRes", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiveRes)
            Me.columnActiveIns = New Global.System.Data.DataColumn("ActiveIns", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiveIns)
            Me.columnActiveCom = New Global.System.Data.DataColumn("ActiveCom", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiveCom)
            Me.columnActiveInd = New Global.System.Data.DataColumn("ActiveInd", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiveInd)
            Me.columnRegular = New Global.System.Data.DataColumn("Regular", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegular)
            Me.columnSenior = New Global.System.Data.DataColumn("Senior", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSenior)
            Me.columnrepMonth = New Global.System.Data.DataColumn("repMonth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrepMonth)
            Me.columnrepYear = New Global.System.Data.DataColumn("repYear", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrepYear)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSCDSRepRow() As SCDSRepRow
            Return CType(Me.NewRow,SCDSRepRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SCDSRepRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SCDSRepRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SCDSRepRowChangedEvent) Is Nothing) Then
                RaiseEvent SCDSRepRowChanged(Me, New SCDSRepRowChangeEvent(CType(e.Row,SCDSRepRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SCDSRepRowChangingEvent) Is Nothing) Then
                RaiseEvent SCDSRepRowChanging(Me, New SCDSRepRowChangeEvent(CType(e.Row,SCDSRepRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SCDSRepRowDeletedEvent) Is Nothing) Then
                RaiseEvent SCDSRepRowDeleted(Me, New SCDSRepRowChangeEvent(CType(e.Row,SCDSRepRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SCDSRepRowDeletingEvent) Is Nothing) Then
                RaiseEvent SCDSRepRowDeleting(Me, New SCDSRepRowChangeEvent(CType(e.Row,SCDSRepRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSCDSRepRow(ByVal row As SCDSRepRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As reportingdataset = New reportingdataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SCDSRepDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ORDatasetRow
        Inherits Global.System.Data.DataRow
        
        Private tableORDataset As ORDatasetDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableORDataset = CType(Me.Table,ORDatasetDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pID() As Integer
            Get
                Return CType(Me(Me.tableORDataset.pIDColumn),Integer)
            End Get
            Set
                Me(Me.tableORDataset.pIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property cID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.cIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cID' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.cIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.ORNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORNumber' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.ORNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.pAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pAmount' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.pAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AcctCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.AcctCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AcctCode' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.AcctCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property orID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.orIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'orID' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.orIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORNum() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.ORNumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORNum' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.ORNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totalPayment() As Double
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.totalPaymentColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'totalPayment' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.totalPaymentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pType() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.pTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pType' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.pTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property numpayment() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.numpaymentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'numpayment' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.numpaymentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property datepayment() As Date
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.datepaymentColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'datepayment' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.datepaymentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property draweepayment() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.draweepaymentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'draweepayment' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.draweepaymentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property uID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.uIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'uID' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.uIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amountinwords() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.amountinwordsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amountinwords' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.amountinwordsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property uID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.uID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'uID1' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.uID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property uname() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.unameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'uname' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.unameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property upass() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.upassColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'upass' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.upassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fullname() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.fullnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fullname' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.fullnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property utypeid() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.utypeidColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'utypeid' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.utypeidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.pdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pdate' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.pdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property cID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.cID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cID1' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.cID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FName() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.FNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FName' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.FNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MName() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.MNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MName' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.MNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LName() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.LNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LName' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.LNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CNum() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.CNumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CNum' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.CNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Address() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Address' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property brgyID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.brgyIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'brgyID' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.brgyIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property collectionnature() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataset.collectionnatureColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'collectionnature' in table 'ORDataset' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataset.collectionnatureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscIDNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.cIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcIDNull()
            Me(Me.tableORDataset.cIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORNumberNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.ORNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORNumberNull()
            Me(Me.tableORDataset.ORNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspAmountNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.pAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpAmountNull()
            Me(Me.tableORDataset.pAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAcctCodeNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.AcctCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAcctCodeNull()
            Me(Me.tableORDataset.AcctCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsorIDNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.orIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetorIDNull()
            Me(Me.tableORDataset.orIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORNumNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.ORNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORNumNull()
            Me(Me.tableORDataset.ORNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstotalPaymentNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.totalPaymentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettotalPaymentNull()
            Me(Me.tableORDataset.totalPaymentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspTypeNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.pTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpTypeNull()
            Me(Me.tableORDataset.pTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnumpaymentNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.numpaymentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnumpaymentNull()
            Me(Me.tableORDataset.numpaymentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdatepaymentNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.datepaymentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdatepaymentNull()
            Me(Me.tableORDataset.datepaymentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdraweepaymentNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.draweepaymentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdraweepaymentNull()
            Me(Me.tableORDataset.draweepaymentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsuIDNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.uIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetuIDNull()
            Me(Me.tableORDataset.uIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsamountinwordsNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.amountinwordsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetamountinwordsNull()
            Me(Me.tableORDataset.amountinwordsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsuID1Null() As Boolean
            Return Me.IsNull(Me.tableORDataset.uID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetuID1Null()
            Me(Me.tableORDataset.uID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsunameNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.unameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetunameNull()
            Me(Me.tableORDataset.unameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsupassNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.upassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetupassNull()
            Me(Me.tableORDataset.upassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfullnameNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.fullnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfullnameNull()
            Me(Me.tableORDataset.fullnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsutypeidNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.utypeidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetutypeidNull()
            Me(Me.tableORDataset.utypeidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspdateNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.pdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpdateNull()
            Me(Me.tableORDataset.pdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscID1Null() As Boolean
            Return Me.IsNull(Me.tableORDataset.cID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcID1Null()
            Me(Me.tableORDataset.cID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFNameNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.FNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFNameNull()
            Me(Me.tableORDataset.FNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMNameNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.MNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMNameNull()
            Me(Me.tableORDataset.MNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLNameNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.LNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLNameNull()
            Me(Me.tableORDataset.LNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCNumNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.CNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCNumNull()
            Me(Me.tableORDataset.CNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAddressNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAddressNull()
            Me(Me.tableORDataset.AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbrgyIDNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.brgyIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbrgyIDNull()
            Me(Me.tableORDataset.brgyIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscollectionnatureNull() As Boolean
            Return Me.IsNull(Me.tableORDataset.collectionnatureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcollectionnatureNull()
            Me(Me.tableORDataset.collectionnatureColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CollectionNoticeRow
        Inherits Global.System.Data.DataRow
        
        Private tableCollectionNotice As CollectionNoticeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCollectionNotice = CType(Me.Table,CollectionNoticeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property metID() As Integer
            Get
                Return CType(Me(Me.tableCollectionNotice.metIDColumn),Integer)
            End Get
            Set
                Me(Me.tableCollectionNotice.metIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acctID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.acctIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'acctID' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.acctIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.consIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consID' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.consIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property classID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.classIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'classID' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.classIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Reference() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.ReferenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Reference' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.ReferenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Reading() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.ReadingColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Reading' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.ReadingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Consumed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.ConsumedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Consumed' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.ConsumedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.AmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amount' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.AmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PrevBal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.PrevBalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevBal' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.PrevBalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.TotAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotAmount' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.TotAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DueAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.DueAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DueAmount' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.DueAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReadDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.ReadDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReadDate' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.ReadDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateOfAccess() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.DateOfAccessColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateOfAccess' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.DateOfAccessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property uID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.uIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'uID' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.uIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property zoneID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.zoneIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zoneID' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.zoneIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property clusterNum() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.clusterNumColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'clusterNum' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.clusterNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sequenceNum() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.sequenceNumColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sequenceNum' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.sequenceNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReadPerFrom() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.ReadPerFromColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReadPerFrom' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.ReadPerFromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReadPerTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.ReadPerToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReadPerTo' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.ReadPerToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReadPerYear() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.ReadPerYearColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReadPerYear' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.ReadPerYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MetStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.MetStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MetStatus' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.MetStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DueDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.DueDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DueDate' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.DueDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property paymentDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.paymentDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'paymentDate' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.paymentDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acctID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.acctID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'acctID1' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.acctID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.consID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consID1' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.consID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property classID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.classID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'classID1' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.classID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property brgyID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.brgyIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'brgyID' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.brgyIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property clusterID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.clusterIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'clusterID' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.clusterIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sequence() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.SequenceColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sequence' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.SequenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.AccountNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountNo' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.AccountNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property receiptNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.receiptNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'receiptNo' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.receiptNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StreetAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.StreetAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StreetAddress' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.StreetAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeterNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.MeterNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeterNo' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.MeterNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeterBrand() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.MeterBrandColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeterBrand' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.MeterBrandColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeterSize() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.MeterSizeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeterSize' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.MeterSizeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeterReference() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.MeterReferenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeterReference' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.MeterReferenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ConnectionDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.ConnectionDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConnectionDate' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.ConnectionDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AcctStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.AcctStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AcctStatus' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.AcctStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CanDelete() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.CanDeleteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CanDelete' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.CanDeleteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consID2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.consID2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consID2' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.consID2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ConsumerName() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.ConsumerNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConsumerName' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.ConsumerNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property cAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.cAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cAddress' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.cAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contactNum() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.contactNumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'contactNum' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.contactNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property classID2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.classID2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'classID2' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.classID2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property classification() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.classificationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'classification' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.classificationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property classcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.classcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'classcode' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.classcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property isbulk() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.isbulkColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'isbulk' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.isbulkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dateFrom() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.dateFromColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dateFrom' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.dateFromColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dateTo() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.dateToColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dateTo' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.dateToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property brgyID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.brgyID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'brgyID1' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.brgyID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZoneID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.ZoneID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZoneID1' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.ZoneID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AddBrgy() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.AddBrgyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddBrgy' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.AddBrgyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property brgyCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.brgyCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'brgyCode' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.brgyCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClusterSize() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.ClusterSizeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClusterSize' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.ClusterSizeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property bClass() As String
            Get
                Try 
                    Return CType(Me(Me.tableCollectionNotice.bClassColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bClass' in table 'CollectionNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCollectionNotice.bClassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsacctIDNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.acctIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetacctIDNull()
            Me(Me.tableCollectionNotice.acctIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsIDNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.consIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsIDNull()
            Me(Me.tableCollectionNotice.consIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclassIDNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.classIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclassIDNull()
            Me(Me.tableCollectionNotice.classIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReferenceNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.ReferenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReferenceNull()
            Me(Me.tableCollectionNotice.ReferenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReadingNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.ReadingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReadingNull()
            Me(Me.tableCollectionNotice.ReadingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConsumedNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.ConsumedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConsumedNull()
            Me(Me.tableCollectionNotice.ConsumedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmountNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.AmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmountNull()
            Me(Me.tableCollectionNotice.AmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrevBalNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.PrevBalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrevBalNull()
            Me(Me.tableCollectionNotice.PrevBalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotAmountNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.TotAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotAmountNull()
            Me(Me.tableCollectionNotice.TotAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDueAmountNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.DueAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDueAmountNull()
            Me(Me.tableCollectionNotice.DueAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReadDateNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.ReadDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReadDateNull()
            Me(Me.tableCollectionNotice.ReadDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateOfAccessNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.DateOfAccessColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateOfAccessNull()
            Me(Me.tableCollectionNotice.DateOfAccessColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsuIDNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.uIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetuIDNull()
            Me(Me.tableCollectionNotice.uIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IszoneIDNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.zoneIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetzoneIDNull()
            Me(Me.tableCollectionNotice.zoneIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclusterNumNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.clusterNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclusterNumNull()
            Me(Me.tableCollectionNotice.clusterNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssequenceNumNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.sequenceNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsequenceNumNull()
            Me(Me.tableCollectionNotice.sequenceNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReadPerFromNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.ReadPerFromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReadPerFromNull()
            Me(Me.tableCollectionNotice.ReadPerFromColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReadPerToNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.ReadPerToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReadPerToNull()
            Me(Me.tableCollectionNotice.ReadPerToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReadPerYearNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.ReadPerYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReadPerYearNull()
            Me(Me.tableCollectionNotice.ReadPerYearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMetStatusNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.MetStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMetStatusNull()
            Me(Me.tableCollectionNotice.MetStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDueDateNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.DueDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDueDateNull()
            Me(Me.tableCollectionNotice.DueDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspaymentDateNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.paymentDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpaymentDateNull()
            Me(Me.tableCollectionNotice.paymentDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsacctID1Null() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.acctID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetacctID1Null()
            Me(Me.tableCollectionNotice.acctID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsID1Null() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.consID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsID1Null()
            Me(Me.tableCollectionNotice.consID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclassID1Null() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.classID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclassID1Null()
            Me(Me.tableCollectionNotice.classID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbrgyIDNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.brgyIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbrgyIDNull()
            Me(Me.tableCollectionNotice.brgyIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclusterIDNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.clusterIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclusterIDNull()
            Me(Me.tableCollectionNotice.clusterIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSequenceNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.SequenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSequenceNull()
            Me(Me.tableCollectionNotice.SequenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountNoNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.AccountNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountNoNull()
            Me(Me.tableCollectionNotice.AccountNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsreceiptNoNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.receiptNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetreceiptNoNull()
            Me(Me.tableCollectionNotice.receiptNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStreetAddressNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.StreetAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStreetAddressNull()
            Me(Me.tableCollectionNotice.StreetAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeterNoNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.MeterNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeterNoNull()
            Me(Me.tableCollectionNotice.MeterNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeterBrandNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.MeterBrandColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeterBrandNull()
            Me(Me.tableCollectionNotice.MeterBrandColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeterSizeNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.MeterSizeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeterSizeNull()
            Me(Me.tableCollectionNotice.MeterSizeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeterReferenceNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.MeterReferenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeterReferenceNull()
            Me(Me.tableCollectionNotice.MeterReferenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConnectionDateNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.ConnectionDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConnectionDateNull()
            Me(Me.tableCollectionNotice.ConnectionDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAcctStatusNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.AcctStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAcctStatusNull()
            Me(Me.tableCollectionNotice.AcctStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCanDeleteNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.CanDeleteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCanDeleteNull()
            Me(Me.tableCollectionNotice.CanDeleteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsID2Null() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.consID2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsID2Null()
            Me(Me.tableCollectionNotice.consID2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConsumerNameNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.ConsumerNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConsumerNameNull()
            Me(Me.tableCollectionNotice.ConsumerNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscAddressNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.cAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcAddressNull()
            Me(Me.tableCollectionNotice.cAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscontactNumNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.contactNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcontactNumNull()
            Me(Me.tableCollectionNotice.contactNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclassID2Null() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.classID2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclassID2Null()
            Me(Me.tableCollectionNotice.classID2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclassificationNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.classificationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclassificationNull()
            Me(Me.tableCollectionNotice.classificationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclasscodeNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.classcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclasscodeNull()
            Me(Me.tableCollectionNotice.classcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsisbulkNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.isbulkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetisbulkNull()
            Me(Me.tableCollectionNotice.isbulkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdateFromNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.dateFromColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdateFromNull()
            Me(Me.tableCollectionNotice.dateFromColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdateToNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.dateToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdateToNull()
            Me(Me.tableCollectionNotice.dateToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbrgyID1Null() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.brgyID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbrgyID1Null()
            Me(Me.tableCollectionNotice.brgyID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZoneID1Null() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.ZoneID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZoneID1Null()
            Me(Me.tableCollectionNotice.ZoneID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAddBrgyNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.AddBrgyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAddBrgyNull()
            Me(Me.tableCollectionNotice.AddBrgyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbrgyCodeNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.brgyCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbrgyCodeNull()
            Me(Me.tableCollectionNotice.brgyCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClusterSizeNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.ClusterSizeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClusterSizeNull()
            Me(Me.tableCollectionNotice.ClusterSizeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbClassNull() As Boolean
            Return Me.IsNull(Me.tableCollectionNotice.bClassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbClassNull()
            Me(Me.tableCollectionNotice.bClassColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BillNoticeRow
        Inherits Global.System.Data.DataRow
        
        Private tableBillNotice As BillNoticeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBillNotice = CType(Me.Table,BillNoticeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.consIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consID' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.consIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property classID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.classIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'classID' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.classIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.billdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billdate' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.billdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property brgyID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.brgyIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'brgyID' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.brgyIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property clusterID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.clusterIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'clusterID' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.clusterIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sequence() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.SequenceColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sequence' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.SequenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.AccountNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountNo' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.AccountNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StreetAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.StreetAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StreetAddress' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.StreetAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeterNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.MeterNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeterNo' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.MeterNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ConsumerName() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.ConsumerNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConsumerName' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.ConsumerNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property classification() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.classificationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'classification' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.classificationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property uID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.uIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'uID' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.uIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billiD() As Integer
            Get
                Return CType(Me(Me.tableBillNotice.billiDColumn),Integer)
            End Get
            Set
                Me(Me.tableBillNotice.billiDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acctID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.acctIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'acctID' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.acctIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property zoneID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.zoneIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zoneID' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.zoneIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property isSenior() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.isSeniorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'isSenior' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.isSeniorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dueDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.dueDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dueDate' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.dueDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fromDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.fromDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fromDate' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.fromDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property toDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.toDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'toDate' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.toDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billMonth() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.billMonthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billMonth' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.billMonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billYear() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.billYearColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billYear' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.billYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevRead() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.prevReadColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevRead' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.prevReadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property presRead() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.presReadColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'presRead' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.presReadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevConsump() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.prevConsumpColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevConsump' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.prevConsumpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consump() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.consumpColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consump' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.consumpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property isSC() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.isSCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'isSC' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.isSCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property seqNum() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.seqNumColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seqNum' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.seqNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property isAdjusted() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.isAdjustedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'isAdjusted' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.isAdjustedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjReason() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.adjReasonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjReason' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.adjReasonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjPrep() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.adjPrepColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjPrep' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.adjPrepColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.adjDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjDate' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.adjDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjApprov() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.adjApprovColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjApprov' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.adjApprovColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjRemark() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.adjRemarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjRemark' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.adjRemarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjApprovStat() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.adjApprovStatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjApprovStat' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.adjApprovStatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billstat() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.billstatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billstat' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.billstatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property metReadID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.metReadIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'metReadID' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.metReadIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property metName() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.metNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'metName' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.metNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billNote() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.billNoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billNote' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.billNoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billperiod() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.billperiodColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billperiod' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.billperiodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fconsump() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.FconsumpColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fconsump' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.FconsumpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SConsump() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.SConsumpColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SConsump' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.SConsumpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FLabel() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.FLabelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FLabel' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.FLabelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SLabel() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.SLabelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SLabel' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.SLabelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property clustername() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.clusternameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'clustername' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.clusternameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PrepAdjName() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.PrepAdjNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrepAdjName' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.PrepAdjNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ApprovAdjName() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.ApprovAdjNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ApprovAdjName' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.ApprovAdjNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UserFullName() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.UserFullNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UserFullName' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.UserFullNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property addBrgy() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.addBrgyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'addBrgy' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.addBrgyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property readDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.readDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'readDate' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.readDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjConsump() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.adjConsumpColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjConsump' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.adjConsumpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property minconsump() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.minconsumpColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'minconsump' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.minconsumpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountName() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.AccountNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountName' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.AccountNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contactNum() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.contactNumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'contactNum' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.contactNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property applicationfee() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.applicationfeeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'applicationfee' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.applicationfeeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevBal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.prevBalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevBal' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.prevBalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevEnv() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.prevEnvColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevEnv' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.prevEnvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevAdj() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.prevAdjColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevAdj' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.prevAdjColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevAdjustedRate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.prevAdjustedRateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevAdjustedRate' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.prevAdjustedRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevPenalty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.prevPenaltyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevPenalty' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.prevPenaltyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevAmountDue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.prevAmountDueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevAmountDue' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.prevAmountDueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevTotal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.prevTotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevTotal' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.prevTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.amountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.amountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property flatrate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.flatrateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'flatrate' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.flatrateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property excess() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.excessColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'excess' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.excessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjusted() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.adjustedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjusted' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.adjustedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjustedRate() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.adjustedRateColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjustedRate' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.adjustedRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EnviFee() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.EnviFeeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EnviFee' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.EnviFeeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totalAmountDue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.totalAmountDueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'totalAmountDue' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.totalAmountDueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property useAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.useAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'useAmount' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.useAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property useADue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.useADueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'useADue' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.useADueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property penalty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.penaltyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'penalty' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.penaltyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AmountADue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.AmountADueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AmountADue' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.AmountADueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCDiscount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.SCDiscountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCDiscount' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.SCDiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCPenalty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.SCPenaltyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCPenalty' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.SCPenaltyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORNumPaid() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.ORNumPaidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORNumPaid' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.ORNumPaidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AmountPaid() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.AmountPaidColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AmountPaid' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.AmountPaidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MoneyAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.MoneyAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MoneyAmount' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.MoneyAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mChange() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.mChangeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mChange' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.mChangeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fexcess() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.FexcessColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fexcess' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.FexcessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SExcess() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.SExcessColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SExcess' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.SExcessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fratepercub() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.FratepercubColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fratepercub' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.FratepercubColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SRatepercub() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.SRatepercubColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRatepercub' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.SRatepercubColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevSCDis() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.prevSCDisColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevSCDis' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.prevSCDisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property municipality() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillNotice.municipalityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'municipality' in table 'BillNotice' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillNotice.municipalityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsIDNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.consIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsIDNull()
            Me(Me.tableBillNotice.consIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclassIDNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.classIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclassIDNull()
            Me(Me.tableBillNotice.classIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbilldateNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.billdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbilldateNull()
            Me(Me.tableBillNotice.billdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbrgyIDNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.brgyIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbrgyIDNull()
            Me(Me.tableBillNotice.brgyIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclusterIDNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.clusterIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclusterIDNull()
            Me(Me.tableBillNotice.clusterIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSequenceNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.SequenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSequenceNull()
            Me(Me.tableBillNotice.SequenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountNoNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.AccountNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountNoNull()
            Me(Me.tableBillNotice.AccountNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStreetAddressNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.StreetAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStreetAddressNull()
            Me(Me.tableBillNotice.StreetAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeterNoNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.MeterNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeterNoNull()
            Me(Me.tableBillNotice.MeterNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConsumerNameNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.ConsumerNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConsumerNameNull()
            Me(Me.tableBillNotice.ConsumerNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclassificationNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.classificationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclassificationNull()
            Me(Me.tableBillNotice.classificationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsuIDNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.uIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetuIDNull()
            Me(Me.tableBillNotice.uIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsacctIDNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.acctIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetacctIDNull()
            Me(Me.tableBillNotice.acctIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IszoneIDNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.zoneIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetzoneIDNull()
            Me(Me.tableBillNotice.zoneIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsisSeniorNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.isSeniorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetisSeniorNull()
            Me(Me.tableBillNotice.isSeniorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdueDateNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.dueDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdueDateNull()
            Me(Me.tableBillNotice.dueDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfromDateNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.fromDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfromDateNull()
            Me(Me.tableBillNotice.fromDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstoDateNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.toDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettoDateNull()
            Me(Me.tableBillNotice.toDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillMonthNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.billMonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillMonthNull()
            Me(Me.tableBillNotice.billMonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillYearNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.billYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillYearNull()
            Me(Me.tableBillNotice.billYearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevReadNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.prevReadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevReadNull()
            Me(Me.tableBillNotice.prevReadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspresReadNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.presReadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpresReadNull()
            Me(Me.tableBillNotice.presReadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevConsumpNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.prevConsumpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevConsumpNull()
            Me(Me.tableBillNotice.prevConsumpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsumpNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.consumpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsumpNull()
            Me(Me.tableBillNotice.consumpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsisSCNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.isSCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetisSCNull()
            Me(Me.tableBillNotice.isSCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsseqNumNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.seqNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetseqNumNull()
            Me(Me.tableBillNotice.seqNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsisAdjustedNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.isAdjustedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetisAdjustedNull()
            Me(Me.tableBillNotice.isAdjustedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjReasonNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.adjReasonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjReasonNull()
            Me(Me.tableBillNotice.adjReasonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjPrepNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.adjPrepColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjPrepNull()
            Me(Me.tableBillNotice.adjPrepColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjDateNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.adjDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjDateNull()
            Me(Me.tableBillNotice.adjDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjApprovNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.adjApprovColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjApprovNull()
            Me(Me.tableBillNotice.adjApprovColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjRemarkNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.adjRemarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjRemarkNull()
            Me(Me.tableBillNotice.adjRemarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjApprovStatNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.adjApprovStatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjApprovStatNull()
            Me(Me.tableBillNotice.adjApprovStatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillstatNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.billstatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillstatNull()
            Me(Me.tableBillNotice.billstatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmetReadIDNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.metReadIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmetReadIDNull()
            Me(Me.tableBillNotice.metReadIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmetNameNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.metNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmetNameNull()
            Me(Me.tableBillNotice.metNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillNoteNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.billNoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillNoteNull()
            Me(Me.tableBillNotice.billNoteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillperiodNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.billperiodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillperiodNull()
            Me(Me.tableBillNotice.billperiodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFconsumpNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.FconsumpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFconsumpNull()
            Me(Me.tableBillNotice.FconsumpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSConsumpNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.SConsumpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSConsumpNull()
            Me(Me.tableBillNotice.SConsumpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFLabelNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.FLabelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFLabelNull()
            Me(Me.tableBillNotice.FLabelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSLabelNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.SLabelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSLabelNull()
            Me(Me.tableBillNotice.SLabelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclusternameNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.clusternameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclusternameNull()
            Me(Me.tableBillNotice.clusternameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrepAdjNameNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.PrepAdjNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrepAdjNameNull()
            Me(Me.tableBillNotice.PrepAdjNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsApprovAdjNameNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.ApprovAdjNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetApprovAdjNameNull()
            Me(Me.tableBillNotice.ApprovAdjNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUserFullNameNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.UserFullNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUserFullNameNull()
            Me(Me.tableBillNotice.UserFullNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaddBrgyNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.addBrgyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaddBrgyNull()
            Me(Me.tableBillNotice.addBrgyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsreadDateNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.readDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetreadDateNull()
            Me(Me.tableBillNotice.readDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjConsumpNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.adjConsumpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjConsumpNull()
            Me(Me.tableBillNotice.adjConsumpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsminconsumpNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.minconsumpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetminconsumpNull()
            Me(Me.tableBillNotice.minconsumpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountNameNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.AccountNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountNameNull()
            Me(Me.tableBillNotice.AccountNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscontactNumNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.contactNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcontactNumNull()
            Me(Me.tableBillNotice.contactNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsapplicationfeeNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.applicationfeeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetapplicationfeeNull()
            Me(Me.tableBillNotice.applicationfeeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevBalNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.prevBalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevBalNull()
            Me(Me.tableBillNotice.prevBalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevEnvNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.prevEnvColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevEnvNull()
            Me(Me.tableBillNotice.prevEnvColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevAdjNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.prevAdjColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevAdjNull()
            Me(Me.tableBillNotice.prevAdjColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevAdjustedRateNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.prevAdjustedRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevAdjustedRateNull()
            Me(Me.tableBillNotice.prevAdjustedRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevPenaltyNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.prevPenaltyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevPenaltyNull()
            Me(Me.tableBillNotice.prevPenaltyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevAmountDueNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.prevAmountDueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevAmountDueNull()
            Me(Me.tableBillNotice.prevAmountDueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevTotalNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.prevTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevTotalNull()
            Me(Me.tableBillNotice.prevTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsamountNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.amountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetamountNull()
            Me(Me.tableBillNotice.amountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsflatrateNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.flatrateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetflatrateNull()
            Me(Me.tableBillNotice.flatrateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsexcessNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.excessColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetexcessNull()
            Me(Me.tableBillNotice.excessColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjustedNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.adjustedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjustedNull()
            Me(Me.tableBillNotice.adjustedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjustedRateNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.adjustedRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjustedRateNull()
            Me(Me.tableBillNotice.adjustedRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEnviFeeNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.EnviFeeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEnviFeeNull()
            Me(Me.tableBillNotice.EnviFeeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstotalAmountDueNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.totalAmountDueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettotalAmountDueNull()
            Me(Me.tableBillNotice.totalAmountDueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsuseAmountNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.useAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetuseAmountNull()
            Me(Me.tableBillNotice.useAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsuseADueNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.useADueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetuseADueNull()
            Me(Me.tableBillNotice.useADueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspenaltyNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.penaltyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpenaltyNull()
            Me(Me.tableBillNotice.penaltyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmountADueNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.AmountADueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmountADueNull()
            Me(Me.tableBillNotice.AmountADueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCDiscountNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.SCDiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCDiscountNull()
            Me(Me.tableBillNotice.SCDiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCPenaltyNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.SCPenaltyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCPenaltyNull()
            Me(Me.tableBillNotice.SCPenaltyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORNumPaidNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.ORNumPaidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORNumPaidNull()
            Me(Me.tableBillNotice.ORNumPaidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmountPaidNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.AmountPaidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmountPaidNull()
            Me(Me.tableBillNotice.AmountPaidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMoneyAmountNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.MoneyAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMoneyAmountNull()
            Me(Me.tableBillNotice.MoneyAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmChangeNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.mChangeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmChangeNull()
            Me(Me.tableBillNotice.mChangeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFexcessNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.FexcessColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFexcessNull()
            Me(Me.tableBillNotice.FexcessColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSExcessNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.SExcessColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSExcessNull()
            Me(Me.tableBillNotice.SExcessColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFratepercubNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.FratepercubColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFratepercubNull()
            Me(Me.tableBillNotice.FratepercubColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSRatepercubNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.SRatepercubColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSRatepercubNull()
            Me(Me.tableBillNotice.SRatepercubColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevSCDisNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.prevSCDisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevSCDisNull()
            Me(Me.tableBillNotice.prevSCDisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmunicipalityNull() As Boolean
            Return Me.IsNull(Me.tableBillNotice.municipalityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmunicipalityNull()
            Me(Me.tableBillNotice.municipalityColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ORDataTableRow
        Inherits Global.System.Data.DataRow
        
        Private tableORDataTable As ORDataTableDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableORDataTable = CType(Me.Table,ORDataTableDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property orID() As Integer
            Get
                Return CType(Me(Me.tableORDataTable.orIDColumn),Integer)
            End Get
            Set
                Me(Me.tableORDataTable.orIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORNum() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.ORNumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORNum' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.ORNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totalPayment() As Double
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.totalPaymentColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'totalPayment' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.totalPaymentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pType() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.pTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pType' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.pTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property uID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.uIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'uID' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.uIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amountinwords() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.amountinwordsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amountinwords' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.amountinwordsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.consIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consID' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.consIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.consID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consID1' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.consID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property uID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.uID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'uID1' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.uID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ConsumerName() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.ConsumerNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConsumerName' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.ConsumerNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property cAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.cAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cAddress' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.cAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contactNum() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.contactNumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'contactNum' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.contactNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property uname() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.unameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'uname' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.unameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property upass() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.upassColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'upass' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.upassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fullname() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.fullnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fullname' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.fullnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property utypeid() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.utypeidColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'utypeid' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.utypeidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property position() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.positionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'position' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.positionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property userStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.userStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'userStatus' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.userStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property canDel() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.canDelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'canDel' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.canDelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property draweeBank() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.draweeBankColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'draweeBank' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.draweeBankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property draweenum() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.draweenumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'draweenum' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.draweenumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property draweedate() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.draweedateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'draweedate' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.draweedateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.pDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pDate' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.pDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property seniorRmk() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.seniorRmkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seniorRmk' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.seniorRmkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property seniorID() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.seniorIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seniorID' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.seniorIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totalDiscount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.totalDiscountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'totalDiscount' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.totalDiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nature1() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.nature1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nature1' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.nature1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nature2() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.nature2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nature2' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.nature2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nature3() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.nature3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nature3' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.nature3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nature4() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.nature4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nature4' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.nature4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nature5() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.nature5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nature5' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.nature5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nature6() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.nature6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nature6' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.nature6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nature7() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.nature7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nature7' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.nature7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nature8() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.nature8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nature8' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.nature8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property code1() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.code1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code1' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.code1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property code2() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.code2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code2' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.code2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property code3() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.code3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code3' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.code3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property code4() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.code4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code4' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.code4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property code5() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.code5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code5' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.code5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property code6() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.code6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code6' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.code6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property code7() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.code7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code7' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.code7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property code8() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.code8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code8' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.code8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount1() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.amount1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount1' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.amount1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount2() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.amount2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount2' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.amount2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount3() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.amount3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount3' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.amount3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount4() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.amount4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount4' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.amount4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount5() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.amount5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount5' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.amount5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount6() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.amount6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount6' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.amount6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount7() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.amount7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount7' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.amount7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount8() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.amount8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount8' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.amount8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property collectorname() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.collectornameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'collectorname' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.collectornameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property isSC() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.isSCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'isSC' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.isSCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property seniorID1() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.seniorID1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seniorID1' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.seniorID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property agency() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.agencyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'agency' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.agencyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amountinwords2() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.amountinwords2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amountinwords2' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.amountinwords2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property cashCheck() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.cashCheckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cashCheck' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.cashCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property checkCheck() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.checkCheckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'checkCheck' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.checkCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MoneyOrderCheck() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.MoneyOrderCheckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MoneyOrderCheck' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.MoneyOrderCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property moneyordernum() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.moneyordernumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'moneyordernum' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.moneyordernumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property moneyorderdate() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDataTable.moneyorderdateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'moneyorderdate' in table 'ORDataTable' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDataTable.moneyorderdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORNumNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.ORNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORNumNull()
            Me(Me.tableORDataTable.ORNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstotalPaymentNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.totalPaymentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettotalPaymentNull()
            Me(Me.tableORDataTable.totalPaymentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspTypeNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.pTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpTypeNull()
            Me(Me.tableORDataTable.pTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsuIDNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.uIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetuIDNull()
            Me(Me.tableORDataTable.uIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsamountinwordsNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.amountinwordsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetamountinwordsNull()
            Me(Me.tableORDataTable.amountinwordsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsIDNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.consIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsIDNull()
            Me(Me.tableORDataTable.consIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsID1Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.consID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsID1Null()
            Me(Me.tableORDataTable.consID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsuID1Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.uID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetuID1Null()
            Me(Me.tableORDataTable.uID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConsumerNameNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.ConsumerNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConsumerNameNull()
            Me(Me.tableORDataTable.ConsumerNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscAddressNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.cAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcAddressNull()
            Me(Me.tableORDataTable.cAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscontactNumNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.contactNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcontactNumNull()
            Me(Me.tableORDataTable.contactNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsunameNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.unameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetunameNull()
            Me(Me.tableORDataTable.unameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsupassNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.upassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetupassNull()
            Me(Me.tableORDataTable.upassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfullnameNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.fullnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfullnameNull()
            Me(Me.tableORDataTable.fullnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsutypeidNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.utypeidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetutypeidNull()
            Me(Me.tableORDataTable.utypeidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspositionNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.positionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpositionNull()
            Me(Me.tableORDataTable.positionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsuserStatusNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.userStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetuserStatusNull()
            Me(Me.tableORDataTable.userStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscanDelNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.canDelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcanDelNull()
            Me(Me.tableORDataTable.canDelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdraweeBankNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.draweeBankColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdraweeBankNull()
            Me(Me.tableORDataTable.draweeBankColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdraweenumNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.draweenumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdraweenumNull()
            Me(Me.tableORDataTable.draweenumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdraweedateNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.draweedateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdraweedateNull()
            Me(Me.tableORDataTable.draweedateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspDateNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.pDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpDateNull()
            Me(Me.tableORDataTable.pDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsseniorRmkNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.seniorRmkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetseniorRmkNull()
            Me(Me.tableORDataTable.seniorRmkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsseniorIDNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.seniorIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetseniorIDNull()
            Me(Me.tableORDataTable.seniorIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstotalDiscountNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.totalDiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettotalDiscountNull()
            Me(Me.tableORDataTable.totalDiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnature1Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.nature1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnature1Null()
            Me(Me.tableORDataTable.nature1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnature2Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.nature2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnature2Null()
            Me(Me.tableORDataTable.nature2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnature3Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.nature3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnature3Null()
            Me(Me.tableORDataTable.nature3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnature4Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.nature4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnature4Null()
            Me(Me.tableORDataTable.nature4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnature5Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.nature5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnature5Null()
            Me(Me.tableORDataTable.nature5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnature6Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.nature6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnature6Null()
            Me(Me.tableORDataTable.nature6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnature7Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.nature7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnature7Null()
            Me(Me.tableORDataTable.nature7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnature8Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.nature8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnature8Null()
            Me(Me.tableORDataTable.nature8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscode1Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.code1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcode1Null()
            Me(Me.tableORDataTable.code1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscode2Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.code2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcode2Null()
            Me(Me.tableORDataTable.code2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscode3Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.code3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcode3Null()
            Me(Me.tableORDataTable.code3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscode4Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.code4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcode4Null()
            Me(Me.tableORDataTable.code4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscode5Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.code5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcode5Null()
            Me(Me.tableORDataTable.code5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscode6Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.code6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcode6Null()
            Me(Me.tableORDataTable.code6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscode7Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.code7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcode7Null()
            Me(Me.tableORDataTable.code7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscode8Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.code8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcode8Null()
            Me(Me.tableORDataTable.code8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount1Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.amount1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount1Null()
            Me(Me.tableORDataTable.amount1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount2Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.amount2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount2Null()
            Me(Me.tableORDataTable.amount2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount3Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.amount3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount3Null()
            Me(Me.tableORDataTable.amount3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount4Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.amount4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount4Null()
            Me(Me.tableORDataTable.amount4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount5Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.amount5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount5Null()
            Me(Me.tableORDataTable.amount5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount6Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.amount6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount6Null()
            Me(Me.tableORDataTable.amount6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount7Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.amount7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount7Null()
            Me(Me.tableORDataTable.amount7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount8Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.amount8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount8Null()
            Me(Me.tableORDataTable.amount8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscollectornameNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.collectornameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcollectornameNull()
            Me(Me.tableORDataTable.collectornameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsisSCNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.isSCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetisSCNull()
            Me(Me.tableORDataTable.isSCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsseniorID1Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.seniorID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetseniorID1Null()
            Me(Me.tableORDataTable.seniorID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsagencyNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.agencyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetagencyNull()
            Me(Me.tableORDataTable.agencyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamountinwords2Null() As Boolean
            Return Me.IsNull(Me.tableORDataTable.amountinwords2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamountinwords2Null()
            Me(Me.tableORDataTable.amountinwords2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscashCheckNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.cashCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcashCheckNull()
            Me(Me.tableORDataTable.cashCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscheckCheckNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.checkCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcheckCheckNull()
            Me(Me.tableORDataTable.checkCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMoneyOrderCheckNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.MoneyOrderCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMoneyOrderCheckNull()
            Me(Me.tableORDataTable.MoneyOrderCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmoneyordernumNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.moneyordernumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmoneyordernumNull()
            Me(Me.tableORDataTable.moneyordernumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmoneyorderdateNull() As Boolean
            Return Me.IsNull(Me.tableORDataTable.moneyorderdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmoneyorderdateNull()
            Me(Me.tableORDataTable.moneyorderdateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DailyReportDataSetRow
        Inherits Global.System.Data.DataRow
        
        Private tableDailyReportDataSet As DailyReportDataSetDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDailyReportDataSet = CType(Me.Table,DailyReportDataSetDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consumername() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyReportDataSet.consumernameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consumername' in table 'DailyReportDataSet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyReportDataSet.consumernameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property addbrgy() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyReportDataSet.addbrgyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'addbrgy' in table 'DailyReportDataSet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyReportDataSet.addbrgyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyReportDataSet.ORNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORNumber' in table 'DailyReportDataSet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyReportDataSet.ORNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DatesRange() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyReportDataSet.DatesRangeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DatesRange' in table 'DailyReportDataSet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyReportDataSet.DatesRangeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property payAmount() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyReportDataSet.payAmountColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'payAmount' in table 'DailyReportDataSet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyReportDataSet.payAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Consumption() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDailyReportDataSet.ConsumptionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Consumption' in table 'DailyReportDataSet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyReportDataSet.ConsumptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Surcharge() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyReportDataSet.SurchargeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Surcharge' in table 'DailyReportDataSet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyReportDataSet.SurchargeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property paymentType() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyReportDataSet.paymentTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'paymentType' in table 'DailyReportDataSet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyReportDataSet.paymentTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Installation() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDailyReportDataSet.InstallationColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Installation' in table 'DailyReportDataSet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyReportDataSet.InstallationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OTHERS() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDailyReportDataSet.OTHERSColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTHERS' in table 'DailyReportDataSet' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyReportDataSet.OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsumernameNull() As Boolean
            Return Me.IsNull(Me.tableDailyReportDataSet.consumernameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsumernameNull()
            Me(Me.tableDailyReportDataSet.consumernameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaddbrgyNull() As Boolean
            Return Me.IsNull(Me.tableDailyReportDataSet.addbrgyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaddbrgyNull()
            Me(Me.tableDailyReportDataSet.addbrgyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORNumberNull() As Boolean
            Return Me.IsNull(Me.tableDailyReportDataSet.ORNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORNumberNull()
            Me(Me.tableDailyReportDataSet.ORNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDatesRangeNull() As Boolean
            Return Me.IsNull(Me.tableDailyReportDataSet.DatesRangeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDatesRangeNull()
            Me(Me.tableDailyReportDataSet.DatesRangeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspayAmountNull() As Boolean
            Return Me.IsNull(Me.tableDailyReportDataSet.payAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpayAmountNull()
            Me(Me.tableDailyReportDataSet.payAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConsumptionNull() As Boolean
            Return Me.IsNull(Me.tableDailyReportDataSet.ConsumptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConsumptionNull()
            Me(Me.tableDailyReportDataSet.ConsumptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSurchargeNull() As Boolean
            Return Me.IsNull(Me.tableDailyReportDataSet.SurchargeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSurchargeNull()
            Me(Me.tableDailyReportDataSet.SurchargeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspaymentTypeNull() As Boolean
            Return Me.IsNull(Me.tableDailyReportDataSet.paymentTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpaymentTypeNull()
            Me(Me.tableDailyReportDataSet.paymentTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInstallationNull() As Boolean
            Return Me.IsNull(Me.tableDailyReportDataSet.InstallationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInstallationNull()
            Me(Me.tableDailyReportDataSet.InstallationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOTHERSNull() As Boolean
            Return Me.IsNull(Me.tableDailyReportDataSet.OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOTHERSNull()
            Me(Me.tableDailyReportDataSet.OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class billAdjustmentRequestRow
        Inherits Global.System.Data.DataRow
        
        Private tablebillAdjustmentRequest As billAdjustmentRequestDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablebillAdjustmentRequest = CType(Me.Table,billAdjustmentRequestDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property reqID() As Integer
            Get
                Return CType(Me(Me.tablebillAdjustmentRequest.reqIDColumn),Integer)
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.reqIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acctID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.acctIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'acctID' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.acctIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property clusterID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.clusterIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'clusterID' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.clusterIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.consIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consID' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.consIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property requestdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.requestdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'requestdate' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.requestdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjReason() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.adjReasonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjReason' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.adjReasonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property preparedby() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.preparedbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'preparedby' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.preparedbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property requestedby() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.requestedbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'requestedby' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.requestedbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjInspection() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.adjInspectionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjInspection' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.adjInspectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property incpectedby() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.incpectedbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'incpectedby' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.incpectedbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property approvedby() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.approvedbyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'approvedby' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.approvedbyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.billIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billID' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.billIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.billID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billID1' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.billID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acctID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.acctID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'acctID1' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.acctID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.consID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consID1' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.consID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property classID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.classIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'classID' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.classIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dueDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.dueDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dueDate' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.dueDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fromDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.fromDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fromDate' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.fromDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property toDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.toDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'toDate' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.toDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billMonth() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.billMonthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billMonth' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.billMonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billYear() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.billYearColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billYear' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.billYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevRead() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.prevReadColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevRead' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.prevReadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property presRead() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.presReadColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'presRead' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.presReadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevBal() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.prevBalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevBal' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.prevBalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevConsump() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.prevConsumpColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevConsump' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.prevConsumpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevEnv() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.prevEnvColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevEnv' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.prevEnvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevAdj() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.prevAdjColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevAdj' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.prevAdjColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevAdjustedRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.prevAdjustedRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevAdjustedRate' in table 'billAdjustmentRequest' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.prevAdjustedRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevPenalty() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.prevPenaltyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevPenalty' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.prevPenaltyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevAmountDue() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.prevAmountDueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevAmountDue' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.prevAmountDueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevTotal() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.prevTotalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevTotal' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.prevTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consump() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.consumpColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consump' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.consumpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.amountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.amountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property flatrate() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.flatrateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'flatrate' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.flatrateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property excess() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.excessColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'excess' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.excessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjusted() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.adjustedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjusted' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.adjustedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjustedRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.adjustedRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjustedRate' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.adjustedRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EnviFee() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.EnviFeeColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EnviFee' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.EnviFeeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totalAmountDue() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.totalAmountDueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'totalAmountDue' in table 'billAdjustmentRequest' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.totalAmountDueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property useAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.useAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'useAmount' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.useAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property useADue() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.useADueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'useADue' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.useADueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property penalty() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.penaltyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'penalty' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.penaltyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AmountADue() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.AmountADueColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AmountADue' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.AmountADueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property isSC() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.isSCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'isSC' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.isSCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCDiscount() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.SCDiscountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCDiscount' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.SCDiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCPenalty() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.SCPenaltyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCPenalty' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.SCPenaltyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property seqNum() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.seqNumColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seqNum' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.seqNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property isAdjusted() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.isAdjustedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'isAdjusted' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.isAdjustedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property origConsump() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.origConsumpColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'origConsump' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.origConsumpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property origAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.origAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'origAmount' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.origAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property origFlat() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.origFlatColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'origFlat' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.origFlatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property origExcess() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.origExcessColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'origExcess' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.origExcessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property origAdjusted() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.origAdjustedColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'origAdjusted' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.origAdjustedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property origAdjustedRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.origAdjustedRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'origAdjustedRate' in table 'billAdjustmentRequest' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.origAdjustedRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property origEnvi() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.origEnviColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'origEnvi' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.origEnviColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property origPenalty() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.origPenaltyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'origPenalty' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.origPenaltyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property origTotalPen() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.origTotalPenColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'origTotalPen' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.origTotalPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property origSCDis() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.origSCDisColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'origSCDis' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.origSCDisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property origSCPen() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.origSCPenColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'origSCPen' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.origSCPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjReason1() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.adjReason1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjReason1' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.adjReason1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjPrep() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.adjPrepColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjPrep' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.adjPrepColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.adjDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjDate' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.adjDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjApprov() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.adjApprovColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjApprov' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.adjApprovColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjRemark() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.adjRemarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjRemark' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.adjRemarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjApprovStat() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.adjApprovStatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjApprovStat' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.adjApprovStatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billStat() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.billStatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billStat' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.billStatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORNumPaid() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.ORNumPaidColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORNumPaid' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.ORNumPaidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AmountPaid() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.AmountPaidColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AmountPaid' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.AmountPaidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MoneyAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.MoneyAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MoneyAmount' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.MoneyAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mChange() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.mChangeColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mChange' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.mChangeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property metReadID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.metReadIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'metReadID' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.metReadIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billNote() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.billNoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billNote' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.billNoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property uID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.uIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'uID' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.uIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property zoneID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.zoneIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zoneID' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.zoneIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property clusterID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.clusterID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'clusterID1' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.clusterID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billPeriod() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.billPeriodColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billPeriod' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.billPeriodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.billDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billDate' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.billDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fconsump() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.FconsumpColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fconsump' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.FconsumpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SConsump() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.SConsumpColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SConsump' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.SConsumpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FExcess() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.FExcessColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FExcess' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.FExcessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SExcess() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.SExcessColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SExcess' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.SExcessColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FLabel() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.FLabelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FLabel' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.FLabelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SLabel() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.SLabelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SLabel' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.SLabelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property readDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.readDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'readDate' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.readDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjConsump() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.adjConsumpColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjConsump' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.adjConsumpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property minConsump() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.minConsumpColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'minConsump' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.minConsumpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fratepercub() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.FratepercubColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fratepercub' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.FratepercubColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SRatepercub() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.SRatepercubColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRatepercub' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.SRatepercubColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevSCDis() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.prevSCDisColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevSCDis' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.prevSCDisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property paymentDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.paymentDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'paymentDate' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.paymentDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billNo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.billNoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billNo' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.billNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.SCRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCRate' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.SCRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjApprovDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.adjApprovDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjApprovDate' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.adjApprovDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevOutstanding() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.prevOutstandingColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevOutstanding' in table 'billAdjustmentRequest' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.prevOutstandingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevOutstandingStat() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.prevOutstandingStatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevOutstandingStat' in table 'billAdjustmentRequest' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.prevOutstandingStatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevOutstandingOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.prevOutstandingORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevOutstandingOR' in table 'billAdjustmentRequest' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.prevOutstandingORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevOutstandingDuration() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.prevOutstandingDurationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevOutstandingDuration' in table 'billAdjustmentRequest' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.prevOutstandingDurationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BaseRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.BaseRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BaseRate' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.BaseRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consID2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.consID2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consID2' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.consID2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ConsumerName() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.ConsumerNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConsumerName' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.ConsumerNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property cAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.cAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cAddress' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.cAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contactNum() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.contactNumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'contactNum' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.contactNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property isSC1() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.isSC1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'isSC1' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.isSC1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property seniorID() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.seniorIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seniorID' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.seniorIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property agency() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.agencyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'agency' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.agencyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acctID2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.acctID2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'acctID2' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.acctID2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consID3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.consID3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consID3' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.consID3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property classID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.classID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'classID1' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.classID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property brgyID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.brgyIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'brgyID' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.brgyIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property clusterID2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.clusterID2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'clusterID2' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.clusterID2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sequence() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.SequenceColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sequence' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.SequenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.AccountNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountNo' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.AccountNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property receiptNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.receiptNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'receiptNo' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.receiptNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StreetAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.StreetAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StreetAddress' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.StreetAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeterNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.MeterNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeterNo' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.MeterNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeterBrand() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.MeterBrandColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeterBrand' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.MeterBrandColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeterSize() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.MeterSizeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeterSize' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.MeterSizeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeterReference() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.MeterReferenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeterReference' in table 'billAdjustmentRequest' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.MeterReferenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ConnectionDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.ConnectionDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConnectionDate' in table 'billAdjustmentRequest' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.ConnectionDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AcctStatus() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.AcctStatusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AcctStatus' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.AcctStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CanDelete() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.CanDeleteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CanDelete' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.CanDeleteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property isSenior() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.isSeniorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'isSenior' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.isSeniorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property seniorID1() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.seniorID1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seniorID1' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.seniorID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountName() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.AccountNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountName' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.AccountNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property clusterID3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.clusterID3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'clusterID3' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.clusterID3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property brgyID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.brgyID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'brgyID1' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.brgyID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClusterName() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.ClusterNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClusterName' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.ClusterNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property brgyID2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.brgyID2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'brgyID2' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.brgyID2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZoneID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.ZoneID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZoneID1' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.ZoneID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AddBrgy() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.AddBrgyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddBrgy' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.AddBrgyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property brgyCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.brgyCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'brgyCode' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.brgyCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClusterSize() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.ClusterSizeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClusterSize' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.ClusterSizeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property bClass() As String
            Get
                Try 
                    Return CType(Me(Me.tablebillAdjustmentRequest.bClassColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bClass' in table 'billAdjustmentRequest' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablebillAdjustmentRequest.bClassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsacctIDNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.acctIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetacctIDNull()
            Me(Me.tablebillAdjustmentRequest.acctIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclusterIDNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.clusterIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclusterIDNull()
            Me(Me.tablebillAdjustmentRequest.clusterIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsIDNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.consIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsIDNull()
            Me(Me.tablebillAdjustmentRequest.consIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsrequestdateNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.requestdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetrequestdateNull()
            Me(Me.tablebillAdjustmentRequest.requestdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjReasonNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.adjReasonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjReasonNull()
            Me(Me.tablebillAdjustmentRequest.adjReasonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspreparedbyNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.preparedbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpreparedbyNull()
            Me(Me.tablebillAdjustmentRequest.preparedbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsrequestedbyNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.requestedbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetrequestedbyNull()
            Me(Me.tablebillAdjustmentRequest.requestedbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjInspectionNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.adjInspectionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjInspectionNull()
            Me(Me.tablebillAdjustmentRequest.adjInspectionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsincpectedbyNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.incpectedbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetincpectedbyNull()
            Me(Me.tablebillAdjustmentRequest.incpectedbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsapprovedbyNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.approvedbyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetapprovedbyNull()
            Me(Me.tablebillAdjustmentRequest.approvedbyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillIDNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.billIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillIDNull()
            Me(Me.tablebillAdjustmentRequest.billIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillID1Null() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.billID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillID1Null()
            Me(Me.tablebillAdjustmentRequest.billID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsacctID1Null() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.acctID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetacctID1Null()
            Me(Me.tablebillAdjustmentRequest.acctID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsID1Null() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.consID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsID1Null()
            Me(Me.tablebillAdjustmentRequest.consID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclassIDNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.classIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclassIDNull()
            Me(Me.tablebillAdjustmentRequest.classIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdueDateNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.dueDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdueDateNull()
            Me(Me.tablebillAdjustmentRequest.dueDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfromDateNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.fromDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfromDateNull()
            Me(Me.tablebillAdjustmentRequest.fromDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstoDateNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.toDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettoDateNull()
            Me(Me.tablebillAdjustmentRequest.toDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillMonthNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.billMonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillMonthNull()
            Me(Me.tablebillAdjustmentRequest.billMonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillYearNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.billYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillYearNull()
            Me(Me.tablebillAdjustmentRequest.billYearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevReadNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.prevReadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevReadNull()
            Me(Me.tablebillAdjustmentRequest.prevReadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspresReadNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.presReadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpresReadNull()
            Me(Me.tablebillAdjustmentRequest.presReadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevBalNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.prevBalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevBalNull()
            Me(Me.tablebillAdjustmentRequest.prevBalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevConsumpNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.prevConsumpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevConsumpNull()
            Me(Me.tablebillAdjustmentRequest.prevConsumpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevEnvNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.prevEnvColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevEnvNull()
            Me(Me.tablebillAdjustmentRequest.prevEnvColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevAdjNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.prevAdjColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevAdjNull()
            Me(Me.tablebillAdjustmentRequest.prevAdjColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevAdjustedRateNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.prevAdjustedRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevAdjustedRateNull()
            Me(Me.tablebillAdjustmentRequest.prevAdjustedRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevPenaltyNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.prevPenaltyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevPenaltyNull()
            Me(Me.tablebillAdjustmentRequest.prevPenaltyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevAmountDueNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.prevAmountDueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevAmountDueNull()
            Me(Me.tablebillAdjustmentRequest.prevAmountDueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevTotalNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.prevTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevTotalNull()
            Me(Me.tablebillAdjustmentRequest.prevTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsumpNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.consumpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsumpNull()
            Me(Me.tablebillAdjustmentRequest.consumpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsamountNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.amountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetamountNull()
            Me(Me.tablebillAdjustmentRequest.amountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsflatrateNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.flatrateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetflatrateNull()
            Me(Me.tablebillAdjustmentRequest.flatrateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsexcessNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.excessColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetexcessNull()
            Me(Me.tablebillAdjustmentRequest.excessColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjustedNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.adjustedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjustedNull()
            Me(Me.tablebillAdjustmentRequest.adjustedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjustedRateNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.adjustedRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjustedRateNull()
            Me(Me.tablebillAdjustmentRequest.adjustedRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEnviFeeNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.EnviFeeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEnviFeeNull()
            Me(Me.tablebillAdjustmentRequest.EnviFeeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstotalAmountDueNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.totalAmountDueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettotalAmountDueNull()
            Me(Me.tablebillAdjustmentRequest.totalAmountDueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsuseAmountNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.useAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetuseAmountNull()
            Me(Me.tablebillAdjustmentRequest.useAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsuseADueNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.useADueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetuseADueNull()
            Me(Me.tablebillAdjustmentRequest.useADueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspenaltyNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.penaltyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpenaltyNull()
            Me(Me.tablebillAdjustmentRequest.penaltyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmountADueNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.AmountADueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmountADueNull()
            Me(Me.tablebillAdjustmentRequest.AmountADueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsisSCNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.isSCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetisSCNull()
            Me(Me.tablebillAdjustmentRequest.isSCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCDiscountNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.SCDiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCDiscountNull()
            Me(Me.tablebillAdjustmentRequest.SCDiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCPenaltyNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.SCPenaltyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCPenaltyNull()
            Me(Me.tablebillAdjustmentRequest.SCPenaltyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsseqNumNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.seqNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetseqNumNull()
            Me(Me.tablebillAdjustmentRequest.seqNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsisAdjustedNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.isAdjustedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetisAdjustedNull()
            Me(Me.tablebillAdjustmentRequest.isAdjustedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsorigConsumpNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.origConsumpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetorigConsumpNull()
            Me(Me.tablebillAdjustmentRequest.origConsumpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsorigAmountNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.origAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetorigAmountNull()
            Me(Me.tablebillAdjustmentRequest.origAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsorigFlatNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.origFlatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetorigFlatNull()
            Me(Me.tablebillAdjustmentRequest.origFlatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsorigExcessNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.origExcessColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetorigExcessNull()
            Me(Me.tablebillAdjustmentRequest.origExcessColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsorigAdjustedNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.origAdjustedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetorigAdjustedNull()
            Me(Me.tablebillAdjustmentRequest.origAdjustedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsorigAdjustedRateNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.origAdjustedRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetorigAdjustedRateNull()
            Me(Me.tablebillAdjustmentRequest.origAdjustedRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsorigEnviNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.origEnviColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetorigEnviNull()
            Me(Me.tablebillAdjustmentRequest.origEnviColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsorigPenaltyNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.origPenaltyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetorigPenaltyNull()
            Me(Me.tablebillAdjustmentRequest.origPenaltyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsorigTotalPenNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.origTotalPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetorigTotalPenNull()
            Me(Me.tablebillAdjustmentRequest.origTotalPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsorigSCDisNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.origSCDisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetorigSCDisNull()
            Me(Me.tablebillAdjustmentRequest.origSCDisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsorigSCPenNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.origSCPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetorigSCPenNull()
            Me(Me.tablebillAdjustmentRequest.origSCPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjReason1Null() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.adjReason1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjReason1Null()
            Me(Me.tablebillAdjustmentRequest.adjReason1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjPrepNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.adjPrepColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjPrepNull()
            Me(Me.tablebillAdjustmentRequest.adjPrepColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjDateNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.adjDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjDateNull()
            Me(Me.tablebillAdjustmentRequest.adjDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjApprovNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.adjApprovColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjApprovNull()
            Me(Me.tablebillAdjustmentRequest.adjApprovColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjRemarkNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.adjRemarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjRemarkNull()
            Me(Me.tablebillAdjustmentRequest.adjRemarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjApprovStatNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.adjApprovStatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjApprovStatNull()
            Me(Me.tablebillAdjustmentRequest.adjApprovStatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillStatNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.billStatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillStatNull()
            Me(Me.tablebillAdjustmentRequest.billStatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORNumPaidNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.ORNumPaidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORNumPaidNull()
            Me(Me.tablebillAdjustmentRequest.ORNumPaidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmountPaidNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.AmountPaidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmountPaidNull()
            Me(Me.tablebillAdjustmentRequest.AmountPaidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMoneyAmountNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.MoneyAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMoneyAmountNull()
            Me(Me.tablebillAdjustmentRequest.MoneyAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmChangeNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.mChangeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmChangeNull()
            Me(Me.tablebillAdjustmentRequest.mChangeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmetReadIDNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.metReadIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmetReadIDNull()
            Me(Me.tablebillAdjustmentRequest.metReadIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillNoteNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.billNoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillNoteNull()
            Me(Me.tablebillAdjustmentRequest.billNoteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsuIDNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.uIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetuIDNull()
            Me(Me.tablebillAdjustmentRequest.uIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IszoneIDNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.zoneIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetzoneIDNull()
            Me(Me.tablebillAdjustmentRequest.zoneIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclusterID1Null() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.clusterID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclusterID1Null()
            Me(Me.tablebillAdjustmentRequest.clusterID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillPeriodNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.billPeriodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillPeriodNull()
            Me(Me.tablebillAdjustmentRequest.billPeriodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillDateNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.billDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillDateNull()
            Me(Me.tablebillAdjustmentRequest.billDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFconsumpNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.FconsumpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFconsumpNull()
            Me(Me.tablebillAdjustmentRequest.FconsumpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSConsumpNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.SConsumpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSConsumpNull()
            Me(Me.tablebillAdjustmentRequest.SConsumpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFExcessNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.FExcessColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFExcessNull()
            Me(Me.tablebillAdjustmentRequest.FExcessColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSExcessNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.SExcessColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSExcessNull()
            Me(Me.tablebillAdjustmentRequest.SExcessColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFLabelNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.FLabelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFLabelNull()
            Me(Me.tablebillAdjustmentRequest.FLabelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSLabelNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.SLabelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSLabelNull()
            Me(Me.tablebillAdjustmentRequest.SLabelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsreadDateNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.readDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetreadDateNull()
            Me(Me.tablebillAdjustmentRequest.readDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjConsumpNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.adjConsumpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjConsumpNull()
            Me(Me.tablebillAdjustmentRequest.adjConsumpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsminConsumpNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.minConsumpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetminConsumpNull()
            Me(Me.tablebillAdjustmentRequest.minConsumpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFratepercubNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.FratepercubColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFratepercubNull()
            Me(Me.tablebillAdjustmentRequest.FratepercubColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSRatepercubNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.SRatepercubColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSRatepercubNull()
            Me(Me.tablebillAdjustmentRequest.SRatepercubColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevSCDisNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.prevSCDisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevSCDisNull()
            Me(Me.tablebillAdjustmentRequest.prevSCDisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspaymentDateNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.paymentDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpaymentDateNull()
            Me(Me.tablebillAdjustmentRequest.paymentDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillNoNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.billNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillNoNull()
            Me(Me.tablebillAdjustmentRequest.billNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSCRateNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.SCRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSCRateNull()
            Me(Me.tablebillAdjustmentRequest.SCRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjApprovDateNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.adjApprovDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjApprovDateNull()
            Me(Me.tablebillAdjustmentRequest.adjApprovDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevOutstandingNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.prevOutstandingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevOutstandingNull()
            Me(Me.tablebillAdjustmentRequest.prevOutstandingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevOutstandingStatNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.prevOutstandingStatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevOutstandingStatNull()
            Me(Me.tablebillAdjustmentRequest.prevOutstandingStatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevOutstandingORNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.prevOutstandingORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevOutstandingORNull()
            Me(Me.tablebillAdjustmentRequest.prevOutstandingORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevOutstandingDurationNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.prevOutstandingDurationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevOutstandingDurationNull()
            Me(Me.tablebillAdjustmentRequest.prevOutstandingDurationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBaseRateNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.BaseRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBaseRateNull()
            Me(Me.tablebillAdjustmentRequest.BaseRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsID2Null() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.consID2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsID2Null()
            Me(Me.tablebillAdjustmentRequest.consID2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConsumerNameNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.ConsumerNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConsumerNameNull()
            Me(Me.tablebillAdjustmentRequest.ConsumerNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscAddressNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.cAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcAddressNull()
            Me(Me.tablebillAdjustmentRequest.cAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscontactNumNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.contactNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcontactNumNull()
            Me(Me.tablebillAdjustmentRequest.contactNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsisSC1Null() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.isSC1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetisSC1Null()
            Me(Me.tablebillAdjustmentRequest.isSC1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsseniorIDNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.seniorIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetseniorIDNull()
            Me(Me.tablebillAdjustmentRequest.seniorIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsagencyNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.agencyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetagencyNull()
            Me(Me.tablebillAdjustmentRequest.agencyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsacctID2Null() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.acctID2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetacctID2Null()
            Me(Me.tablebillAdjustmentRequest.acctID2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsID3Null() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.consID3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsID3Null()
            Me(Me.tablebillAdjustmentRequest.consID3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclassID1Null() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.classID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclassID1Null()
            Me(Me.tablebillAdjustmentRequest.classID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbrgyIDNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.brgyIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbrgyIDNull()
            Me(Me.tablebillAdjustmentRequest.brgyIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclusterID2Null() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.clusterID2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclusterID2Null()
            Me(Me.tablebillAdjustmentRequest.clusterID2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSequenceNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.SequenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSequenceNull()
            Me(Me.tablebillAdjustmentRequest.SequenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountNoNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.AccountNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountNoNull()
            Me(Me.tablebillAdjustmentRequest.AccountNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsreceiptNoNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.receiptNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetreceiptNoNull()
            Me(Me.tablebillAdjustmentRequest.receiptNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStreetAddressNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.StreetAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStreetAddressNull()
            Me(Me.tablebillAdjustmentRequest.StreetAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeterNoNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.MeterNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeterNoNull()
            Me(Me.tablebillAdjustmentRequest.MeterNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeterBrandNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.MeterBrandColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeterBrandNull()
            Me(Me.tablebillAdjustmentRequest.MeterBrandColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeterSizeNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.MeterSizeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeterSizeNull()
            Me(Me.tablebillAdjustmentRequest.MeterSizeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeterReferenceNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.MeterReferenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeterReferenceNull()
            Me(Me.tablebillAdjustmentRequest.MeterReferenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConnectionDateNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.ConnectionDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConnectionDateNull()
            Me(Me.tablebillAdjustmentRequest.ConnectionDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAcctStatusNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.AcctStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAcctStatusNull()
            Me(Me.tablebillAdjustmentRequest.AcctStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCanDeleteNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.CanDeleteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCanDeleteNull()
            Me(Me.tablebillAdjustmentRequest.CanDeleteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsisSeniorNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.isSeniorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetisSeniorNull()
            Me(Me.tablebillAdjustmentRequest.isSeniorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsseniorID1Null() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.seniorID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetseniorID1Null()
            Me(Me.tablebillAdjustmentRequest.seniorID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountNameNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.AccountNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountNameNull()
            Me(Me.tablebillAdjustmentRequest.AccountNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclusterID3Null() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.clusterID3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclusterID3Null()
            Me(Me.tablebillAdjustmentRequest.clusterID3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbrgyID1Null() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.brgyID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbrgyID1Null()
            Me(Me.tablebillAdjustmentRequest.brgyID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClusterNameNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.ClusterNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClusterNameNull()
            Me(Me.tablebillAdjustmentRequest.ClusterNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbrgyID2Null() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.brgyID2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbrgyID2Null()
            Me(Me.tablebillAdjustmentRequest.brgyID2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZoneID1Null() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.ZoneID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZoneID1Null()
            Me(Me.tablebillAdjustmentRequest.ZoneID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAddBrgyNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.AddBrgyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAddBrgyNull()
            Me(Me.tablebillAdjustmentRequest.AddBrgyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbrgyCodeNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.brgyCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbrgyCodeNull()
            Me(Me.tablebillAdjustmentRequest.brgyCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClusterSizeNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.ClusterSizeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClusterSizeNull()
            Me(Me.tablebillAdjustmentRequest.ClusterSizeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbClassNull() As Boolean
            Return Me.IsNull(Me.tablebillAdjustmentRequest.bClassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbClassNull()
            Me(Me.tablebillAdjustmentRequest.bClassColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DailyCollectionRow
        Inherits Global.System.Data.DataRow
        
        Private tableDailyCollection As DailyCollectionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDailyCollection = CType(Me.Table,DailyCollectionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property orID() As Integer
            Get
                Return CType(Me(Me.tableDailyCollection.orIDColumn),Integer)
            End Get
            Set
                Me(Me.tableDailyCollection.orIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORNum() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.ORNumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORNum' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.ORNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totalPayment() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.totalPaymentColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'totalPayment' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.totalPaymentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pType() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.pTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pType' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.pTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property draweeBank() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.draweeBankColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'draweeBank' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.draweeBankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property draweenum() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.draweenumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'draweenum' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.draweenumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property draweedate() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.draweedateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'draweedate' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.draweedateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amountinwords() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.amountinwordsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amountinwords' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.amountinwordsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amountinwords2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.amountinwords2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amountinwords2' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.amountinwords2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property uID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.uIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'uID' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.uIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.pDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pDate' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.pDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.consIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consID' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.consIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property seniorRmk() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.seniorRmkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seniorRmk' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.seniorRmkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property seniorID() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.seniorIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seniorID' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.seniorIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totalDiscount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.totalDiscountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'totalDiscount' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.totalDiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nature1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.nature1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nature1' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.nature1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nature2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.nature2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nature2' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.nature2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nature3() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.nature3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nature3' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.nature3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nature4() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.nature4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nature4' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.nature4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nature5() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.nature5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nature5' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.nature5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nature6() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.nature6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nature6' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.nature6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nature7() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.nature7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nature7' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.nature7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nature8() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.nature8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nature8' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.nature8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property code1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.code1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code1' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.code1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property code2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.code2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code2' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.code2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property code3() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.code3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code3' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.code3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property code4() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.code4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code4' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.code4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property code5() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.code5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code5' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.code5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property code6() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.code6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code6' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.code6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property code7() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.code7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code7' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.code7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property code8() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.code8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'code8' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.code8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.amount1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount1' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.amount1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.amount2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount2' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.amount2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount3() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.amount3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount3' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.amount3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount4() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.amount4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount4' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.amount4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount5() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.amount5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount5' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.amount5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount6() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.amount6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount6' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.amount6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount7() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.amount7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount7' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.amount7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount8() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.amount8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount8' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.amount8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property collectorname() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.collectornameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'collectorname' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.collectornameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property cashCheck() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.cashCheckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cashCheck' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.cashCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property checkCheck() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.checkCheckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'checkCheck' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.checkCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MoneyOrderCheck() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.MoneyOrderCheckColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MoneyOrderCheck' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.MoneyOrderCheckColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property moneyordernum() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.moneyordernumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'moneyordernum' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.moneyordernumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property moneyorderdate() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.moneyorderdateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'moneyorderdate' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.moneyorderdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property orRemark() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.orRemarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'orRemark' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.orRemarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.consID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consID1' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.consID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ConsumerName() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.ConsumerNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConsumerName' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.ConsumerNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property cAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.cAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cAddress' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.cAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contactNum() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.contactNumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'contactNum' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.contactNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property isSC() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.isSCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'isSC' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.isSCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property seniorID1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.seniorID1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seniorID1' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.seniorID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property agency() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.agencyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'agency' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.agencyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property gender() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.genderColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'gender' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.genderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property penaltyAmt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.penaltyAmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'penaltyAmt' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.penaltyAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.billAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billAmount' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.billAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adjustmentAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.adjustmentAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adjustmentAmount' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.adjustmentAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _PenaltyAmt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection._PenaltyAmtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PenaltyAmt' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection._PenaltyAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EFAmt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.EFAmtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EFAmt' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.EFAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ApplicationFee() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.ApplicationFeeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ApplicationFee' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.ApplicationFeeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReconnectionFee() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.ReconnectionFeeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReconnectionFee' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.ReconnectionFeeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TransferFee() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.TransferFeeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransferFee' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.TransferFeeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ogID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.ogIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ogID' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.ogIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property overpayment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.overpaymentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'overpayment' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.overpaymentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acctID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.acctIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'acctID' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.acctIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acctID1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.acctID1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'acctID1' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.acctID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consID2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.consID2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consID2' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.consID2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property classID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.classIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'classID' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.classIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property brgyID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.brgyIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'brgyID' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.brgyIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property clusterID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.clusterIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'clusterID' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.clusterIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sequence() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.SequenceColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sequence' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.SequenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.AccountNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountNo' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.AccountNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property receiptNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.receiptNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'receiptNo' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.receiptNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StreetAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.StreetAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StreetAddress' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.StreetAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeterNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.MeterNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeterNo' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.MeterNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeterBrand() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.MeterBrandColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeterBrand' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.MeterBrandColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeterSize() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.MeterSizeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeterSize' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.MeterSizeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeterReference() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.MeterReferenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeterReference' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.MeterReferenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ConnectionDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.ConnectionDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConnectionDate' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.ConnectionDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AcctStatus() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.AcctStatusColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AcctStatus' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.AcctStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CanDelete() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.CanDeleteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CanDelete' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.CanDeleteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property isSenior() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.isSeniorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'isSenior' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.isSeniorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property seniorID2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.seniorID2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seniorID2' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.seniorID2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountName() As String
            Get
                Try 
                    Return CType(Me(Me.tableDailyCollection.AccountNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountName' in table 'DailyCollection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDailyCollection.AccountNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORNumNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.ORNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORNumNull()
            Me(Me.tableDailyCollection.ORNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstotalPaymentNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.totalPaymentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettotalPaymentNull()
            Me(Me.tableDailyCollection.totalPaymentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspTypeNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.pTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpTypeNull()
            Me(Me.tableDailyCollection.pTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdraweeBankNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.draweeBankColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdraweeBankNull()
            Me(Me.tableDailyCollection.draweeBankColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdraweenumNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.draweenumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdraweenumNull()
            Me(Me.tableDailyCollection.draweenumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdraweedateNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.draweedateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdraweedateNull()
            Me(Me.tableDailyCollection.draweedateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsamountinwordsNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.amountinwordsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetamountinwordsNull()
            Me(Me.tableDailyCollection.amountinwordsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamountinwords2Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.amountinwords2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamountinwords2Null()
            Me(Me.tableDailyCollection.amountinwords2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsuIDNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.uIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetuIDNull()
            Me(Me.tableDailyCollection.uIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspDateNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.pDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpDateNull()
            Me(Me.tableDailyCollection.pDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsIDNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.consIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsIDNull()
            Me(Me.tableDailyCollection.consIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsseniorRmkNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.seniorRmkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetseniorRmkNull()
            Me(Me.tableDailyCollection.seniorRmkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsseniorIDNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.seniorIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetseniorIDNull()
            Me(Me.tableDailyCollection.seniorIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstotalDiscountNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.totalDiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettotalDiscountNull()
            Me(Me.tableDailyCollection.totalDiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnature1Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.nature1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnature1Null()
            Me(Me.tableDailyCollection.nature1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnature2Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.nature2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnature2Null()
            Me(Me.tableDailyCollection.nature2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnature3Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.nature3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnature3Null()
            Me(Me.tableDailyCollection.nature3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnature4Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.nature4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnature4Null()
            Me(Me.tableDailyCollection.nature4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnature5Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.nature5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnature5Null()
            Me(Me.tableDailyCollection.nature5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnature6Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.nature6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnature6Null()
            Me(Me.tableDailyCollection.nature6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnature7Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.nature7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnature7Null()
            Me(Me.tableDailyCollection.nature7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnature8Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.nature8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnature8Null()
            Me(Me.tableDailyCollection.nature8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscode1Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.code1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcode1Null()
            Me(Me.tableDailyCollection.code1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscode2Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.code2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcode2Null()
            Me(Me.tableDailyCollection.code2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscode3Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.code3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcode3Null()
            Me(Me.tableDailyCollection.code3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscode4Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.code4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcode4Null()
            Me(Me.tableDailyCollection.code4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscode5Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.code5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcode5Null()
            Me(Me.tableDailyCollection.code5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscode6Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.code6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcode6Null()
            Me(Me.tableDailyCollection.code6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscode7Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.code7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcode7Null()
            Me(Me.tableDailyCollection.code7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Iscode8Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.code8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setcode8Null()
            Me(Me.tableDailyCollection.code8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount1Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.amount1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount1Null()
            Me(Me.tableDailyCollection.amount1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount2Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.amount2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount2Null()
            Me(Me.tableDailyCollection.amount2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount3Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.amount3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount3Null()
            Me(Me.tableDailyCollection.amount3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount4Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.amount4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount4Null()
            Me(Me.tableDailyCollection.amount4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount5Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.amount5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount5Null()
            Me(Me.tableDailyCollection.amount5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount6Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.amount6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount6Null()
            Me(Me.tableDailyCollection.amount6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount7Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.amount7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount7Null()
            Me(Me.tableDailyCollection.amount7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount8Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.amount8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount8Null()
            Me(Me.tableDailyCollection.amount8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscollectornameNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.collectornameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcollectornameNull()
            Me(Me.tableDailyCollection.collectornameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscashCheckNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.cashCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcashCheckNull()
            Me(Me.tableDailyCollection.cashCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscheckCheckNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.checkCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcheckCheckNull()
            Me(Me.tableDailyCollection.checkCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMoneyOrderCheckNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.MoneyOrderCheckColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMoneyOrderCheckNull()
            Me(Me.tableDailyCollection.MoneyOrderCheckColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmoneyordernumNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.moneyordernumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmoneyordernumNull()
            Me(Me.tableDailyCollection.moneyordernumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmoneyorderdateNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.moneyorderdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmoneyorderdateNull()
            Me(Me.tableDailyCollection.moneyorderdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsorRemarkNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.orRemarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetorRemarkNull()
            Me(Me.tableDailyCollection.orRemarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsID1Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.consID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsID1Null()
            Me(Me.tableDailyCollection.consID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConsumerNameNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.ConsumerNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConsumerNameNull()
            Me(Me.tableDailyCollection.ConsumerNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscAddressNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.cAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcAddressNull()
            Me(Me.tableDailyCollection.cAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscontactNumNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.contactNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcontactNumNull()
            Me(Me.tableDailyCollection.contactNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsisSCNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.isSCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetisSCNull()
            Me(Me.tableDailyCollection.isSCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsseniorID1Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.seniorID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetseniorID1Null()
            Me(Me.tableDailyCollection.seniorID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsagencyNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.agencyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetagencyNull()
            Me(Me.tableDailyCollection.agencyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsgenderNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.genderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetgenderNull()
            Me(Me.tableDailyCollection.genderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspenaltyAmtNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.penaltyAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpenaltyAmtNull()
            Me(Me.tableDailyCollection.penaltyAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillAmountNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.billAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillAmountNull()
            Me(Me.tableDailyCollection.billAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadjustmentAmountNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.adjustmentAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadjustmentAmountNull()
            Me(Me.tableDailyCollection.adjustmentAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_PenaltyAmtNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection._PenaltyAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_PenaltyAmtNull()
            Me(Me.tableDailyCollection._PenaltyAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEFAmtNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.EFAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEFAmtNull()
            Me(Me.tableDailyCollection.EFAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsApplicationFeeNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.ApplicationFeeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetApplicationFeeNull()
            Me(Me.tableDailyCollection.ApplicationFeeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReconnectionFeeNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.ReconnectionFeeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReconnectionFeeNull()
            Me(Me.tableDailyCollection.ReconnectionFeeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTransferFeeNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.TransferFeeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTransferFeeNull()
            Me(Me.tableDailyCollection.TransferFeeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsogIDNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.ogIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetogIDNull()
            Me(Me.tableDailyCollection.ogIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsoverpaymentNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.overpaymentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetoverpaymentNull()
            Me(Me.tableDailyCollection.overpaymentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsacctIDNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.acctIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetacctIDNull()
            Me(Me.tableDailyCollection.acctIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsacctID1Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.acctID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetacctID1Null()
            Me(Me.tableDailyCollection.acctID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsID2Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.consID2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsID2Null()
            Me(Me.tableDailyCollection.consID2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclassIDNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.classIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclassIDNull()
            Me(Me.tableDailyCollection.classIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbrgyIDNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.brgyIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbrgyIDNull()
            Me(Me.tableDailyCollection.brgyIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclusterIDNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.clusterIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclusterIDNull()
            Me(Me.tableDailyCollection.clusterIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSequenceNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.SequenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSequenceNull()
            Me(Me.tableDailyCollection.SequenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountNoNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.AccountNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountNoNull()
            Me(Me.tableDailyCollection.AccountNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsreceiptNoNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.receiptNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetreceiptNoNull()
            Me(Me.tableDailyCollection.receiptNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStreetAddressNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.StreetAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStreetAddressNull()
            Me(Me.tableDailyCollection.StreetAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeterNoNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.MeterNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeterNoNull()
            Me(Me.tableDailyCollection.MeterNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeterBrandNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.MeterBrandColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeterBrandNull()
            Me(Me.tableDailyCollection.MeterBrandColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeterSizeNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.MeterSizeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeterSizeNull()
            Me(Me.tableDailyCollection.MeterSizeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeterReferenceNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.MeterReferenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeterReferenceNull()
            Me(Me.tableDailyCollection.MeterReferenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConnectionDateNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.ConnectionDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConnectionDateNull()
            Me(Me.tableDailyCollection.ConnectionDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAcctStatusNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.AcctStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAcctStatusNull()
            Me(Me.tableDailyCollection.AcctStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCanDeleteNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.CanDeleteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCanDeleteNull()
            Me(Me.tableDailyCollection.CanDeleteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsisSeniorNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.isSeniorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetisSeniorNull()
            Me(Me.tableDailyCollection.isSeniorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsseniorID2Null() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.seniorID2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetseniorID2Null()
            Me(Me.tableDailyCollection.seniorID2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountNameNull() As Boolean
            Return Me.IsNull(Me.tableDailyCollection.AccountNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountNameNull()
            Me(Me.tableDailyCollection.AccountNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ReaderListRow
        Inherits Global.System.Data.DataRow
        
        Private tableReaderList As ReaderListDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableReaderList = CType(Me.Table,ReaderListDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableReaderList.AccountNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountNo' in table 'ReaderList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReaderList.AccountNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountName() As String
            Get
                Try 
                    Return CType(Me(Me.tableReaderList.AccountNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountName' in table 'ReaderList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReaderList.AccountNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StreetAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableReaderList.StreetAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StreetAddress' in table 'ReaderList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReaderList.StreetAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AddBrgy() As String
            Get
                Try 
                    Return CType(Me(Me.tableReaderList.AddBrgyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddBrgy' in table 'ReaderList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReaderList.AddBrgyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property meterno() As String
            Get
                Try 
                    Return CType(Me(Me.tableReaderList.meternoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'meterno' in table 'ReaderList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReaderList.meternoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ConnectionDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableReaderList.ConnectionDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConnectionDate' in table 'ReaderList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReaderList.ConnectionDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StatusName() As String
            Get
                Try 
                    Return CType(Me(Me.tableReaderList.StatusNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StatusName' in table 'ReaderList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReaderList.StatusNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeterReference() As String
            Get
                Try 
                    Return CType(Me(Me.tableReaderList.MeterReferenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeterReference' in table 'ReaderList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReaderList.MeterReferenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AcctID() As Integer
            Get
                Return CType(Me(Me.tableReaderList.AcctIDColumn),Integer)
            End Get
            Set
                Me(Me.tableReaderList.AcctIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sequence() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableReaderList.sequenceColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sequence' in table 'ReaderList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReaderList.sequenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountNoNull() As Boolean
            Return Me.IsNull(Me.tableReaderList.AccountNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountNoNull()
            Me(Me.tableReaderList.AccountNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountNameNull() As Boolean
            Return Me.IsNull(Me.tableReaderList.AccountNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountNameNull()
            Me(Me.tableReaderList.AccountNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStreetAddressNull() As Boolean
            Return Me.IsNull(Me.tableReaderList.StreetAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStreetAddressNull()
            Me(Me.tableReaderList.StreetAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAddBrgyNull() As Boolean
            Return Me.IsNull(Me.tableReaderList.AddBrgyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAddBrgyNull()
            Me(Me.tableReaderList.AddBrgyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmeternoNull() As Boolean
            Return Me.IsNull(Me.tableReaderList.meternoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmeternoNull()
            Me(Me.tableReaderList.meternoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConnectionDateNull() As Boolean
            Return Me.IsNull(Me.tableReaderList.ConnectionDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConnectionDateNull()
            Me(Me.tableReaderList.ConnectionDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStatusNameNull() As Boolean
            Return Me.IsNull(Me.tableReaderList.StatusNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStatusNameNull()
            Me(Me.tableReaderList.StatusNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeterReferenceNull() As Boolean
            Return Me.IsNull(Me.tableReaderList.MeterReferenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeterReferenceNull()
            Me(Me.tableReaderList.MeterReferenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssequenceNull() As Boolean
            Return Me.IsNull(Me.tableReaderList.sequenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsequenceNull()
            Me(Me.tableReaderList.sequenceColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MonthlyReportRow
        Inherits Global.System.Data.DataRow
        
        Private tableMonthlyReport As MonthlyReportDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMonthlyReport = CType(Me.Table,MonthlyReportDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BillAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.BillAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BillAmount' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.BillAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BillConnectionFee() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.BillConnectionFeeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BillConnectionFee' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.BillConnectionFeeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BillPenalty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.BillPenaltyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BillPenalty' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.BillPenaltyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BillDiscount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.BillDiscountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BillDiscount' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.BillDiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BillEF() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.BillEFColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BillEF' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.BillEFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billRevenue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.billRevenueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billRevenue' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.billRevenueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.ColAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColAmount' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.ColAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColConnection() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.ColConnectionColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColConnection' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.ColConnectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColPenalty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.ColPenaltyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColPenalty' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.ColPenaltyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColEF() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.ColEFColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColEF' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.ColEFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColDiscount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.ColDiscountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColDiscount' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.ColDiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColRecon() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.ColReconColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColRecon' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.ColReconColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColTMeter() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.ColTMeterColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColTMeter' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.ColTMeterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColTOwner() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.ColTOwnerColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColTOwner' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.ColTOwnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CashReceipts() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.CashReceiptsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CashReceipts' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.CashReceiptsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CollectionEff() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.CollectionEffColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CollectionEff' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.CollectionEffColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AveWaterConsump() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.AveWaterConsumpColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AveWaterConsump' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.AveWaterConsumpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AveBillAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.AveBillAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AveBillAmount' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.AveBillAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AveBillPenalty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.AveBillPenaltyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AveBillPenalty' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.AveBillPenaltyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RevGrowth() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.RevGrowthColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RevGrowth' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.RevGrowthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GrandTotalRev() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.GrandTotalRevColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GrandTotalRev' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.GrandTotalRevColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GrandTotalEF() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.GrandTotalEFColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GrandTotalEF' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.GrandTotalEFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GrandTotalCollection() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.GrandTotalCollectionColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GrandTotalCollection' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.GrandTotalCollectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReportMonth() As String
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.ReportMonthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReportMonth' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.ReportMonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReportYear() As Short
            Get
                Try 
                    Return CType(Me(Me.tableMonthlyReport.ReportYearColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReportYear' in table 'MonthlyReport' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMonthlyReport.ReportYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBillAmountNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.BillAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBillAmountNull()
            Me(Me.tableMonthlyReport.BillAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBillConnectionFeeNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.BillConnectionFeeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBillConnectionFeeNull()
            Me(Me.tableMonthlyReport.BillConnectionFeeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBillPenaltyNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.BillPenaltyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBillPenaltyNull()
            Me(Me.tableMonthlyReport.BillPenaltyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBillDiscountNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.BillDiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBillDiscountNull()
            Me(Me.tableMonthlyReport.BillDiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBillEFNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.BillEFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBillEFNull()
            Me(Me.tableMonthlyReport.BillEFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillRevenueNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.billRevenueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillRevenueNull()
            Me(Me.tableMonthlyReport.billRevenueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColAmountNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.ColAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColAmountNull()
            Me(Me.tableMonthlyReport.ColAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColConnectionNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.ColConnectionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColConnectionNull()
            Me(Me.tableMonthlyReport.ColConnectionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColPenaltyNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.ColPenaltyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColPenaltyNull()
            Me(Me.tableMonthlyReport.ColPenaltyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColEFNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.ColEFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColEFNull()
            Me(Me.tableMonthlyReport.ColEFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColDiscountNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.ColDiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColDiscountNull()
            Me(Me.tableMonthlyReport.ColDiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColReconNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.ColReconColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColReconNull()
            Me(Me.tableMonthlyReport.ColReconColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColTMeterNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.ColTMeterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColTMeterNull()
            Me(Me.tableMonthlyReport.ColTMeterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColTOwnerNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.ColTOwnerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColTOwnerNull()
            Me(Me.tableMonthlyReport.ColTOwnerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCashReceiptsNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.CashReceiptsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCashReceiptsNull()
            Me(Me.tableMonthlyReport.CashReceiptsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCollectionEffNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.CollectionEffColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCollectionEffNull()
            Me(Me.tableMonthlyReport.CollectionEffColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAveWaterConsumpNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.AveWaterConsumpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAveWaterConsumpNull()
            Me(Me.tableMonthlyReport.AveWaterConsumpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAveBillAmountNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.AveBillAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAveBillAmountNull()
            Me(Me.tableMonthlyReport.AveBillAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAveBillPenaltyNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.AveBillPenaltyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAveBillPenaltyNull()
            Me(Me.tableMonthlyReport.AveBillPenaltyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRevGrowthNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.RevGrowthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRevGrowthNull()
            Me(Me.tableMonthlyReport.RevGrowthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGrandTotalRevNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.GrandTotalRevColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGrandTotalRevNull()
            Me(Me.tableMonthlyReport.GrandTotalRevColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGrandTotalEFNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.GrandTotalEFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGrandTotalEFNull()
            Me(Me.tableMonthlyReport.GrandTotalEFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGrandTotalCollectionNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.GrandTotalCollectionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGrandTotalCollectionNull()
            Me(Me.tableMonthlyReport.GrandTotalCollectionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReportMonthNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.ReportMonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReportMonthNull()
            Me(Me.tableMonthlyReport.ReportMonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReportYearNull() As Boolean
            Return Me.IsNull(Me.tableMonthlyReport.ReportYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReportYearNull()
            Me(Me.tableMonthlyReport.ReportYearColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BillingStatementRow
        Inherits Global.System.Data.DataRow
        
        Private tableBillingStatement As BillingStatementDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBillingStatement = CType(Me.Table,BillingStatementDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.billIDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billID' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.billIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acctID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.acctIDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'acctID' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.acctIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.consIDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consID' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.consIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property classID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.classIDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'classID' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.classIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property zoneID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.zoneIDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zoneID' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.zoneIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property brgyID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.brgyIDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'brgyID' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.brgyIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property clusterID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.clusterIDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'clusterID' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.clusterIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property addmunID() As Long
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.addmunIDColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'addmunID' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.addmunIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property municipality() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.municipalityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'municipality' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.municipalityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property addbrgy() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.addbrgyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'addbrgy' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.addbrgyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property clustername() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.clusternameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'clustername' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.clusternameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property streetaddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.streetaddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'streetaddress' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.streetaddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property accountname() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.accountnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'accountname' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.accountnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property contactnum() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.contactnumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'contactnum' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.contactnumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property accountno() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.accountnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'accountno' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.accountnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property meterno() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.meternoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'meterno' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.meternoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billmonth() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.billmonthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billmonth' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.billmonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billyear() As Short
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.billyearColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billyear' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.billyearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billperiod() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.billperiodColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billperiod' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.billperiodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property duedate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.duedateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'duedate' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.duedateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevread() As Short
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.prevreadColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevread' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.prevreadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property presread() As Short
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.presreadColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'presread' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.presreadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property consump() As Short
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.consumpColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consump' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.consumpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.amountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.amountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property envifee() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.envifeeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'envifee' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.envifeeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property issc() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.isscColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'issc' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.isscColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property scdiscount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.scdiscountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'scdiscount' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.scdiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevamountdue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.prevamountdueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevamountdue' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.prevamountdueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevpenalty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.prevpenaltyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevpenalty' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.prevpenaltyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevtotal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.prevtotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevtotal' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.prevtotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property applicationfee() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.applicationfeeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'applicationfee' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.applicationfeeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property penalty() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.penaltyColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'penalty' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.penaltyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billnote() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.billnoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billnote' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.billnoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property readDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.readDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'readDate' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.readDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fromDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.fromDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fromDate' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.fromDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property toDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.toDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'toDate' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.toDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property overpayment() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.overpaymentColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'overpayment' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.overpaymentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property useAmount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.useAmountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'useAmount' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.useAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property useADue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.useADueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'useADue' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.useADueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.billDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billDate' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.billDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property standpipe() As String
            Get
                Try 
                    Return CType(Me(Me.tableBillingStatement.standpipeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'standpipe' in table 'BillingStatement' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBillingStatement.standpipeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillIDNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.billIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillIDNull()
            Me(Me.tableBillingStatement.billIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsacctIDNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.acctIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetacctIDNull()
            Me(Me.tableBillingStatement.acctIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsIDNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.consIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsIDNull()
            Me(Me.tableBillingStatement.consIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclassIDNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.classIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclassIDNull()
            Me(Me.tableBillingStatement.classIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IszoneIDNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.zoneIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetzoneIDNull()
            Me(Me.tableBillingStatement.zoneIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbrgyIDNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.brgyIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbrgyIDNull()
            Me(Me.tableBillingStatement.brgyIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclusterIDNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.clusterIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclusterIDNull()
            Me(Me.tableBillingStatement.clusterIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaddmunIDNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.addmunIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaddmunIDNull()
            Me(Me.tableBillingStatement.addmunIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmunicipalityNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.municipalityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmunicipalityNull()
            Me(Me.tableBillingStatement.municipalityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaddbrgyNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.addbrgyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaddbrgyNull()
            Me(Me.tableBillingStatement.addbrgyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclusternameNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.clusternameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclusternameNull()
            Me(Me.tableBillingStatement.clusternameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsstreetaddressNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.streetaddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetstreetaddressNull()
            Me(Me.tableBillingStatement.streetaddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaccountnameNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.accountnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaccountnameNull()
            Me(Me.tableBillingStatement.accountnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscontactnumNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.contactnumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcontactnumNull()
            Me(Me.tableBillingStatement.contactnumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaccountnoNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.accountnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaccountnoNull()
            Me(Me.tableBillingStatement.accountnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmeternoNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.meternoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmeternoNull()
            Me(Me.tableBillingStatement.meternoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillmonthNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.billmonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillmonthNull()
            Me(Me.tableBillingStatement.billmonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillyearNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.billyearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillyearNull()
            Me(Me.tableBillingStatement.billyearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillperiodNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.billperiodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillperiodNull()
            Me(Me.tableBillingStatement.billperiodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsduedateNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.duedateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetduedateNull()
            Me(Me.tableBillingStatement.duedateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevreadNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.prevreadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevreadNull()
            Me(Me.tableBillingStatement.prevreadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspresreadNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.presreadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpresreadNull()
            Me(Me.tableBillingStatement.presreadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsconsumpNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.consumpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetconsumpNull()
            Me(Me.tableBillingStatement.consumpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsamountNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.amountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetamountNull()
            Me(Me.tableBillingStatement.amountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsenvifeeNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.envifeeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetenvifeeNull()
            Me(Me.tableBillingStatement.envifeeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsisscNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.isscColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetisscNull()
            Me(Me.tableBillingStatement.isscColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsscdiscountNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.scdiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetscdiscountNull()
            Me(Me.tableBillingStatement.scdiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevamountdueNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.prevamountdueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevamountdueNull()
            Me(Me.tableBillingStatement.prevamountdueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevpenaltyNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.prevpenaltyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevpenaltyNull()
            Me(Me.tableBillingStatement.prevpenaltyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevtotalNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.prevtotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevtotalNull()
            Me(Me.tableBillingStatement.prevtotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsapplicationfeeNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.applicationfeeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetapplicationfeeNull()
            Me(Me.tableBillingStatement.applicationfeeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspenaltyNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.penaltyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpenaltyNull()
            Me(Me.tableBillingStatement.penaltyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillnoteNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.billnoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillnoteNull()
            Me(Me.tableBillingStatement.billnoteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsreadDateNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.readDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetreadDateNull()
            Me(Me.tableBillingStatement.readDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfromDateNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.fromDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfromDateNull()
            Me(Me.tableBillingStatement.fromDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstoDateNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.toDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettoDateNull()
            Me(Me.tableBillingStatement.toDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsoverpaymentNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.overpaymentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetoverpaymentNull()
            Me(Me.tableBillingStatement.overpaymentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsuseAmountNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.useAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetuseAmountNull()
            Me(Me.tableBillingStatement.useAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsuseADueNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.useADueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetuseADueNull()
            Me(Me.tableBillingStatement.useADueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillDateNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.billDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillDateNull()
            Me(Me.tableBillingStatement.billDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsstandpipeNull() As Boolean
            Return Me.IsNull(Me.tableBillingStatement.standpipeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetstandpipeNull()
            Me(Me.tableBillingStatement.standpipeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ReadingListRow
        Inherits Global.System.Data.DataRow
        
        Private tableReadingList As ReadingListDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableReadingList = CType(Me.Table,ReadingListDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AcctID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableReadingList.AcctIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AcctID' in table 'ReadingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReadingList.AcctIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sequence() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableReadingList.SequenceColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sequence' in table 'ReadingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReadingList.SequenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableReadingList.AccountNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountNo' in table 'ReadingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReadingList.AccountNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountName() As String
            Get
                Try 
                    Return CType(Me(Me.tableReadingList.AccountNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountName' in table 'ReadingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReadingList.AccountNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StreetAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableReadingList.StreetAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StreetAddress' in table 'ReadingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReadingList.StreetAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AddBrgy() As String
            Get
                Try 
                    Return CType(Me(Me.tableReadingList.AddBrgyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddBrgy' in table 'ReadingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReadingList.AddBrgyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property meterNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableReadingList.meterNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'meterNo' in table 'ReadingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReadingList.meterNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ConnectionDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableReadingList.ConnectionDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConnectionDate' in table 'ReadingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReadingList.ConnectionDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StatusName() As String
            Get
                Try 
                    Return CType(Me(Me.tableReadingList.StatusNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StatusName' in table 'ReadingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReadingList.StatusNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeterReference() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableReadingList.MeterReferenceColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeterReference' in table 'ReadingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReadingList.MeterReferenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurrentMonth() As String
            Get
                Try 
                    Return CType(Me(Me.tableReadingList.CurrentMonthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurrentMonth' in table 'ReadingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReadingList.CurrentMonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReadingMonth() As String
            Get
                Try 
                    Return CType(Me(Me.tableReadingList.ReadingMonthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReadingMonth' in table 'ReadingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReadingList.ReadingMonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property standpipe() As String
            Get
                Try 
                    Return CType(Me(Me.tableReadingList.standpipeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'standpipe' in table 'ReadingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReadingList.standpipeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property clusterName() As String
            Get
                Try 
                    Return CType(Me(Me.tableReadingList.clusterNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'clusterName' in table 'ReadingList' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReadingList.clusterNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAcctIDNull() As Boolean
            Return Me.IsNull(Me.tableReadingList.AcctIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAcctIDNull()
            Me(Me.tableReadingList.AcctIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSequenceNull() As Boolean
            Return Me.IsNull(Me.tableReadingList.SequenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSequenceNull()
            Me(Me.tableReadingList.SequenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountNoNull() As Boolean
            Return Me.IsNull(Me.tableReadingList.AccountNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountNoNull()
            Me(Me.tableReadingList.AccountNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountNameNull() As Boolean
            Return Me.IsNull(Me.tableReadingList.AccountNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountNameNull()
            Me(Me.tableReadingList.AccountNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStreetAddressNull() As Boolean
            Return Me.IsNull(Me.tableReadingList.StreetAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStreetAddressNull()
            Me(Me.tableReadingList.StreetAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAddBrgyNull() As Boolean
            Return Me.IsNull(Me.tableReadingList.AddBrgyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAddBrgyNull()
            Me(Me.tableReadingList.AddBrgyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmeterNoNull() As Boolean
            Return Me.IsNull(Me.tableReadingList.meterNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmeterNoNull()
            Me(Me.tableReadingList.meterNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConnectionDateNull() As Boolean
            Return Me.IsNull(Me.tableReadingList.ConnectionDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConnectionDateNull()
            Me(Me.tableReadingList.ConnectionDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStatusNameNull() As Boolean
            Return Me.IsNull(Me.tableReadingList.StatusNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStatusNameNull()
            Me(Me.tableReadingList.StatusNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeterReferenceNull() As Boolean
            Return Me.IsNull(Me.tableReadingList.MeterReferenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeterReferenceNull()
            Me(Me.tableReadingList.MeterReferenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurrentMonthNull() As Boolean
            Return Me.IsNull(Me.tableReadingList.CurrentMonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurrentMonthNull()
            Me(Me.tableReadingList.CurrentMonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReadingMonthNull() As Boolean
            Return Me.IsNull(Me.tableReadingList.ReadingMonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReadingMonthNull()
            Me(Me.tableReadingList.ReadingMonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsstandpipeNull() As Boolean
            Return Me.IsNull(Me.tableReadingList.standpipeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetstandpipeNull()
            Me(Me.tableReadingList.standpipeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclusterNameNull() As Boolean
            Return Me.IsNull(Me.tableReadingList.clusterNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclusterNameNull()
            Me(Me.tableReadingList.clusterNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class StatementOfAccountRow
        Inherits Global.System.Data.DataRow
        
        Private tableStatementOfAccount As StatementOfAccountDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableStatementOfAccount = CType(Me.Table,StatementOfAccountDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Nos() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.NosColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Nos' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.NosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColMonth() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.ColMonthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColMonth' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.ColMonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ColYear() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.ColYearColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ColYear' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.ColYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActualCubic() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.ActualCubicColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActualCubic' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.ActualCubicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActualAmount() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.ActualAmountColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActualAmount' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.ActualAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ComBill() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.ComBillColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ComBill' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.ComBillColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ComPen() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.ComPenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ComPen' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.ComPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ComAmtDue() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.ComAmtDueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ComAmtDue' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.ComAmtDueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Adjustment() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.AdjustmentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Adjustment' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.AdjustmentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Penalty() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.PenaltyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Penalty' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.PenaltyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.AccountNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountNo' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.AccountNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ConsumerName() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.ConsumerNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConsumerName' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.ConsumerNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.CAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAddress' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.CAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JobTitle() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.JobTitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JobTitle' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.JobTitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Company() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.CompanyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Company' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.CompanyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Classification() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.ClassificationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Classification' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.ClassificationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeterNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.MeterNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeterNumber' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.MeterNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalToPay() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.TotalToPayColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalToPay' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.TotalToPayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NotedBy() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.NotedByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NotedBy' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.NotedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TitlOfNotee() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.TitlOfNoteeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TitlOfNotee' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.TitlOfNoteeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Comments() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.CommentsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comments' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.CommentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BillStat() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.BillStatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BillStat' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.BillStatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SOADate() As String
            Get
                Try 
                    Return CType(Me(Me.tableStatementOfAccount.SOADateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SOADate' in table 'StatementOfAccount' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStatementOfAccount.SOADateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNosNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.NosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNosNull()
            Me(Me.tableStatementOfAccount.NosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColMonthNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.ColMonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColMonthNull()
            Me(Me.tableStatementOfAccount.ColMonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsColYearNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.ColYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetColYearNull()
            Me(Me.tableStatementOfAccount.ColYearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsActualCubicNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.ActualCubicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetActualCubicNull()
            Me(Me.tableStatementOfAccount.ActualCubicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsActualAmountNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.ActualAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetActualAmountNull()
            Me(Me.tableStatementOfAccount.ActualAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsComBillNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.ComBillColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetComBillNull()
            Me(Me.tableStatementOfAccount.ComBillColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsComPenNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.ComPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetComPenNull()
            Me(Me.tableStatementOfAccount.ComPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsComAmtDueNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.ComAmtDueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetComAmtDueNull()
            Me(Me.tableStatementOfAccount.ComAmtDueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdjustmentNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.AdjustmentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdjustmentNull()
            Me(Me.tableStatementOfAccount.AdjustmentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPenaltyNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.PenaltyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPenaltyNull()
            Me(Me.tableStatementOfAccount.PenaltyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountNoNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.AccountNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountNoNull()
            Me(Me.tableStatementOfAccount.AccountNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConsumerNameNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.ConsumerNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConsumerNameNull()
            Me(Me.tableStatementOfAccount.ConsumerNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCAddressNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.CAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCAddressNull()
            Me(Me.tableStatementOfAccount.CAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJobTitleNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.JobTitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJobTitleNull()
            Me(Me.tableStatementOfAccount.JobTitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCompanyNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.CompanyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCompanyNull()
            Me(Me.tableStatementOfAccount.CompanyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClassificationNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.ClassificationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClassificationNull()
            Me(Me.tableStatementOfAccount.ClassificationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeterNumberNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.MeterNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeterNumberNull()
            Me(Me.tableStatementOfAccount.MeterNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalToPayNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.TotalToPayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalToPayNull()
            Me(Me.tableStatementOfAccount.TotalToPayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNotedByNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.NotedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNotedByNull()
            Me(Me.tableStatementOfAccount.NotedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTitlOfNoteeNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.TitlOfNoteeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTitlOfNoteeNull()
            Me(Me.tableStatementOfAccount.TitlOfNoteeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCommentsNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.CommentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCommentsNull()
            Me(Me.tableStatementOfAccount.CommentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBillStatNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.BillStatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBillStatNull()
            Me(Me.tableStatementOfAccount.BillStatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSOADateNull() As Boolean
            Return Me.IsNull(Me.tableStatementOfAccount.SOADateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSOADateNull()
            Me(Me.tableStatementOfAccount.SOADateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PendingDisconnectionRow
        Inherits Global.System.Data.DataRow
        
        Private tablePendingDisconnection As PendingDisconnectionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePendingDisconnection = CType(Me.Table,PendingDisconnectionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AcctID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePendingDisconnection.AcctIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AcctID' in table 'PendingDisconnection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePendingDisconnection.AcctIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sequence() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePendingDisconnection.SequenceColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sequence' in table 'PendingDisconnection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePendingDisconnection.SequenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablePendingDisconnection.AccountNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountNo' in table 'PendingDisconnection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePendingDisconnection.AccountNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AccountName() As String
            Get
                Try 
                    Return CType(Me(Me.tablePendingDisconnection.AccountNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AccountName' in table 'PendingDisconnection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePendingDisconnection.AccountNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeterNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablePendingDisconnection.MeterNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeterNo' in table 'PendingDisconnection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePendingDisconnection.MeterNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StreetAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tablePendingDisconnection.StreetAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StreetAddress' in table 'PendingDisconnection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePendingDisconnection.StreetAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AddBrgy() As String
            Get
                Try 
                    Return CType(Me(Me.tablePendingDisconnection.AddBrgyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddBrgy' in table 'PendingDisconnection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePendingDisconnection.AddBrgyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Balance() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePendingDisconnection.BalanceColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Balance' in table 'PendingDisconnection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePendingDisconnection.BalanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dFromMonth() As String
            Get
                Try 
                    Return CType(Me(Me.tablePendingDisconnection.dFromMonthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dFromMonth' in table 'PendingDisconnection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePendingDisconnection.dFromMonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dFromYear() As String
            Get
                Try 
                    Return CType(Me(Me.tablePendingDisconnection.dFromYearColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dFromYear' in table 'PendingDisconnection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePendingDisconnection.dFromYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dToMonth() As String
            Get
                Try 
                    Return CType(Me(Me.tablePendingDisconnection.dToMonthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dToMonth' in table 'PendingDisconnection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePendingDisconnection.dToMonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dToYear() As String
            Get
                Try 
                    Return CType(Me(Me.tablePendingDisconnection.dToYearColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dToYear' in table 'PendingDisconnection' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePendingDisconnection.dToYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAcctIDNull() As Boolean
            Return Me.IsNull(Me.tablePendingDisconnection.AcctIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAcctIDNull()
            Me(Me.tablePendingDisconnection.AcctIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSequenceNull() As Boolean
            Return Me.IsNull(Me.tablePendingDisconnection.SequenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSequenceNull()
            Me(Me.tablePendingDisconnection.SequenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountNoNull() As Boolean
            Return Me.IsNull(Me.tablePendingDisconnection.AccountNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountNoNull()
            Me(Me.tablePendingDisconnection.AccountNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAccountNameNull() As Boolean
            Return Me.IsNull(Me.tablePendingDisconnection.AccountNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAccountNameNull()
            Me(Me.tablePendingDisconnection.AccountNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeterNoNull() As Boolean
            Return Me.IsNull(Me.tablePendingDisconnection.MeterNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeterNoNull()
            Me(Me.tablePendingDisconnection.MeterNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStreetAddressNull() As Boolean
            Return Me.IsNull(Me.tablePendingDisconnection.StreetAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStreetAddressNull()
            Me(Me.tablePendingDisconnection.StreetAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAddBrgyNull() As Boolean
            Return Me.IsNull(Me.tablePendingDisconnection.AddBrgyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAddBrgyNull()
            Me(Me.tablePendingDisconnection.AddBrgyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBalanceNull() As Boolean
            Return Me.IsNull(Me.tablePendingDisconnection.BalanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBalanceNull()
            Me(Me.tablePendingDisconnection.BalanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdFromMonthNull() As Boolean
            Return Me.IsNull(Me.tablePendingDisconnection.dFromMonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdFromMonthNull()
            Me(Me.tablePendingDisconnection.dFromMonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdFromYearNull() As Boolean
            Return Me.IsNull(Me.tablePendingDisconnection.dFromYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdFromYearNull()
            Me(Me.tablePendingDisconnection.dFromYearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdToMonthNull() As Boolean
            Return Me.IsNull(Me.tablePendingDisconnection.dToMonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdToMonthNull()
            Me(Me.tablePendingDisconnection.dToMonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdToYearNull() As Boolean
            Return Me.IsNull(Me.tablePendingDisconnection.dToYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdToYearNull()
            Me(Me.tablePendingDisconnection.dToYearColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SOADataSetRow
        Inherits Global.System.Data.DataRow
        
        Private tableSOADataSet As SOADataSetDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSOADataSet = CType(Me.Table,SOADataSetDataTable)
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SCDSRepRow
        Inherits Global.System.Data.DataRow
        
        Private tableSCDSRep As SCDSRepDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSCDSRep = CType(Me.Table,SCDSRepDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property brgyID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.brgyIDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'brgyID' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.brgyIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AddBrgy() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.AddBrgyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddBrgy' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.AddBrgyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property zoneID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.zoneIDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zoneID' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.zoneIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PlantName() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.PlantNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PlantName' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.PlantNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalAccounts() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.TotalAccountsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalAccounts' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.TotalAccountsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActiveTotal() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.ActiveTotalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActiveTotal' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.ActiveTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActiveInstalled() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.ActiveInstalledColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActiveInstalled' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.ActiveInstalledColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActiveReconnected() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.ActiveReconnectedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActiveReconnected' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.ActiveReconnectedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActiveDirect() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.ActiveDirectColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActiveDirect' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.ActiveDirectColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UninstalledTotal() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.UninstalledTotalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UninstalledTotal' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.UninstalledTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UninstalledBacklogs() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.UninstalledBacklogsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UninstalledBacklogs' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.UninstalledBacklogsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UninstalledNew() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.UninstalledNewColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UninstalledNew' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.UninstalledNewColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DisconnectedTotal() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.DisconnectedTotalColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DisconnectedTotal' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.DisconnectedTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DisconnectedNonPay() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.DisconnectedNonPayColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DisconnectedNonPay' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.DisconnectedNonPayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DisconnectedVoluntary() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.DisconnectedVoluntaryColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DisconnectedVoluntary' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.DisconnectedVoluntaryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalAccountsRes() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.TotalAccountsResColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalAccountsRes' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.TotalAccountsResColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalAccountsIns() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.TotalAccountsInsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalAccountsIns' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.TotalAccountsInsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalAccountsCom() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.TotalAccountsComColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalAccountsCom' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.TotalAccountsComColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalAccountsInd() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.TotalAccountsIndColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalAccountsInd' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.TotalAccountsIndColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActiveRes() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.ActiveResColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActiveRes' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.ActiveResColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActiveIns() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.ActiveInsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActiveIns' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.ActiveInsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActiveCom() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.ActiveComColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActiveCom' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.ActiveComColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActiveInd() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.ActiveIndColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActiveInd' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.ActiveIndColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Regular() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.RegularColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Regular' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.RegularColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Senior() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.SeniorColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Senior' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.SeniorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property repMonth() As String
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.repMonthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'repMonth' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.repMonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property repYear() As Short
            Get
                Try 
                    Return CType(Me(Me.tableSCDSRep.repYearColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'repYear' in table 'SCDSRep' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSCDSRep.repYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbrgyIDNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.brgyIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbrgyIDNull()
            Me(Me.tableSCDSRep.brgyIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAddBrgyNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.AddBrgyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAddBrgyNull()
            Me(Me.tableSCDSRep.AddBrgyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IszoneIDNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.zoneIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetzoneIDNull()
            Me(Me.tableSCDSRep.zoneIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPlantNameNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.PlantNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPlantNameNull()
            Me(Me.tableSCDSRep.PlantNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalAccountsNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.TotalAccountsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalAccountsNull()
            Me(Me.tableSCDSRep.TotalAccountsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsActiveTotalNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.ActiveTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetActiveTotalNull()
            Me(Me.tableSCDSRep.ActiveTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsActiveInstalledNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.ActiveInstalledColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetActiveInstalledNull()
            Me(Me.tableSCDSRep.ActiveInstalledColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsActiveReconnectedNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.ActiveReconnectedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetActiveReconnectedNull()
            Me(Me.tableSCDSRep.ActiveReconnectedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsActiveDirectNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.ActiveDirectColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetActiveDirectNull()
            Me(Me.tableSCDSRep.ActiveDirectColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUninstalledTotalNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.UninstalledTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUninstalledTotalNull()
            Me(Me.tableSCDSRep.UninstalledTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUninstalledBacklogsNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.UninstalledBacklogsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUninstalledBacklogsNull()
            Me(Me.tableSCDSRep.UninstalledBacklogsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUninstalledNewNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.UninstalledNewColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUninstalledNewNull()
            Me(Me.tableSCDSRep.UninstalledNewColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDisconnectedTotalNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.DisconnectedTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDisconnectedTotalNull()
            Me(Me.tableSCDSRep.DisconnectedTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDisconnectedNonPayNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.DisconnectedNonPayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDisconnectedNonPayNull()
            Me(Me.tableSCDSRep.DisconnectedNonPayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDisconnectedVoluntaryNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.DisconnectedVoluntaryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDisconnectedVoluntaryNull()
            Me(Me.tableSCDSRep.DisconnectedVoluntaryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalAccountsResNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.TotalAccountsResColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalAccountsResNull()
            Me(Me.tableSCDSRep.TotalAccountsResColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalAccountsInsNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.TotalAccountsInsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalAccountsInsNull()
            Me(Me.tableSCDSRep.TotalAccountsInsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalAccountsComNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.TotalAccountsComColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalAccountsComNull()
            Me(Me.tableSCDSRep.TotalAccountsComColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalAccountsIndNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.TotalAccountsIndColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalAccountsIndNull()
            Me(Me.tableSCDSRep.TotalAccountsIndColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsActiveResNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.ActiveResColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetActiveResNull()
            Me(Me.tableSCDSRep.ActiveResColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsActiveInsNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.ActiveInsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetActiveInsNull()
            Me(Me.tableSCDSRep.ActiveInsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsActiveComNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.ActiveComColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetActiveComNull()
            Me(Me.tableSCDSRep.ActiveComColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsActiveIndNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.ActiveIndColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetActiveIndNull()
            Me(Me.tableSCDSRep.ActiveIndColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRegularNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.RegularColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRegularNull()
            Me(Me.tableSCDSRep.RegularColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSeniorNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.SeniorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSeniorNull()
            Me(Me.tableSCDSRep.SeniorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsrepMonthNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.repMonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetrepMonthNull()
            Me(Me.tableSCDSRep.repMonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsrepYearNull() As Boolean
            Return Me.IsNull(Me.tableSCDSRep.repYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetrepYearNull()
            Me(Me.tableSCDSRep.repYearColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ORDatasetRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ORDatasetRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ORDatasetRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ORDatasetRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CollectionNoticeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CollectionNoticeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CollectionNoticeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CollectionNoticeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class BillNoticeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BillNoticeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As BillNoticeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As BillNoticeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ORDataTableRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ORDataTableRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ORDataTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ORDataTableRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class DailyReportDataSetRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DailyReportDataSetRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As DailyReportDataSetRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As DailyReportDataSetRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class billAdjustmentRequestRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As billAdjustmentRequestRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As billAdjustmentRequestRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As billAdjustmentRequestRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class DailyCollectionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DailyCollectionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As DailyCollectionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As DailyCollectionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ReaderListRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ReaderListRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ReaderListRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ReaderListRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MonthlyReportRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MonthlyReportRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MonthlyReportRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MonthlyReportRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class BillingStatementRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BillingStatementRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As BillingStatementRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As BillingStatementRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ReadingListRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ReadingListRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ReadingListRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ReadingListRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class StatementOfAccountRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As StatementOfAccountRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As StatementOfAccountRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As StatementOfAccountRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PendingDisconnectionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PendingDisconnectionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PendingDisconnectionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PendingDisconnectionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SOADataSetRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SOADataSetRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SOADataSetRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SOADataSetRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SCDSRepRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SCDSRepRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SCDSRepRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SCDSRepRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace reportingdatasetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ORDatasetTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ORDataset"
            tableMapping.ColumnMappings.Add("pID", "pID")
            tableMapping.ColumnMappings.Add("cID", "cID")
            tableMapping.ColumnMappings.Add("ORNumber", "ORNumber")
            tableMapping.ColumnMappings.Add("pAmount", "pAmount")
            tableMapping.ColumnMappings.Add("AcctCode", "AcctCode")
            tableMapping.ColumnMappings.Add("orID", "orID")
            tableMapping.ColumnMappings.Add("ORNum", "ORNum")
            tableMapping.ColumnMappings.Add("totalPayment", "totalPayment")
            tableMapping.ColumnMappings.Add("pType", "pType")
            tableMapping.ColumnMappings.Add("numpayment", "numpayment")
            tableMapping.ColumnMappings.Add("datepayment", "datepayment")
            tableMapping.ColumnMappings.Add("draweepayment", "draweepayment")
            tableMapping.ColumnMappings.Add("uID", "uID")
            tableMapping.ColumnMappings.Add("amountinwords", "amountinwords")
            tableMapping.ColumnMappings.Add("uID1", "uID1")
            tableMapping.ColumnMappings.Add("uname", "uname")
            tableMapping.ColumnMappings.Add("upass", "upass")
            tableMapping.ColumnMappings.Add("fullname", "fullname")
            tableMapping.ColumnMappings.Add("utypeid", "utypeid")
            tableMapping.ColumnMappings.Add("pdate", "pdate")
            tableMapping.ColumnMappings.Add("cID1", "cID1")
            tableMapping.ColumnMappings.Add("FName", "FName")
            tableMapping.ColumnMappings.Add("MName", "MName")
            tableMapping.ColumnMappings.Add("LName", "LName")
            tableMapping.ColumnMappings.Add("CNum", "CNum")
            tableMapping.ColumnMappings.Add("Address", "Address")
            tableMapping.ColumnMappings.Add("brgyID", "brgyID")
            tableMapping.ColumnMappings.Add("collectionnature", "collectionnature")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.POSEIDON.My.MySettings.Default.poseidondbConnString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT * FROM tblpayment AS P LEFT JOIN tblorrecord AS R ON P.ORNumber=R.ORNum LE"& _ 
                "FT JOIN userlist AS U ON R.uID=U.uID LEFT JOIN tblCustomer AS C ON P.cID=C.cID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As reportingdataset.ORDatasetDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As reportingdataset.ORDatasetDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As reportingdataset.ORDatasetDataTable = New reportingdataset.ORDatasetDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CollectionNoticeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CollectionNotice"
            tableMapping.ColumnMappings.Add("metID", "metID")
            tableMapping.ColumnMappings.Add("acctID", "acctID")
            tableMapping.ColumnMappings.Add("consID", "consID")
            tableMapping.ColumnMappings.Add("classID", "classID")
            tableMapping.ColumnMappings.Add("Reference", "Reference")
            tableMapping.ColumnMappings.Add("Reading", "Reading")
            tableMapping.ColumnMappings.Add("Consumed", "Consumed")
            tableMapping.ColumnMappings.Add("Amount", "Amount")
            tableMapping.ColumnMappings.Add("PrevBal", "PrevBal")
            tableMapping.ColumnMappings.Add("TotAmount", "TotAmount")
            tableMapping.ColumnMappings.Add("DueAmount", "DueAmount")
            tableMapping.ColumnMappings.Add("ReadDate", "ReadDate")
            tableMapping.ColumnMappings.Add("DateOfAccess", "DateOfAccess")
            tableMapping.ColumnMappings.Add("uID", "uID")
            tableMapping.ColumnMappings.Add("zoneID", "zoneID")
            tableMapping.ColumnMappings.Add("clusterNum", "clusterNum")
            tableMapping.ColumnMappings.Add("sequenceNum", "sequenceNum")
            tableMapping.ColumnMappings.Add("ReadPerFrom", "ReadPerFrom")
            tableMapping.ColumnMappings.Add("ReadPerTo", "ReadPerTo")
            tableMapping.ColumnMappings.Add("ReadPerYear", "ReadPerYear")
            tableMapping.ColumnMappings.Add("MetStatus", "MetStatus")
            tableMapping.ColumnMappings.Add("DueDate", "DueDate")
            tableMapping.ColumnMappings.Add("paymentDate", "paymentDate")
            tableMapping.ColumnMappings.Add("acctID1", "acctID1")
            tableMapping.ColumnMappings.Add("consID1", "consID1")
            tableMapping.ColumnMappings.Add("classID1", "classID1")
            tableMapping.ColumnMappings.Add("brgyID", "brgyID")
            tableMapping.ColumnMappings.Add("clusterID", "clusterID")
            tableMapping.ColumnMappings.Add("Sequence", "Sequence")
            tableMapping.ColumnMappings.Add("AccountNo", "AccountNo")
            tableMapping.ColumnMappings.Add("receiptNo", "receiptNo")
            tableMapping.ColumnMappings.Add("StreetAddress", "StreetAddress")
            tableMapping.ColumnMappings.Add("MeterNo", "MeterNo")
            tableMapping.ColumnMappings.Add("MeterBrand", "MeterBrand")
            tableMapping.ColumnMappings.Add("MeterSize", "MeterSize")
            tableMapping.ColumnMappings.Add("MeterReference", "MeterReference")
            tableMapping.ColumnMappings.Add("ConnectionDate", "ConnectionDate")
            tableMapping.ColumnMappings.Add("AcctStatus", "AcctStatus")
            tableMapping.ColumnMappings.Add("CanDelete", "CanDelete")
            tableMapping.ColumnMappings.Add("consID2", "consID2")
            tableMapping.ColumnMappings.Add("ConsumerName", "ConsumerName")
            tableMapping.ColumnMappings.Add("cAddress", "cAddress")
            tableMapping.ColumnMappings.Add("contactNum", "contactNum")
            tableMapping.ColumnMappings.Add("classID2", "classID2")
            tableMapping.ColumnMappings.Add("classification", "classification")
            tableMapping.ColumnMappings.Add("classcode", "classcode")
            tableMapping.ColumnMappings.Add("isbulk", "isbulk")
            tableMapping.ColumnMappings.Add("dateFrom", "dateFrom")
            tableMapping.ColumnMappings.Add("dateTo", "dateTo")
            tableMapping.ColumnMappings.Add("brgyID1", "brgyID1")
            tableMapping.ColumnMappings.Add("ZoneID1", "ZoneID1")
            tableMapping.ColumnMappings.Add("AddBrgy", "AddBrgy")
            tableMapping.ColumnMappings.Add("brgyCode", "brgyCode")
            tableMapping.ColumnMappings.Add("ClusterSize", "ClusterSize")
            tableMapping.ColumnMappings.Add("bClass", "bClass")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.POSEIDON.My.MySettings.Default.poseidondbConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT * FROM meterreading AS MR LEFT JOIN consumeraccounts AS A ON MR.acctID=A.A"& _ 
                "cctID LEFT JOIN consumerlist AS C ON A.consID=C.consID LEFT JOIN classifications"& _ 
                " AS CL ON A.classid=CL.classID LEFT JOIN brgylist AS BG ON A.brgyID=BG.brgyID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As reportingdataset.CollectionNoticeDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As reportingdataset.CollectionNoticeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As reportingdataset.CollectionNoticeDataTable = New reportingdataset.CollectionNoticeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BillNoticeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "BillNotice"
            tableMapping.ColumnMappings.Add("consID", "consID")
            tableMapping.ColumnMappings.Add("classID", "classID")
            tableMapping.ColumnMappings.Add("billdate", "billdate")
            tableMapping.ColumnMappings.Add("brgyID", "brgyID")
            tableMapping.ColumnMappings.Add("clusterID", "clusterID")
            tableMapping.ColumnMappings.Add("Sequence", "Sequence")
            tableMapping.ColumnMappings.Add("AccountNo", "AccountNo")
            tableMapping.ColumnMappings.Add("StreetAddress", "StreetAddress")
            tableMapping.ColumnMappings.Add("MeterNo", "MeterNo")
            tableMapping.ColumnMappings.Add("ConsumerName", "ConsumerName")
            tableMapping.ColumnMappings.Add("classification", "classification")
            tableMapping.ColumnMappings.Add("uID", "uID")
            tableMapping.ColumnMappings.Add("billiD", "billiD")
            tableMapping.ColumnMappings.Add("acctID", "acctID")
            tableMapping.ColumnMappings.Add("zoneID", "zoneID")
            tableMapping.ColumnMappings.Add("isSenior", "isSenior")
            tableMapping.ColumnMappings.Add("dueDate", "dueDate")
            tableMapping.ColumnMappings.Add("fromDate", "fromDate")
            tableMapping.ColumnMappings.Add("toDate", "toDate")
            tableMapping.ColumnMappings.Add("billMonth", "billMonth")
            tableMapping.ColumnMappings.Add("billYear", "billYear")
            tableMapping.ColumnMappings.Add("prevRead", "prevRead")
            tableMapping.ColumnMappings.Add("presRead", "presRead")
            tableMapping.ColumnMappings.Add("prevConsump", "prevConsump")
            tableMapping.ColumnMappings.Add("consump", "consump")
            tableMapping.ColumnMappings.Add("isSC", "isSC")
            tableMapping.ColumnMappings.Add("seqNum", "seqNum")
            tableMapping.ColumnMappings.Add("isAdjusted", "isAdjusted")
            tableMapping.ColumnMappings.Add("adjReason", "adjReason")
            tableMapping.ColumnMappings.Add("adjPrep", "adjPrep")
            tableMapping.ColumnMappings.Add("adjDate", "adjDate")
            tableMapping.ColumnMappings.Add("adjApprov", "adjApprov")
            tableMapping.ColumnMappings.Add("adjRemark", "adjRemark")
            tableMapping.ColumnMappings.Add("adjApprovStat", "adjApprovStat")
            tableMapping.ColumnMappings.Add("billstat", "billstat")
            tableMapping.ColumnMappings.Add("metReadID", "metReadID")
            tableMapping.ColumnMappings.Add("metName", "metName")
            tableMapping.ColumnMappings.Add("billNote", "billNote")
            tableMapping.ColumnMappings.Add("billperiod", "billperiod")
            tableMapping.ColumnMappings.Add("Fconsump", "Fconsump")
            tableMapping.ColumnMappings.Add("SConsump", "SConsump")
            tableMapping.ColumnMappings.Add("FLabel", "FLabel")
            tableMapping.ColumnMappings.Add("SLabel", "SLabel")
            tableMapping.ColumnMappings.Add("clustername", "clustername")
            tableMapping.ColumnMappings.Add("PrepAdjName", "PrepAdjName")
            tableMapping.ColumnMappings.Add("ApprovAdjName", "ApprovAdjName")
            tableMapping.ColumnMappings.Add("UserFullName", "UserFullName")
            tableMapping.ColumnMappings.Add("addBrgy", "addBrgy")
            tableMapping.ColumnMappings.Add("readDate", "readDate")
            tableMapping.ColumnMappings.Add("adjConsump", "adjConsump")
            tableMapping.ColumnMappings.Add("minconsump", "minconsump")
            tableMapping.ColumnMappings.Add("AccountName", "AccountName")
            tableMapping.ColumnMappings.Add("contactNum", "contactNum")
            tableMapping.ColumnMappings.Add("applicationfee", "applicationfee")
            tableMapping.ColumnMappings.Add("prevBal", "prevBal")
            tableMapping.ColumnMappings.Add("prevEnv", "prevEnv")
            tableMapping.ColumnMappings.Add("prevAdj", "prevAdj")
            tableMapping.ColumnMappings.Add("prevAdjustedRate", "prevAdjustedRate")
            tableMapping.ColumnMappings.Add("prevPenalty", "prevPenalty")
            tableMapping.ColumnMappings.Add("prevAmountDue", "prevAmountDue")
            tableMapping.ColumnMappings.Add("prevTotal", "prevTotal")
            tableMapping.ColumnMappings.Add("amount", "amount")
            tableMapping.ColumnMappings.Add("flatrate", "flatrate")
            tableMapping.ColumnMappings.Add("excess", "excess")
            tableMapping.ColumnMappings.Add("adjusted", "adjusted")
            tableMapping.ColumnMappings.Add("adjustedRate", "adjustedRate")
            tableMapping.ColumnMappings.Add("EnviFee", "EnviFee")
            tableMapping.ColumnMappings.Add("totalAmountDue", "totalAmountDue")
            tableMapping.ColumnMappings.Add("useAmount", "useAmount")
            tableMapping.ColumnMappings.Add("useADue", "useADue")
            tableMapping.ColumnMappings.Add("penalty", "penalty")
            tableMapping.ColumnMappings.Add("AmountADue", "AmountADue")
            tableMapping.ColumnMappings.Add("SCDiscount", "SCDiscount")
            tableMapping.ColumnMappings.Add("SCPenalty", "SCPenalty")
            tableMapping.ColumnMappings.Add("ORNumPaid", "ORNumPaid")
            tableMapping.ColumnMappings.Add("AmountPaid", "AmountPaid")
            tableMapping.ColumnMappings.Add("MoneyAmount", "MoneyAmount")
            tableMapping.ColumnMappings.Add("mChange", "mChange")
            tableMapping.ColumnMappings.Add("Fexcess", "Fexcess")
            tableMapping.ColumnMappings.Add("SExcess", "SExcess")
            tableMapping.ColumnMappings.Add("Fratepercub", "Fratepercub")
            tableMapping.ColumnMappings.Add("SRatepercub", "SRatepercub")
            tableMapping.ColumnMappings.Add("prevSCDis", "prevSCDis")
            tableMapping.ColumnMappings.Add("municipality", "municipality")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.POSEIDON.My.MySettings.Default.balabacdbConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT "&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(10)&"B.billiD, "&Global.Microsoft.VisualBasic.ChrW(10)&"B.acctID,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.consID, "&Global.Microsoft.VisualBasic.ChrW(10)&" B.classID, "&Global.Microsoft.VisualBasic.ChrW(10)&" B.zoneID, "&Global.Microsoft.VisualBasic.ChrW(10)&" BR.brgyID, "&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "B.clusterID, "&Global.Microsoft.VisualBasic.ChrW(10)&" C.ConsumerName, "&Global.Microsoft.VisualBasic.ChrW(10)&" A.StreetAddress,"&Global.Microsoft.VisualBasic.ChrW(10)&" A.MeterNo, "&Global.Microsoft.VisualBasic.ChrW(10)&" A.AccountNo, "&Global.Microsoft.VisualBasic.ChrW(10)&" A"& _ 
                ".Sequence, "&Global.Microsoft.VisualBasic.ChrW(10)&" A.isSenior, "&Global.Microsoft.VisualBasic.ChrW(10)&" CL.classification, "&Global.Microsoft.VisualBasic.ChrW(10)&" B.dueDate, "&Global.Microsoft.VisualBasic.ChrW(10)&" B.fromDate,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.toDa"& _ 
                "te,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.billMonth,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.billYear,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.prevRead,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.presRead,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.prevBal,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.prevCons"& _ 
                "ump,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.prevEnv,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.prevAdj,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.prevAdjustedRate,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.prevPenalty,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.prevAmountD"& _ 
                "ue,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.prevTotal,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.consump,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.amount,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.flatrate,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.excess,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.adjusted,"&Global.Microsoft.VisualBasic.ChrW(10)&" B"& _ 
                ".adjustedRate,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.EnviFee,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.totalAmountDue,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.useAmount,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.useADue,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.penal"& _ 
                "ty,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.AmountADue,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.isSC,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.SCDiscount,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.SCPenalty,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.seqNum,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.isAdjuste"& _ 
                "d,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.adjReason,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.adjPrep,"&Global.Microsoft.VisualBasic.ChrW(10)&" AJ.fullname AS PrepAdjName,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.adjDate,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.adjAppr"& _ 
                "ov,"&Global.Microsoft.VisualBasic.ChrW(10)&" AA.fullname AS ApprovAdjName,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.adjRemark,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.adjApprovStat,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.billstat,"&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                " B.ORNumPaid,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.AmountPaid,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.MoneyAmount,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.mChange,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.metReadID,"&Global.Microsoft.VisualBasic.ChrW(10)&" MR.metNa"& _ 
                "me,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.billNote,"&Global.Microsoft.VisualBasic.ChrW(10)&" B.uID,"&Global.Microsoft.VisualBasic.ChrW(10)&" u.fullname AS UserFullName,"&Global.Microsoft.VisualBasic.ChrW(10)&"B.billperiod,"&Global.Microsoft.VisualBasic.ChrW(10)&"B.billdate,"&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "B.Fconsump,"&Global.Microsoft.VisualBasic.ChrW(10)&"B.SConsump,"&Global.Microsoft.VisualBasic.ChrW(10)&"B.Fexcess,"&Global.Microsoft.VisualBasic.ChrW(10)&"B.SExcess,"&Global.Microsoft.VisualBasic.ChrW(10)&"B.FLabel,"&Global.Microsoft.VisualBasic.ChrW(10)&"B.SLabel,"&Global.Microsoft.VisualBasic.ChrW(10)&"CS.clustername"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(10)&", BR.addBrgy, B.readDate, B.adjConsump, B.minconsump, B.Fratepercub, B.SRateper"& _ 
                "cub, "&Global.Microsoft.VisualBasic.ChrW(10)&"B.prevSCDis, A.AccountName, C.contactNum, B.applicationfee, MM.municipalit"& _ 
                "y "&Global.Microsoft.VisualBasic.ChrW(10)&"FROM billing AS B "&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN consumeraccounts AS A ON B.acctID=A.acctID "&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT"& _ 
                " JOIN classifications AS CL ON B.classID=CL.classID "&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN clusterlist AS CS"& _ 
                " ON B.clusterID=CS.clusterID "&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN brgylist AS BR ON CS.brgyID=BR.brgyID "&Global.Microsoft.VisualBasic.ChrW(10)&"L"& _ 
                "EFT JOIN meterreader AS MR ON B.metreadID=MR.metID "&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN userlist AS U ON B"& _ 
                ".uID=U.uID "&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN consumerlist AS C ON B.consID=C.consID "&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN userlist"& _ 
                " AS AJ ON B.adjPrep=AJ.uID "&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN userlist AS AA ON B.adjApprov=AA.uID LEFT "& _ 
                "JOIN zones AS ZZ ON ZZ.zoneID=BR.zoneID LEFT JOIN munlist AS MM ON MM.addmunID=Z"& _ 
                "Z.addmunID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As reportingdataset.BillNoticeDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As reportingdataset.BillNoticeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As reportingdataset.BillNoticeDataTable = New reportingdataset.BillNoticeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ORDataTableTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ORDataTable"
            tableMapping.ColumnMappings.Add("orID", "orID")
            tableMapping.ColumnMappings.Add("ORNum", "ORNum")
            tableMapping.ColumnMappings.Add("totalPayment", "totalPayment")
            tableMapping.ColumnMappings.Add("pType", "pType")
            tableMapping.ColumnMappings.Add("uID", "uID")
            tableMapping.ColumnMappings.Add("amountinwords", "amountinwords")
            tableMapping.ColumnMappings.Add("consID", "consID")
            tableMapping.ColumnMappings.Add("consID1", "consID1")
            tableMapping.ColumnMappings.Add("uID1", "uID1")
            tableMapping.ColumnMappings.Add("ConsumerName", "ConsumerName")
            tableMapping.ColumnMappings.Add("cAddress", "cAddress")
            tableMapping.ColumnMappings.Add("contactNum", "contactNum")
            tableMapping.ColumnMappings.Add("uname", "uname")
            tableMapping.ColumnMappings.Add("upass", "upass")
            tableMapping.ColumnMappings.Add("fullname", "fullname")
            tableMapping.ColumnMappings.Add("utypeid", "utypeid")
            tableMapping.ColumnMappings.Add("position", "position")
            tableMapping.ColumnMappings.Add("userStatus", "userStatus")
            tableMapping.ColumnMappings.Add("canDel", "canDel")
            tableMapping.ColumnMappings.Add("draweeBank", "draweeBank")
            tableMapping.ColumnMappings.Add("draweenum", "draweenum")
            tableMapping.ColumnMappings.Add("draweedate", "draweedate")
            tableMapping.ColumnMappings.Add("pDate", "pDate")
            tableMapping.ColumnMappings.Add("seniorRmk", "seniorRmk")
            tableMapping.ColumnMappings.Add("seniorID", "seniorID")
            tableMapping.ColumnMappings.Add("totalDiscount", "totalDiscount")
            tableMapping.ColumnMappings.Add("nature1", "nature1")
            tableMapping.ColumnMappings.Add("nature2", "nature2")
            tableMapping.ColumnMappings.Add("nature3", "nature3")
            tableMapping.ColumnMappings.Add("nature4", "nature4")
            tableMapping.ColumnMappings.Add("nature5", "nature5")
            tableMapping.ColumnMappings.Add("nature6", "nature6")
            tableMapping.ColumnMappings.Add("nature7", "nature7")
            tableMapping.ColumnMappings.Add("nature8", "nature8")
            tableMapping.ColumnMappings.Add("code1", "code1")
            tableMapping.ColumnMappings.Add("code2", "code2")
            tableMapping.ColumnMappings.Add("code3", "code3")
            tableMapping.ColumnMappings.Add("code4", "code4")
            tableMapping.ColumnMappings.Add("code5", "code5")
            tableMapping.ColumnMappings.Add("code6", "code6")
            tableMapping.ColumnMappings.Add("code7", "code7")
            tableMapping.ColumnMappings.Add("code8", "code8")
            tableMapping.ColumnMappings.Add("amount1", "amount1")
            tableMapping.ColumnMappings.Add("amount2", "amount2")
            tableMapping.ColumnMappings.Add("amount3", "amount3")
            tableMapping.ColumnMappings.Add("amount4", "amount4")
            tableMapping.ColumnMappings.Add("amount5", "amount5")
            tableMapping.ColumnMappings.Add("amount6", "amount6")
            tableMapping.ColumnMappings.Add("amount7", "amount7")
            tableMapping.ColumnMappings.Add("amount8", "amount8")
            tableMapping.ColumnMappings.Add("collectorname", "collectorname")
            tableMapping.ColumnMappings.Add("isSC", "isSC")
            tableMapping.ColumnMappings.Add("seniorID1", "seniorID1")
            tableMapping.ColumnMappings.Add("agency", "agency")
            tableMapping.ColumnMappings.Add("amountinwords2", "amountinwords2")
            tableMapping.ColumnMappings.Add("cashCheck", "cashCheck")
            tableMapping.ColumnMappings.Add("checkCheck", "checkCheck")
            tableMapping.ColumnMappings.Add("MoneyOrderCheck", "MoneyOrderCheck")
            tableMapping.ColumnMappings.Add("moneyordernum", "moneyordernum")
            tableMapping.ColumnMappings.Add("moneyorderdate", "moneyorderdate")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.POSEIDON.My.MySettings.Default.poseidondbConnectionString6
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT * FROM tblor AS O LEFT JOIN consumerlist AS C ON O.consID=C.consID LEFT JO"& _ 
                "IN userlist AS U ON O.uID=U.uID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As reportingdataset.ORDataTableDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As reportingdataset.ORDataTableDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As reportingdataset.ORDataTableDataTable = New reportingdataset.ORDataTableDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DailyReportDataSetTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DailyReportDataSet"
            tableMapping.ColumnMappings.Add("consumername", "consumername")
            tableMapping.ColumnMappings.Add("addbrgy", "addbrgy")
            tableMapping.ColumnMappings.Add("ORNumber", "ORNumber")
            tableMapping.ColumnMappings.Add("DatesRange", "DatesRange")
            tableMapping.ColumnMappings.Add("payAmount", "payAmount")
            tableMapping.ColumnMappings.Add("Consumption", "Consumption")
            tableMapping.ColumnMappings.Add("Surcharge", "Surcharge")
            tableMapping.ColumnMappings.Add("paymentType", "paymentType")
            tableMapping.ColumnMappings.Add("Installation", "Installation")
            tableMapping.ColumnMappings.Add("OTHERS", "OTHERS")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.POSEIDON.My.MySettings.Default.poseidondbConnectionString5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT C.consumername, BL.addbrgy, P.ORNumber, Concat(Date_format(BI.fromdate, '%"& _ 
                "m-%d-%Y'), ' to ',Date_format(BI.todate, '%m-%d-%Y')) AS DatesRange, Format(P.pA"& _ 
                "mount-P.surCharge, 2) AS payAmount , BI.consumption AS Consumption, format(P.sur"& _ 
                "charge,2) AS Surcharge, P.paymentType,  P.pamount AS Installation, P.pAmount AS "& _ 
                "OTHERS FROM tblPayment AS P LEFT JOIN tblBills AS BI ON P.billID=BI.billID LEFT "& _ 
                "JOIN consumerlist AS C ON P.consID=C.consID LEFT JOIN consumeraccounts AS A ON C"& _ 
                ".consID=A.consID LEFT JOIN brgylist AS BL ON A.brgyID=BL.brgyID LEFT JOIN tblorr"& _ 
                "ecord AS O ON P.ORNumber=O.ORNum"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As reportingdataset.DailyReportDataSetDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As reportingdataset.DailyReportDataSetDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As reportingdataset.DailyReportDataSetDataTable = New reportingdataset.DailyReportDataSetDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class billAdjustmentRequestTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "billAdjustmentRequest"
            tableMapping.ColumnMappings.Add("reqID", "reqID")
            tableMapping.ColumnMappings.Add("acctID", "acctID")
            tableMapping.ColumnMappings.Add("clusterID", "clusterID")
            tableMapping.ColumnMappings.Add("consID", "consID")
            tableMapping.ColumnMappings.Add("requestdate", "requestdate")
            tableMapping.ColumnMappings.Add("adjReason", "adjReason")
            tableMapping.ColumnMappings.Add("preparedby", "preparedby")
            tableMapping.ColumnMappings.Add("requestedby", "requestedby")
            tableMapping.ColumnMappings.Add("adjInspection", "adjInspection")
            tableMapping.ColumnMappings.Add("incpectedby", "incpectedby")
            tableMapping.ColumnMappings.Add("approvedby", "approvedby")
            tableMapping.ColumnMappings.Add("billID", "billID")
            tableMapping.ColumnMappings.Add("billID1", "billID1")
            tableMapping.ColumnMappings.Add("acctID1", "acctID1")
            tableMapping.ColumnMappings.Add("consID1", "consID1")
            tableMapping.ColumnMappings.Add("classID", "classID")
            tableMapping.ColumnMappings.Add("dueDate", "dueDate")
            tableMapping.ColumnMappings.Add("fromDate", "fromDate")
            tableMapping.ColumnMappings.Add("toDate", "toDate")
            tableMapping.ColumnMappings.Add("billMonth", "billMonth")
            tableMapping.ColumnMappings.Add("billYear", "billYear")
            tableMapping.ColumnMappings.Add("prevRead", "prevRead")
            tableMapping.ColumnMappings.Add("presRead", "presRead")
            tableMapping.ColumnMappings.Add("prevBal", "prevBal")
            tableMapping.ColumnMappings.Add("prevConsump", "prevConsump")
            tableMapping.ColumnMappings.Add("prevEnv", "prevEnv")
            tableMapping.ColumnMappings.Add("prevAdj", "prevAdj")
            tableMapping.ColumnMappings.Add("prevAdjustedRate", "prevAdjustedRate")
            tableMapping.ColumnMappings.Add("prevPenalty", "prevPenalty")
            tableMapping.ColumnMappings.Add("prevAmountDue", "prevAmountDue")
            tableMapping.ColumnMappings.Add("prevTotal", "prevTotal")
            tableMapping.ColumnMappings.Add("consump", "consump")
            tableMapping.ColumnMappings.Add("amount", "amount")
            tableMapping.ColumnMappings.Add("flatrate", "flatrate")
            tableMapping.ColumnMappings.Add("excess", "excess")
            tableMapping.ColumnMappings.Add("adjusted", "adjusted")
            tableMapping.ColumnMappings.Add("adjustedRate", "adjustedRate")
            tableMapping.ColumnMappings.Add("EnviFee", "EnviFee")
            tableMapping.ColumnMappings.Add("totalAmountDue", "totalAmountDue")
            tableMapping.ColumnMappings.Add("useAmount", "useAmount")
            tableMapping.ColumnMappings.Add("useADue", "useADue")
            tableMapping.ColumnMappings.Add("penalty", "penalty")
            tableMapping.ColumnMappings.Add("AmountADue", "AmountADue")
            tableMapping.ColumnMappings.Add("isSC", "isSC")
            tableMapping.ColumnMappings.Add("SCDiscount", "SCDiscount")
            tableMapping.ColumnMappings.Add("SCPenalty", "SCPenalty")
            tableMapping.ColumnMappings.Add("seqNum", "seqNum")
            tableMapping.ColumnMappings.Add("isAdjusted", "isAdjusted")
            tableMapping.ColumnMappings.Add("origConsump", "origConsump")
            tableMapping.ColumnMappings.Add("origAmount", "origAmount")
            tableMapping.ColumnMappings.Add("origFlat", "origFlat")
            tableMapping.ColumnMappings.Add("origExcess", "origExcess")
            tableMapping.ColumnMappings.Add("origAdjusted", "origAdjusted")
            tableMapping.ColumnMappings.Add("origAdjustedRate", "origAdjustedRate")
            tableMapping.ColumnMappings.Add("origEnvi", "origEnvi")
            tableMapping.ColumnMappings.Add("origPenalty", "origPenalty")
            tableMapping.ColumnMappings.Add("origTotalPen", "origTotalPen")
            tableMapping.ColumnMappings.Add("origSCDis", "origSCDis")
            tableMapping.ColumnMappings.Add("origSCPen", "origSCPen")
            tableMapping.ColumnMappings.Add("adjReason1", "adjReason1")
            tableMapping.ColumnMappings.Add("adjPrep", "adjPrep")
            tableMapping.ColumnMappings.Add("adjDate", "adjDate")
            tableMapping.ColumnMappings.Add("adjApprov", "adjApprov")
            tableMapping.ColumnMappings.Add("adjRemark", "adjRemark")
            tableMapping.ColumnMappings.Add("adjApprovStat", "adjApprovStat")
            tableMapping.ColumnMappings.Add("billStat", "billStat")
            tableMapping.ColumnMappings.Add("ORNumPaid", "ORNumPaid")
            tableMapping.ColumnMappings.Add("AmountPaid", "AmountPaid")
            tableMapping.ColumnMappings.Add("MoneyAmount", "MoneyAmount")
            tableMapping.ColumnMappings.Add("mChange", "mChange")
            tableMapping.ColumnMappings.Add("metReadID", "metReadID")
            tableMapping.ColumnMappings.Add("billNote", "billNote")
            tableMapping.ColumnMappings.Add("uID", "uID")
            tableMapping.ColumnMappings.Add("zoneID", "zoneID")
            tableMapping.ColumnMappings.Add("clusterID1", "clusterID1")
            tableMapping.ColumnMappings.Add("billPeriod", "billPeriod")
            tableMapping.ColumnMappings.Add("billDate", "billDate")
            tableMapping.ColumnMappings.Add("Fconsump", "Fconsump")
            tableMapping.ColumnMappings.Add("SConsump", "SConsump")
            tableMapping.ColumnMappings.Add("FExcess", "FExcess")
            tableMapping.ColumnMappings.Add("SExcess", "SExcess")
            tableMapping.ColumnMappings.Add("FLabel", "FLabel")
            tableMapping.ColumnMappings.Add("SLabel", "SLabel")
            tableMapping.ColumnMappings.Add("readDate", "readDate")
            tableMapping.ColumnMappings.Add("adjConsump", "adjConsump")
            tableMapping.ColumnMappings.Add("minConsump", "minConsump")
            tableMapping.ColumnMappings.Add("Fratepercub", "Fratepercub")
            tableMapping.ColumnMappings.Add("SRatepercub", "SRatepercub")
            tableMapping.ColumnMappings.Add("prevSCDis", "prevSCDis")
            tableMapping.ColumnMappings.Add("paymentDate", "paymentDate")
            tableMapping.ColumnMappings.Add("billNo", "billNo")
            tableMapping.ColumnMappings.Add("SCRate", "SCRate")
            tableMapping.ColumnMappings.Add("adjApprovDate", "adjApprovDate")
            tableMapping.ColumnMappings.Add("prevOutstanding", "prevOutstanding")
            tableMapping.ColumnMappings.Add("prevOutstandingStat", "prevOutstandingStat")
            tableMapping.ColumnMappings.Add("prevOutstandingOR", "prevOutstandingOR")
            tableMapping.ColumnMappings.Add("prevOutstandingDuration", "prevOutstandingDuration")
            tableMapping.ColumnMappings.Add("BaseRate", "BaseRate")
            tableMapping.ColumnMappings.Add("consID2", "consID2")
            tableMapping.ColumnMappings.Add("ConsumerName", "ConsumerName")
            tableMapping.ColumnMappings.Add("cAddress", "cAddress")
            tableMapping.ColumnMappings.Add("contactNum", "contactNum")
            tableMapping.ColumnMappings.Add("isSC1", "isSC1")
            tableMapping.ColumnMappings.Add("seniorID", "seniorID")
            tableMapping.ColumnMappings.Add("agency", "agency")
            tableMapping.ColumnMappings.Add("acctID2", "acctID2")
            tableMapping.ColumnMappings.Add("consID3", "consID3")
            tableMapping.ColumnMappings.Add("classID1", "classID1")
            tableMapping.ColumnMappings.Add("brgyID", "brgyID")
            tableMapping.ColumnMappings.Add("clusterID2", "clusterID2")
            tableMapping.ColumnMappings.Add("Sequence", "Sequence")
            tableMapping.ColumnMappings.Add("AccountNo", "AccountNo")
            tableMapping.ColumnMappings.Add("receiptNo", "receiptNo")
            tableMapping.ColumnMappings.Add("StreetAddress", "StreetAddress")
            tableMapping.ColumnMappings.Add("MeterNo", "MeterNo")
            tableMapping.ColumnMappings.Add("MeterBrand", "MeterBrand")
            tableMapping.ColumnMappings.Add("MeterSize", "MeterSize")
            tableMapping.ColumnMappings.Add("MeterReference", "MeterReference")
            tableMapping.ColumnMappings.Add("ConnectionDate", "ConnectionDate")
            tableMapping.ColumnMappings.Add("AcctStatus", "AcctStatus")
            tableMapping.ColumnMappings.Add("CanDelete", "CanDelete")
            tableMapping.ColumnMappings.Add("isSenior", "isSenior")
            tableMapping.ColumnMappings.Add("seniorID1", "seniorID1")
            tableMapping.ColumnMappings.Add("AccountName", "AccountName")
            tableMapping.ColumnMappings.Add("clusterID3", "clusterID3")
            tableMapping.ColumnMappings.Add("brgyID1", "brgyID1")
            tableMapping.ColumnMappings.Add("ClusterName", "ClusterName")
            tableMapping.ColumnMappings.Add("brgyID2", "brgyID2")
            tableMapping.ColumnMappings.Add("ZoneID1", "ZoneID1")
            tableMapping.ColumnMappings.Add("AddBrgy", "AddBrgy")
            tableMapping.ColumnMappings.Add("brgyCode", "brgyCode")
            tableMapping.ColumnMappings.Add("ClusterSize", "ClusterSize")
            tableMapping.ColumnMappings.Add("bClass", "bClass")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.POSEIDON.My.MySettings.Default.poseidondbConnectionString6
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT * FROM tblbilladjustmentrequestform AS F LEFT JOIN billing AS B ON F.billI"& _ 
                "D=B.billID LEFT JOIN consumerlist AS CO ON F.consID=CO.consID LEFT JOIN consumer"& _ 
                "accounts AS A ON F.acctID=A.acctID LEFT JOIN clusterlist AS CL ON F.clusterID=CL"& _ 
                ".clusterID LEFT JOIN brgylist AS BR ON CL.brgyID=BR.brgyID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As reportingdataset.billAdjustmentRequestDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As reportingdataset.billAdjustmentRequestDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As reportingdataset.billAdjustmentRequestDataTable = New reportingdataset.billAdjustmentRequestDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DailyCollectionTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DailyCollection"
            tableMapping.ColumnMappings.Add("orID", "orID")
            tableMapping.ColumnMappings.Add("ORNum", "ORNum")
            tableMapping.ColumnMappings.Add("totalPayment", "totalPayment")
            tableMapping.ColumnMappings.Add("pType", "pType")
            tableMapping.ColumnMappings.Add("draweeBank", "draweeBank")
            tableMapping.ColumnMappings.Add("draweenum", "draweenum")
            tableMapping.ColumnMappings.Add("draweedate", "draweedate")
            tableMapping.ColumnMappings.Add("amountinwords", "amountinwords")
            tableMapping.ColumnMappings.Add("amountinwords2", "amountinwords2")
            tableMapping.ColumnMappings.Add("uID", "uID")
            tableMapping.ColumnMappings.Add("pDate", "pDate")
            tableMapping.ColumnMappings.Add("consID", "consID")
            tableMapping.ColumnMappings.Add("seniorRmk", "seniorRmk")
            tableMapping.ColumnMappings.Add("seniorID", "seniorID")
            tableMapping.ColumnMappings.Add("totalDiscount", "totalDiscount")
            tableMapping.ColumnMappings.Add("nature1", "nature1")
            tableMapping.ColumnMappings.Add("nature2", "nature2")
            tableMapping.ColumnMappings.Add("nature3", "nature3")
            tableMapping.ColumnMappings.Add("nature4", "nature4")
            tableMapping.ColumnMappings.Add("nature5", "nature5")
            tableMapping.ColumnMappings.Add("nature6", "nature6")
            tableMapping.ColumnMappings.Add("nature7", "nature7")
            tableMapping.ColumnMappings.Add("nature8", "nature8")
            tableMapping.ColumnMappings.Add("code1", "code1")
            tableMapping.ColumnMappings.Add("code2", "code2")
            tableMapping.ColumnMappings.Add("code3", "code3")
            tableMapping.ColumnMappings.Add("code4", "code4")
            tableMapping.ColumnMappings.Add("code5", "code5")
            tableMapping.ColumnMappings.Add("code6", "code6")
            tableMapping.ColumnMappings.Add("code7", "code7")
            tableMapping.ColumnMappings.Add("code8", "code8")
            tableMapping.ColumnMappings.Add("amount1", "amount1")
            tableMapping.ColumnMappings.Add("amount2", "amount2")
            tableMapping.ColumnMappings.Add("amount3", "amount3")
            tableMapping.ColumnMappings.Add("amount4", "amount4")
            tableMapping.ColumnMappings.Add("amount5", "amount5")
            tableMapping.ColumnMappings.Add("amount6", "amount6")
            tableMapping.ColumnMappings.Add("amount7", "amount7")
            tableMapping.ColumnMappings.Add("amount8", "amount8")
            tableMapping.ColumnMappings.Add("collectorname", "collectorname")
            tableMapping.ColumnMappings.Add("cashCheck", "cashCheck")
            tableMapping.ColumnMappings.Add("checkCheck", "checkCheck")
            tableMapping.ColumnMappings.Add("MoneyOrderCheck", "MoneyOrderCheck")
            tableMapping.ColumnMappings.Add("moneyordernum", "moneyordernum")
            tableMapping.ColumnMappings.Add("moneyorderdate", "moneyorderdate")
            tableMapping.ColumnMappings.Add("orRemark", "orRemark")
            tableMapping.ColumnMappings.Add("consID1", "consID1")
            tableMapping.ColumnMappings.Add("ConsumerName", "ConsumerName")
            tableMapping.ColumnMappings.Add("cAddress", "cAddress")
            tableMapping.ColumnMappings.Add("contactNum", "contactNum")
            tableMapping.ColumnMappings.Add("isSC", "isSC")
            tableMapping.ColumnMappings.Add("seniorID1", "seniorID1")
            tableMapping.ColumnMappings.Add("agency", "agency")
            tableMapping.ColumnMappings.Add("gender", "gender")
            tableMapping.ColumnMappings.Add("penaltyAmt", "penaltyAmt")
            tableMapping.ColumnMappings.Add("billAmount", "billAmount")
            tableMapping.ColumnMappings.Add("adjustmentAmount", "adjustmentAmount")
            tableMapping.ColumnMappings.Add("PenaltyAmt", "PenaltyAmt")
            tableMapping.ColumnMappings.Add("EFAmt", "EFAmt")
            tableMapping.ColumnMappings.Add("ApplicationFee", "ApplicationFee")
            tableMapping.ColumnMappings.Add("ReconnectionFee", "ReconnectionFee")
            tableMapping.ColumnMappings.Add("TransferFee", "TransferFee")
            tableMapping.ColumnMappings.Add("ogID", "ogID")
            tableMapping.ColumnMappings.Add("overpayment", "overpayment")
            tableMapping.ColumnMappings.Add("acctID", "acctID")
            tableMapping.ColumnMappings.Add("acctID1", "acctID1")
            tableMapping.ColumnMappings.Add("consID2", "consID2")
            tableMapping.ColumnMappings.Add("classID", "classID")
            tableMapping.ColumnMappings.Add("brgyID", "brgyID")
            tableMapping.ColumnMappings.Add("clusterID", "clusterID")
            tableMapping.ColumnMappings.Add("Sequence", "Sequence")
            tableMapping.ColumnMappings.Add("AccountNo", "AccountNo")
            tableMapping.ColumnMappings.Add("receiptNo", "receiptNo")
            tableMapping.ColumnMappings.Add("StreetAddress", "StreetAddress")
            tableMapping.ColumnMappings.Add("MeterNo", "MeterNo")
            tableMapping.ColumnMappings.Add("MeterBrand", "MeterBrand")
            tableMapping.ColumnMappings.Add("MeterSize", "MeterSize")
            tableMapping.ColumnMappings.Add("MeterReference", "MeterReference")
            tableMapping.ColumnMappings.Add("ConnectionDate", "ConnectionDate")
            tableMapping.ColumnMappings.Add("AcctStatus", "AcctStatus")
            tableMapping.ColumnMappings.Add("CanDelete", "CanDelete")
            tableMapping.ColumnMappings.Add("isSenior", "isSenior")
            tableMapping.ColumnMappings.Add("seniorID2", "seniorID2")
            tableMapping.ColumnMappings.Add("AccountName", "AccountName")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.POSEIDON.My.MySettings.Default.poseidondbConnectionString6
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT * FROM narradb.tblor AS O LEFT JOIN consumerlist AS C ON O.consID=C.consID"& _ 
                " LEFT JOIN consumeraccounts AS A ON O.acctID=A.acctID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As reportingdataset.DailyCollectionDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As reportingdataset.DailyCollectionDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As reportingdataset.DailyCollectionDataTable = New reportingdataset.DailyCollectionDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ReaderListTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ReaderList"
            tableMapping.ColumnMappings.Add("AccountNo", "AccountNo")
            tableMapping.ColumnMappings.Add("AccountName", "AccountName")
            tableMapping.ColumnMappings.Add("StreetAddress", "StreetAddress")
            tableMapping.ColumnMappings.Add("AddBrgy", "AddBrgy")
            tableMapping.ColumnMappings.Add("meterno", "meterno")
            tableMapping.ColumnMappings.Add("ConnectionDate", "ConnectionDate")
            tableMapping.ColumnMappings.Add("StatusName", "StatusName")
            tableMapping.ColumnMappings.Add("MeterReference", "MeterReference")
            tableMapping.ColumnMappings.Add("AcctID", "AcctID")
            tableMapping.ColumnMappings.Add("sequence", "sequence")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.POSEIDON.My.MySettings.Default.poseidondbConnectionString6
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT A.AcctID, A.sequence, A.AccountNo, A.AccountName, A.StreetAddress, B.AddBr"& _ 
                "gy, A.meterno, A.ConnectionDate, S.StatusName, A.MeterReference FROM consumeracc"& _ 
                "ounts AS A LEFT JOIN brgylist AS B ON A.brgyID=B.brgyID LEFT JOIN accountstatus "& _ 
                "AS S ON A.acctstatus=S.staID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As reportingdataset.ReaderListDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As reportingdataset.ReaderListDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As reportingdataset.ReaderListDataTable = New reportingdataset.ReaderListDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As reportingdataset, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As reportingdataset, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As reportingdataset, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As reportingdataset) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
